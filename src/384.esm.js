var on=Object.defineProperty;var ln=Object.getOwnPropertyDescriptor;var b=(n,e,t,r)=>{for(var s=r>1?void 0:r?ln(e,t):e,a=n.length-1,i;a>=0;a--)(i=n[a])&&(s=(r?i(e,t,s):i(s))||s);return r&&s&&on(e,t,s),s};function ve(n,e,t){for(;n&&typeof n=="string";)try{n=JSON.parse(n,t)}catch(r){throw new Error(`JSON.parse() error${e?` at ${e}`:""}: ${r}
String (possibly nested) was: ${n}`)}return n}var cn=/^\s*[\[\{].*[\]\}]\s*$/;function Er(n){if(n===null)return null;if(typeof n=="string")if(cn.test(n))try{return n=JSON.parse(n),n}catch{return null}else return n;else return null}var Cr=n=>n instanceof ArrayBuffer?new DataView(n):new DataView(n.buffer,n.byteOffset,n.byteLength);function Ut(n,e){if(typeof n!=typeof e||n==null||e==null)return!1;let t=Cr(n),r=Cr(e);if(t.byteLength!==r.byteLength)return!1;for(let s=0;s<t.byteLength;s++)if(t.getUint8(s)!==r.getUint8(s))return!1;return!0}function te(n){let e=0;for(let s of n)e+=s.byteLength;let t=new Uint8Array(e),r=0;for(let s of n)t.set(new Uint8Array(s),r),r+=s.byteLength;return t.buffer}var Ot="=".repeat(76),qt=`
`+Ot+`
`,ls=`
`+Ot,cs=Ot+`
`;var Mr=!1;function Ae(n){let e=" *ErrorStart* ",t=" *ErrorEnd* ";return n instanceof d?n:n instanceof Error?(Mr&&console.error(`[WrapError] Error: 
`,n),new d(e+n.message+t)):new d(e+String(n)+t)}function St(n,e){let t="[_sb_exception] << SB lib error ("+n+": "+e+") >>";throw new d(t)}function y(n,e){if(!n){let t=` <<<<[_sb_assert] assertion failed: '${e}'>>>> `;throw Mr&&console.trace(t),new d(t)}}var d=class extends Error{constructor(e){super(e),this.name=this.constructor.name,typeof Error.captureStackTrace=="function"?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack}};var Ar=!1;function dn(n){return typeof n=="number"&&n>=-2147483648&&n<=2147483647&&n%1===0}function un(n){if(n===null)return"0";if(n===void 0)return"u";if(Array.isArray(n))return"a";if(n instanceof ArrayBuffer)return"x";if(n instanceof Uint8Array)return"8";if(typeof n=="boolean")return"b";if(n instanceof DataView)return"v";if(n instanceof Date)return"d";if(n instanceof Map)return"m";if(typeof n=="number")return dn(n)?"i":"n";if(n!==null&&typeof n=="object"&&n.constructor===Object)return"o";if(n instanceof Set)return"t";if(typeof n=="string")return"s";if(n instanceof WeakRef)return"w";if(typeof n=="object"&&typeof n.then=="function")console.error("[getType] Trying to serialize a Promise - did you forget an 'await'?");else{if(typeof n=="object"&&typeof n.toJSON=="function")return"j";console.error("[getType] Unsupported for object:",n)}throw new d("Unsupported type")}function Re(n){try{let e={},t=0,r=0,s=[];for(let l in n)if(n.hasOwnProperty(l)){let h=n[l],o=un(h);switch(o){case"o":let p=Re(h);if(!p)throw new d(`Failed to assemble payload for ${l}`);s.push(p);break;case"j":let m=Re(h.toJSON(""));if(!m)throw new d(`Failed to process toJSON for ${l}`);s.push(m);break;case"n":let w=new Uint8Array(8);new DataView(w.buffer).setFloat64(0,h),s.push(w.buffer);break;case"i":let x=new Uint8Array(4);new DataView(x.buffer).setInt32(0,h),s.push(x.buffer);break;case"d":let _=new Uint8Array(8);new DataView(_.buffer).setFloat64(0,h.getTime()),s.push(_.buffer);break;case"b":let fe=new Uint8Array(1);fe[0]=h?1:0,s.push(fe.buffer);break;case"s":let Me=new TextEncoder().encode(h);s.push(Me);break;case"x":s.push(h);break;case"8":s.push(h.buffer);break;case"m":let kt=new Array;h.forEach((G,A)=>{kt.push([A,G])});let rt=Re(kt);if(!rt)throw new d(`Failed to assemble payload for ${l}`);s.push(rt);break;case"a":let ye=new Array;h.forEach(G=>{ye.push(G)});let B=Re(ye);if(!B)throw new d(`Failed to assemble payload for ${l}`);s.push(B);break;case"t":let T=new Array;h.forEach(G=>{T.push(G)});let V=Re(T);if(!V)throw new d(`Failed to assemble payload for ${l}`);s.push(V);break;case"w":case"0":s.push(new ArrayBuffer(0));break;case"u":s.push(new ArrayBuffer(0));break;case"v":default:throw console.error(`[assemblePayload] Unsupported type: ${o}`),new d(`Unsupported type: ${o}`)}let g=s[s.length-1].byteLength;t++,e[t.toString()]={n:l,s:r,z:g,t:o},r+=g}let a=new TextEncoder().encode(JSON.stringify(e)),i=new Uint32Array([a.byteLength]);return te([i.buffer,a,...s])}catch(e){return console.error(e),null}}function D(n){Ar&&n instanceof ArrayBuffer&&console.warn("[assemblePayload] Warning: data is already an ArrayBuffer, make sure you are not double-encoding");let e=Re({ver003:!0,payload:n});return e?te([new Uint8Array([170,187,187,170]),e]):null}function hn(n,e){switch(e){case"o":return He(n);case"j":try{return JSON.parse(new TextDecoder().decode(n))}catch{return He(n)}case"n":return new DataView(n).getFloat64(0);case"i":return new DataView(n).getInt32(0);case"d":return new Date(new DataView(n).getFloat64(0));case"b":return new Uint8Array(n)[0]===1;case"s":return new TextDecoder().decode(n);case"a":let t=He(n);if(!t)throw new d(`Failed to assemble payload for ${e}`);return Object.values(t);case"m":let r=He(n);if(!r)throw new d(`Failed to assemble payload for ${e}`);let s=new Map;for(let c in r)s.set(r[c][0],r[c][1]);return s;case"t":let a=He(n);if(!a)throw new d(`Failed to assemble payload for ${e}`);let i=new Set;for(let c in a)i.add(a[c]);return i;case"x":return n;case"8":return new Uint8Array(n);case"0":return null;case"u":return;case"v":case"<unsupported>":default:throw new d(`Unsupported type: ${e}`)}}function He(n){let e="Cannot parse metadata, this is not a well-formed payload";try{let t=new Uint32Array(n.slice(0,4))[0],s=new TextDecoder().decode(n.slice(4,4+t)),a;try{a=ve(s,"L1290")}catch{throw new d(e)}let i=4+t,c={};for(let l=1;l<=Object.keys(a).length;l++){let h=l.toString();if(a[h]){let o=a[h],g=o.s,p=o.z,m=o.t,w=n.slice(i+g,i+g+p);c[o.n]=hn(w,m)}else console.log(`found nothing for index ${l}`)}return c}catch(t){throw t instanceof Error&&t.message===e?t:new d("[extractPayload] exception <<"+t+">> [/extractPayload]")}}function L(n){let e=r=>new Uint32Array(r,0,1)[0]===2864429994,t="Invalid payload signature (this is not a payload)";if(!e(n))throw Ar&&console.error(`
`,qt,t,`
`,n,qt),new d(t);return He(n.slice(4))}var at="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",gn=/^([A-Za-z0-9\-_]*)(={0,2})$/;function $(n){let e=n instanceof ArrayBuffer?new Uint8Array(n):n,t="";for(let r=0;r<e.length;r+=3){let s=e[r],a=e[r+1],i=e[r+2];t+=at[s>>2]+at[(s&3)<<4|a>>4]+(a!==void 0?at[(a&15)<<2|i>>6]:"")+(i!==void 0?at[i&63]:"")}return t}function X(n){if(n=n.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),!gn.test(n))throw new Error(`invalid character in b64 string (after cleanup: '${n}')`);let e=n.length,t=new Uint8Array(e*3/4);for(let r=0,s=0;r<e;r+=4){let[a,i,c,l]=[n[r],n[r+1],n[r+2],n[r+3]].map(h=>at.indexOf(h));t[s++]=a<<2|i>>4,c!==-1&&(t[s++]=(i&15)<<4|c>>2),l!==-1&&(t[s++]=(c&3)<<6|l)}return t}var Gt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",pn=Gt[0],it=/^[A-Za-z0-9]*$/;function $t(n){return it.test(n)}var Bt=32,Wt=new Map,Pr=new Map;for(let n=1;n<=Bt;n++){let e=Math.ceil(n*8/Math.log2(62));Wt.set(n,e),Pr.set(e,n)}var mn=Wt.get(Bt);function I(n){function e(s,a){let i="",c=0n;for(let l of s)c=c<<8n|BigInt(l);for(;c>0n;c=c/62n)i=Gt[Number(c%62n)]+i;return i.padStart(Wt.get(a),pn)}if(n==null)throw new Error("arrayBufferToBase62: buffer is null or undefined");let t=n instanceof ArrayBuffer?new Uint8Array(n):n,r="";for(let s=t.byteLength,a=0,i;s>0;a+=i,s-=i)i=s>=Bt?Bt:s,r+=e(t.slice(a,a+i),i);return r}function Y(n){if(!it.test(n))throw new Error("base62ToArrayBuffer: must be alphanumeric (0-9A-Za-z).");function e(t,r){try{let s=0n,a=new Uint8Array(r);for(let i=0;i<t.length;i++)s=s*62n+BigInt(Gt.indexOf(t[i]));if(s>2n**BigInt(r*8)-1n)throw new Error("base62ToArrayBuffer: Invalid Base62 string.");for(let i=r-1;i>=0;i--,s>>=8n)a[i]=Number(s&0xFFn);return a}catch{throw new Error("base62ToArrayBuffer: Invalid Base62 string.")}}try{let t=0,r=new Uint8Array(n.length*6/8);for(let s=0,a,i;s<n.length;s+=a,t+=i.byteLength)a=Math.min(n.length-s,mn),i=e(n.slice(s,s+a),Pr.get(a)),r.set(i,t);return r.buffer.slice(0,t)}catch(t){throw t}}async function xt(n,e,t,r,s){try{let a,i={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if(n==="jwk"){let c=e;if(c.kty===void 0)throw new Error("importKey() - invalid JsonWebKey");c.alg==="ECDH"&&(c.alg=void 0),a=await crypto.subtle.importKey("jwk",c,i[t],r,s)}else a=await crypto.subtle.importKey(n,e,i[t],r,s);return a}catch(a){let i=`... importKey() error: ${a}:`;throw new Error(i)}}var fn=!1,Vt=Zt;function Tr(n){Vt=n}function Ir(){return Vt}var Et=new Map;function Dr(){Et.forEach(n=>n.abort("ChannelApi.closeAll() called")),Et.clear()}async function Zt(n,e){let t=new AbortController,r=Symbol("fetch");Et.set(r,t);try{return await fetch(n,{...e,signal:t.signal})}catch(s){if(s instanceof d)throw s;let a=`${s}`;if(a.indexOf("connection closed before message completed")!==-1||a.indexOf("Connection reset by peer")!==-1||a.indexOf("The connection was reset")!==-1||a.indexOf("The server closed the connection")!==-1||a.indexOf("Please try sending the request again.")!==-1){console.warn(`... got error ('${a}'), retrying fetch() once again`);try{return await new Promise(i=>{setTimeout(()=>{i(fetch(n,{...e,signal:t.signal}))},0)})}catch{console.error("... got an error on retrying fetch()");let c=`[SBFetch] Error performing fetch() (after RETRY): ${s}`;throw new d(c)}}else{let i=`[SBFetch] Error performing fetch() (this might be normal): ${s}`;throw new d(i)}}finally{Et.delete(r)}}async function ae(n,e){let t;try{if(t=await Vt(n,e),!t)throw new d("[SBApiFetch] Server did not respond (might be expected)");if(!t.ok){let a=await t.text(),i=`[SBApiFetch] Server responded with error
`;throw t.status&&(i+=`  Status code: ('${t.status}')
`),t.statusText&&(i+=`  Status text: ('${t.statusText}')
`),a&&(i+=`  Error msg:   ('${a}')
`),fn&&console.log(i),new d(i)}let s=t.headers.get("content-type");var r;if(!s)throw new d("[SBApiFetch] No content header in server response");if(s.indexOf("application/json")!==-1){let a=await t.json();r=ve(a,"L489")}else if(s.indexOf("application/octet-stream")!==-1)r=L(await t.arrayBuffer()).payload;else throw s.indexOf("text/plain")!==-1?(r=await t.text(),new d(`[SBApiFetch] Server responded with text/plain (?):
('${r}')`)):new d(`[SBApiFetch] Server responded with unknown content-type header ('${s}')`);if(!r||r.error||r.success===!1){let a="[SBApiFetch] No server response, or cannot parse, or error in response";throw t.status&&(a+=" ["+t.status+"]"),r?.error&&(a+=": "+r.error),new d(a)}else return r}catch(s){throw t&&t.body&&!t.body.locked&&await t.body.cancel(),s instanceof d?s:new d(`[SBApiFetch] caught error: ${s}`)}}function Ct(n,e=200){return function(t,r,s){let a=s.value;s.value=function(...i){let c=0,l=async()=>{try{return await a.apply(this,i)}catch(h){if(c<n)return c++,console.warn(`Method '${r}' got an error (could be a timeout), will retry - next will be ${c}/${n}
Error was:`,h),await new Promise(o=>setTimeout(o,e)),l();throw h}};return l()}}}var Fr=Symbol("SBFile"),yn=!1,K=class n{_SBFSVersion="2024-02-01-0002";[Fr]=!0;static appServer;static MAX_SBFILE_CHUNK_SIZE=4*1024*1024;sb384app;sb384appType;sb384appVersion;hash;name;path;fullPath;type;size;actualFileSize;lastModified;fullName;metaDataString;timeStamp;fileMetaDataMap;fileLocation;file;handle;handleArray;hashArray;link;browserFile;constructor(e={}){let t=["actualFileSize","browserFile","file","fileLocation","fileMetaDataMap","fullName","fullPath","handle","handleArray","hash","hashArray","lastModified","link","metaDataString","name","path","sb384app","sb384appType","sb384appVersion","size","timeStamp","type"];for(let r of t){let s=r;e[r]!==void 0?this[s]=e[r]:delete this[s]}yn&&console.log(`SBFile constructor:
`,this)}toJSON(e){if(e&&e!==""&&console.log("SBFile toJSON key: ",e),this.size&&this.size>n.MAX_SBFILE_CHUNK_SIZE){if(this.hashArray&&this.hashArray.length>0)throw new Error("[SBFile object] Large file, and it has not yet been fully uploaded");if(!this.handleArray)throw new Error("[SBFile object] Large file must have handleArray");if(Math.ceil(this.size/n.MAX_SBFILE_CHUNK_SIZE)!==this.handleArray.length)throw new Error("[SBFile object] Large file size does not match number of expected shards")}else if(!(this.fileMetaDataMap&&this.fileMetaDataMap.size>0&&!this.handleArray))if(this.handle)this.handleArray||(this.handleArray=[this.handle]);else{if(this.fileLocation==="inline")throw new Error("[SBFile object] Inline files cannot be serialized");if(!this.handleArray||this.handleArray.length===0)throw new Error("[SBFile object] No handle nor handleArray, this is probably an error.");if(this.handleArray&&this.handleArray.length!==1)throw new Error("[SBFile object] Internal Error (L146)");if(this.handleArray&&this.handleArray[0].verification){let r=this.handleArray[0].verification;if(typeof r=="string")this.handleArray[0].verification=r;else throw new Error("[SBFile object] Cannot serialize unresolved handle yet (verification not resolved)");this.handle=this.handleArray[0]}else throw new Error("[SBFile object] Singleton shard, handle has no verification value, this is probably an error.")}let t={_SBFSVersion:this._SBFSVersion,actualFileSize:this.actualFileSize,fileLocation:this.fileLocation,fileMetaDataMap:this.fileMetaDataMap,fullName:this.fullName,fullPath:this.fullPath,handle:this.handle,handleArray:this.handleArray,hash:this.hash,lastModified:this.lastModified,link:this.link,metaDataString:this.metaDataString,name:this.name,path:this.path,sb384app:this.sb384app,sb384appType:this.sb384appType,sb384appVersion:this.sb384appVersion,size:this.size,timeStamp:this.timeStamp,type:this.type};return t=Object.fromEntries(Object.entries(t).filter(([r,s])=>s!==void 0)),t}};function Qt(n){return n[Fr]===!0||n instanceof K||n._SBFSVersion==="2024-02-01-0002"}var Mt=!1,zr="--------------------------------",Yt=new Map;function Jt(n){if(typeof n>"u")return;let e=n;if(e.data)if(e.data instanceof WeakRef){let t=e.data.deref();return t||void 0}else{if(e.data instanceof ArrayBuffer)return e.data;throw new Error("Invalid data type in handle")}}function bn(n){if(n){if(n.version==="3"&&typeof n.id=="string"&&n.id.length===43&&it.test(n.id)&&n.iv instanceof Uint8Array&&n.iv.byteLength===12&&n.salt instanceof ArrayBuffer&&n.salt.byteLength===16&&n.data instanceof ArrayBuffer&&n.actualSize===n.data.byteLength)return n;throw new Error("invalid Shard")}else throw new Error("invalid Shard (ObjectHandle) (null or undefined)")}function Pt(n,e){return new Promise((t,r)=>{try{xt("raw",n,"PBKDF2",!1,["deriveBits","deriveKey"]).then(s=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:1e5,hash:"SHA-256"},s,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then(a=>{t(a)})})}catch(s){r(s)}})}function Xt(n){let e=n.slice(-4);var t=new DataView(e).getUint32(0);let r=new DataView(e).getUint32(0,!0);return r<t&&(t=r),n.slice(0,t)}async function wn(n,e,t){try{let r=bn(await ae(n+e,{method:"GET"}));y(t.key,"object handle 'key' is missing, cannot decrypt"),t.iv=r.iv,t.salt=r.salt,t.data=new WeakRef(r.data);let s=Y(t.key),a=await Pt(s,t.salt),i=await crypto.subtle.decrypt({name:"AES-GCM",iv:t.iv},a,r.data),c=Xt(i),l=I(await crypto.subtle.digest("SHA-256",c)).slice(0,12);return t.hash&&t.hash!==l&&console.error("[fetchData] Hash mismatch in object, internal error (L4730) but ignored"),t.payload=L(c).payload,t.data=new WeakRef(r.data),{hash:l,handle:t}}catch(r){Mt&&console.log(`fetchData(): trying to get object on '${n}' failed: '${r}'`);return}}async function Tt(n){if(!n)throw new Error("[fetchData] No handle provided (cannot accept null or undefined)");n.storageServer||console.warn("[fetchData] No storage server in handle, probably an error. Will only probe for local mirror.");let e=n;Mt&&console.log("fetchData(), handle:",e);let t=await e.verification,r=e.storageServer?e.storageServer:null,s="http://localhost:3841";for(let a of[r,s]){if(!a)continue;Mt&&console.log(`
`,zr,"fetchData(), trying server: ",a,`
`,zr);let i="/api/v2/fetchData?id="+e.id+"&verification="+t,c=await wn(a,i,e);if(c){let{hash:l,handle:h}=c;return Mt&&console.log(`[fetchData] success: fetched from '${a}'`,c),h.storageServer=a,Yt.set(l,h),h}}throw new Error("[fetchData] failed to fetch from any server")}async function At(n){if(!n)throw new Error("[fetchPayload] No handle provided (cannot accept null or undefined)");if(!n.payload&&!n.data&&(n=await Tt(n)),n.payload)return n.payload;if(n.data)return Jt(n);throw new Error("[fetchPayload] Failed to fetch data or payload")}async function _r(n){let e;if(Qt(n)){let t=new K(n);if(t.fileLocation==="inline"){if(t.file instanceof ArrayBuffer)return t.file;throw new d("[fetchPayload] Inline files must have 'file' (ArrayBuffer) property set")}if(t.browserFile&&t.browserFile.size>K.MAX_SBFILE_CHUNK_SIZE)return t.browserFile.arrayBuffer();if(t.handle)e=t.handle;else{if(!t.handleArray||t.handleArray.length===0)throw new d("[fetchPayload] No handle or handleArray in SBFile - need to hook up BrowserFileHelper.knownBuffers?");if(t.handleArray.length===1)e=t.handleArray[0];else{if(!t.size)throw new d("[fetchPayload] No size in SBFile (large file)");if(!t.handleArray||t.handleArray.length===0)throw new d("[fetchPayload] No handleArray in SBFile (large file)");let r=Math.ceil(t.size/K.MAX_SBFILE_CHUNK_SIZE);if(t.handleArray.length!==r)throw new d("[fetchPayload] Size does not match number of expected shards");let s=new ArrayBuffer(t.size),a=new Uint8Array(s),i=0;for(let c of t.handleArray){console.log("Fetching and assembling payload from:",c);let l=await At(c);if(!l)throw new d("[fetchPayload] No chunk in SBFile");if(!(l instanceof ArrayBuffer))throw new d("[fetchPayload] Chunk is not ArrayBuffer");if(l.byteLength>K.MAX_SBFILE_CHUNK_SIZE)throw new d("[fetchPayload] Chunk size is too large");if(i===r-1&&l.byteLength!==t.size%K.MAX_SBFILE_CHUNK_SIZE)throw new d("[fetchPayload] Last chunk size does not match expected size");if(i<r-1&&l.byteLength!==K.MAX_SBFILE_CHUNK_SIZE)throw new d("[fetchPayload] Chunk size does not match expected size");a.set(new Uint8Array(l),i*K.MAX_SBFILE_CHUNK_SIZE),i+=1}return s}}}else e=n;if(!e)throw new d("[fetchPayload] No handle provided");return At(e)}var vn=!1,Lr="LM2r",er=Symbol.for("SBStorageToken");function tr(n){return Object.getPrototypeOf(n)===Object.prototype&&n.hash&&typeof n.hash=="string"&&n.hash.length>0&&(!n.size||Number.isInteger(n.size)&&n.size>0)&&(!n.motherChannel||typeof n.motherChannel=="string")&&(!n.created||Number.isInteger(n.created))&&(!n.used||typeof n.used=="boolean")}function le(n){if(n){if(n[er])return n;if(typeof n=="string"&&n.slice(0,4)===Lr)return{[er]:!0,hash:n};if(tr(n))return{...n,[er]:!0};throw vn&&console.error(`invalid SBStorageToken ... trying to ingest:
`,n),new d("invalid SBStorageToken")}else throw new d("invalid SBStorageToken (null or undefined)")}function kn(){return Lr+I(crypto.getRandomValues(new Uint8Array(32)).buffer)}var Sn=!1,rr="3",It=Symbol.for("ObjectHandle");function Bn(n){return Object.getPrototypeOf(n)===Object.prototype&&(!n.version||n.version===rr)&&n.id&&typeof n.id=="string"&&n.id.length===43&&(!n.key||typeof n.key=="string"&&n.key.length===43)&&(!n.verification||typeof n.verification=="string"||typeof n.verification=="object")&&(!n.iv||typeof n.iv=="string"||n.iv instanceof Uint8Array)&&(!n.salt||typeof n.salt=="string"||n.salt instanceof ArrayBuffer)}function ot(n){if(n){if(n[It])return n;if(Bn(n))return{...n,[It]:!0};throw Sn&&console.error(`invalid ObjectHandle ... trying to ingest:
`,n),new Error("invalid ObjectHandle")}else throw new Error("invalid ObjectHandle (null or undefined)")}async function xn(n){return n.iv&&(n.iv=typeof n.iv=="string"?n.iv:I(n.iv)),n.salt&&(n.salt=typeof n.salt=="string"?n.salt:I(n.salt)),n.verification=await n.verification,ot(n)}var ke=!1,Z=class n{#e;#t="";static#r=0;static getObjectKey=Pt;constructor(e){e&&(this.#e=e,this.#n().then(t=>{if(!t){ke&&console.error("[StorageApi] Could not (immediately) resolve storage server");let r=setInterval(async()=>{if(v.isShutdown)clearInterval(r),ke&&console.error("[StorageApi] Shutting down, will not retry getting storage server");else{let s=await this.#n();s&&(clearInterval(r),ke&&console.log(`[StorageApi] ... eventually resolved storage server ('${s}')`))}},1e3)}}))}async#n(){if(this.#t)return this.#t;if(!this.#e)ke&&console.warn("[StorageApi] No server information known (neither channel or storage)");else{let e=await v.getServerInfo(this.#e);if(!e)return"";if(e&&!e.storageServer)throw new d("[StorageApi] Server available did not provide storage server name, cannot initialize. Should not happen [L4651]");ke&&console.log("[StorageApi] Fyi, server returned info info:",e),this.#t=e.storageServer}return this.#t}async getStorageServer(){let e=await this.#n();if(e)return e;throw new d("[StorageApi] Identity of storage server is not (yet) known.")}static padBuf(e){let t=e.byteLength,r,s=4096,a=1048576,i=4;t+i<s?r=s:t+i<a?r=2**Math.ceil(Math.log2(t+i)):r=Math.ceil((t+i)/a)*a;let c=te([e,new Uint8Array(r-t).buffer]);return new DataView(c).setUint32(r-i,t),f&&console.log("padBuf bytes:",c.slice(-i)),c}static unpadBuf(e){return Xt(e)}static async getObjectId(e,t,r){f&&console.log(u,"getObjectId()",u,e,u,t,u,r,u);let s=await crypto.subtle.digest("SHA-256",te([e,t,r]));return I(s)}static async paceUploads(){for(ke&&console.log("+++++ [paceUploads] called, backlog is:",n.#r);n.#r>8;)ke&&console.log("+++++ [paceUploads] waiting for server, backlog is:",n.#r),await new Promise(e=>setTimeout(e,25))}async storeData(e,t){n.#r++;try{let r=D(e);if(!r)throw new d("[storeData] failed to assemble payload");let s=I(await crypto.subtle.digest("SHA-256",r)).slice(0,12),a=n.padBuf(r),i=await U.generateIdKey(a),c=await this.getStorageServer(),l=I(i.idBinary),h=c+"/api/v2/storeRequest?id="+l,o=await ae(h);if(!o.salt||!o.iv)throw new d("[storeData] Failed to get key info (salt, nonce) from storage server");let g=await Pt(i.keyMaterial,o.salt),p=await U.encrypt(a,g,{iv:o.iv}),m;if(t instanceof C)m=await t.getStorageToken(p.byteLength);else if(Pe(t))m=await(await new C(t).ready).getStorageToken(p.byteLength);else if(tr(t))m=le(t);else throw new d("[storeData] invalid budget source (needs to be a channel, channel handle, or storage token)");let w=await n.getObjectId(o.iv,o.salt,p),x=c+"/api/v2/storeData?id="+w,_={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:D({id:w,iv:o.iv,salt:o.salt,storageToken:m,data:p})};f&&console.log("5555 5555 [storeData] storeQuery:",u,x,u);let fe=await ae(x,_),Me={[It]:!0,version:rr,id:w,key:I(i.keyMaterial),iv:o.iv,salt:o.salt,hash:s,verification:fe.verification,storageServer:c};return ke&&console.log("storeData() - success, handle:",Me,p),Me}catch(r){throw console.error("[storeData] failed:",r),r instanceof d?r.message.includes("Not enough storage budget")?new d("Not enough storage budget"):r:new d(`[storeData] failed to store data: ${r}`)}finally{n.#r--}}async fetchData(e){if(!e)throw new d("[fetchData] No handle provided (cannot accept null or undefined)");let t=await this.getStorageServer();e.storageServer?e.storageServer!==t&&console.warn(`[fetchData] handle has different storage server than current server (possibly an error). Handle has '${e.storageServer}', StorageApi server is '${t}'`):e.storageServer=t;let r=ot(e);if(v.shardBreakpoints.has(r.id))debugger;return Tt(r)}static getData(e){if(typeof e>"u")return;let t=ot(e);return Jt(t)}async fetchPayload(e){if(!e)throw new d("[fetchPayload] No handle provided (cannot accept null or undefined)");if(!e.payload&&!e.data&&(e=await this.fetchData(e)),e.payload)return e.payload;if(e.data)return n.getData(e);throw new d("[fetchPayload] Failed to fetch data or payload")}};var Ue=!1,Se=class{queue=[];resolve=null;reject=null;closed=!1;error=null;enqueue(e){if(Ue&&console.log(`[MessageQueue] Enqueueing. There were ${this.queue.length} messages in queue`),this.closed)throw new d("[MessageQueue] Error, trying to enqueue to closed queue");if(this.resolve){if(this.queue.length>0)throw new d("[MessageQueue] Error, queue should be empty when resolve is set");this.resolve(e),this.resolve=null,this.reject=null}else this.queue.push(e)}async dequeue(){if(Ue&&console.log(`[MessageQueue] Dequeueing. There are ${this.queue.length} messages left`),this.queue.length>0){let e=this.queue.shift();return this.closed?Promise.reject(e):(Ue&&console.log(u,u,u,`[MessageQueue] Dequeueing. Returning item.
`,e,u),Promise.resolve(e))}else return this.closed?null:new Promise((e,t)=>{this.resolve=e,this.reject=t})}isEmpty(){return this.queue.length===0}close(e="close"){Ue&&console.log(`[MessageQueue] Closing. There are ${this.queue.length} messages left. Close reason: ${e}`),this.closed=!0,this.error=e,this.reject&&this.reject(this.error)}async drain(e){for(Ue&&console.log("[MessageQueue] Draining."),this.closed||this.close(e||"drain");this.queue.length>0;)Ue&&console.log(`[MessageQueue] Draining. There are ${this.queue.length} messages left.`),await new Promise(t=>setTimeout(t,0))}};var lt=8388608;var Nr=Symbol("SB_CHANNEL_MESSAGE_SYMBOL");function Oe(n){if(n&&n.iv&&n.iv instanceof ArrayBuffer&&(n.iv=new Uint8Array(n.iv)),n){if(n[Nr])return n;if(n.f&&he(n.f)&&(n.c&&!n.stringMessage&&n.c instanceof ArrayBuffer||n.c&&n.stringMessage&&typeof n.c=="string")&&n.ts&&Number.isInteger(n.ts)&&n.iv&&n.iv instanceof Uint8Array&&n.iv.length===12&&n.salt&&n.salt instanceof ArrayBuffer&&n.salt.byteLength===16&&n.s&&n.s instanceof ArrayBuffer&&(n.cs===void 0||typeof n.cs=="string")&&(!n.sts||Number.isInteger(n.sts))&&(!n._id||typeof n._id=="string"&&n._id.length===86)&&(!n.ready||typeof n.ready=="boolean")&&(!n.timestampPrefix||typeof n.timestampPrefix=="string"&&n.timestampPrefix.length===26)&&(!n.channelId||typeof n.channelId=="string"&&n.channelId.length===43)&&(!n.i2||typeof n.i2=="string"&&/^[a-zA-Z0-9_]{4}$/.test(n.i2))&&(n.ttl===void 0||Number.isInteger(n.ttl)&&n.ttl>=0&&n.ttl<=15)&&(!n.t||he(n.t)))return{...n,[Nr]:!0};throw f&&console.error(`invalid ChannelMessage ... trying to ingest:
`,n),new d("invalid ChannelMessage")}else throw new d("invalid ChannelMessage (null or undefined)")}function nr(n,e=!1){f&&console.log(`stripping message:
`,n);let t={};if(n.f!==void 0)t.f=n.f;else throw new d("ERROR: missing 'f' ('from') in message");if(n.c!==void 0)t.c=n.c;else throw new d("ERROR: missing 'c' ('encrypted contents') in message");if(n.iv!==void 0)t.iv=n.iv;else if(!n.stringMessage)throw new d("ERROR: missing 'iv' ('nonce') in message");if(n.salt!==void 0)t.salt=n.salt;else throw new d("ERROR: missing 'salt' in message");if(n.s!==void 0)t.s=n.s;else if(!n.stringMessage)throw new d("ERROR: missing 's' ('signature') in message");if(n.ts!==void 0)t.ts=n.ts;else throw new d("ERROR: missing 'ts' ('timestamp') in message");if(n.sts!==void 0)t.sts=n.sts;else if(e)throw new d("ERROR: missing 'sts' ('servertimestamp') in message");return n.ttl!==void 0&&n.ttl!==15&&(t.ttl=n.ttl),n.t!==void 0&&(t.t=n.t),n.i2!==void 0&&n.i2!=="____"&&(t.i2=n.i2),n.cs!==void 0&&(t.cs=n.cs),t}var jr="0123456789ADMRTxQjrEywcLBdHpNufk",ca=new RegExp(`[${jr}.concat(' ')]`);function Kr(n){let e=jr;if(n<0||n>524287)throw new Error("Input number is out of range. Expected a 19-bit integer.");let t=[n>>14&31,n>>9&31,n>>4&31,n&15];return t[3]|=(t[0]^t[1]^t[2])&16,t.map(r=>e[r]).join("")}function Rr(n){return $(Y(n))}function Te(n){return I(X(n))}var En={arrayBufferToBase62:I,arrayBufferToBase64url:$,assemblePayload:D,base62ToArrayBuffer:Y,base62ToBase64:Rr,base64ToArrayBuffer:X,base64ToBase62:Te,compareBuffers:Ut,extractPayload:L,isBase62Encoded:$t};var Cn=!1,O=class O{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#e;#t;#r;#n;#s;#o;#l;#i;#c;#a;errorState=!1;constructor(e,t){this[O.ReadyFlag]=!1,this.sb384Ready=new Promise(async(r,s)=>{try{if(e)if(e instanceof CryptoKey){let l=await U.exportKey("jwk",e);y(l&&l.x&&l.y,"INTERNAL"),l.d?(this.#e=!0,this.#s=l.d):(this.#e=!1,y(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#t=l.x,this.#r=l.y}else if(e&&e instanceof Object&&"kty"in e){let l=e;y(l&&l.x&&l.y,"Cannot parse format of JWK key"),e.d?(this.#e=!0,this.#s=l.d):(this.#e=!1,y(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#t=l.x,this.#r=l.y}else if(typeof e=="string"){let l=ct(e);if(!l)throw Cn&&console.trace(`SB384() - failed to parse key, trying to create new key pair from '${e}'`),new d("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");let{x:h,y:o,d:g}=l;g?(this.#e=!0,this.#s=g):(this.#e=!1,y(!t,"ERROR creating SB384 object: key provided is not the requested private")),y(h&&o,"INTERNAL"),this.#t=h,this.#r=o}else throw new d("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");else{f&&console.log("SB384() - generating new key pair");let l=await U.generateKeys(),h=await U.exportKey("jwk",l.privateKey);y(h&&h.x&&h.y&&h.d,"INTERNAL"),this.#e=!0,this.#t=h.x,this.#r=h.y,this.#s=h.d,f&&console.log("#### FROM SCRATCH",this.#e)}if(f&&console.log(`SB384() constructor; x/y/d:
`,this.#t,`
`,this.#r,`
`,this.#s),this.#e&&(this.#o=await U.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#l=await U.importKey("jwk",this.jwkPublic,"ECDH",!0,[]),this.#e){let l={...this.jwkPrivate,key_ops:["sign"]};f&&console.log(`starting jwk (private):
`,l),this.#i=await crypto.subtle.importKey("jwk",l,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"])}else{let l={...this.jwkPublic,key_ops:["verify"]};f&&console.log(`starting jwk (public):
`,l),this.#i=await crypto.subtle.importKey("jwk",l,{name:"ECDSA",namedCurve:"P-384"},!0,["verify"])}let a=te([X(this.#t),X(this.#r)]),i=await crypto.subtle.digest("SHA-256",a);this.#c=I(i);let c=BigInt("0x"+Array.from(new Uint8Array(i)).map(l=>l.toString(16).padStart(2,"0")).join(""))>>28n;this.#a=Array.from({length:12},(l,h)=>Kr(Number(c>>BigInt(19*(11-h))&0x7ffffn))).join(""),f&&console.log(`SB384() constructor; hash:
`,this.#c),this.#n=Dt(this.#r),f&&console.log("SB384() - constructor wrapping up",this),this[O.ReadyFlag]=!0,r(this)}catch(a){s("ERROR creating SB384 object failed: "+Ae(a))}})}get SB384ReadyFlag(){return this[O.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#e}get hash(){return this.#c}get hashB32(){return this.#a}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new d("this is a public key, there is no 'privateKey' value");return this.#o}get signKey(){return this.#i}get publicKey(){return this.#l}get jwkPrivate(){return y(this.#e,"jwkPrivate() - not a private key"),y(this.#t&&this.#r&&this.#s,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#t,y:this.#r,d:this.#s}}get jwkPublic(){return y(this.#t&&this.#r,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#t,y:this.#r}}get ySign(){return y(this.#n!==null,"ySign() - ySign is not available (fatal)"),this.#n}get userPublicKey(){return y(this.#t&&this.#n!==void 0,"userPublicKey() - sufficient key info is not available (fatal)"),"PNk"+(this.#n===0?"2":"3")+Te(this.#t)}get userPrivateKey(){y(this.#e,"userPrivateKey() - not a private key, there is no userPrivateKey");let e=sr(this.#t,this.#s,this.#n);return y(e!==void 0,"userPrivateKey() - failed to construct key, probably missing info (fatal)"),e}get userPrivateKeyDehydrated(){return y(this.#e&&this.#s,"userPrivateKey() - not a private key, and/or 'd' is missing, there is no userPrivateKey"),"Xj3x"+Te(this.#s)}get binaryD(){if(!this.#e||!this.#s)throw new d("binaryD() - not a private key, and/or 'd' is missing, there is no userPrivateKey");return X(this.#s)}static async newPrivateKey(){return(await new O().ready).userPrivateKey}};b([P,E],O.prototype,"private",1),b([P,E],O.prototype,"hash",1),b([P,E],O.prototype,"hashB32",1),b([P,E],O.prototype,"userId",1),b([P,E],O.prototype,"ownerChannelId",1),b([P,E],O.prototype,"privateKey",1),b([P,E],O.prototype,"signKey",1),b([P,E],O.prototype,"publicKey",1),b([P],O.prototype,"jwkPrivate",1),b([P],O.prototype,"jwkPublic",1),b([P],O.prototype,"ySign",1),b([P],O.prototype,"userPublicKey",1),b([P],O.prototype,"userPrivateKey",1),b([P],O.prototype,"userPrivateKeyDehydrated",1),b([P],O.prototype,"binaryD",1);var Ie=O;var ar=!1,ge=class ge extends Ie{#e;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#t;channelServer;constructor(e){let t;if(e===null)throw new d("ChannelKeys constructor: you cannot pass 'null'");if(e)if(typeof e=="string"){let r=e;super(r,!0)}else if(Pe(e)){let r=Fe(e);t=r.channelServer,super(r.userPrivateKey,!0),this.#e=r.channelId,this.#t=r.channelData}else throw new d("ChannelKeys() constructor: invalid parameter (must be ChannelHandle or SBUserPrivateKey)");else super();t||(t=v.defaultChannelServer),t[t.length-1]==="/"&&(this.channelServer=t.slice(0,-1)),this.channelServer=t,this[ge.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise(async(r,s)=>{try{if(ar&&console.log("ChannelKeys() constructor."),await this.sb384Ready,y(this.private,"Internal Error [L2833]"),!this.#e||this.owner)this.#e||(this.#e=this.ownerChannelId),this.#t={channelId:this.ownerChannelId,ownerPublicKey:this.userPublicKey};else if(!this.#t){if(!this.channelServer)throw new d("ChannelKeys() constructor: either key is owner key, or handle contains channelData, or channelServer is provided ...");ar&&console.log("++++ ChannelKeys being initialized from server");var a;try{a=await this.callApi("/getChannelKeys")}catch{for(;;){let c=0;await new Promise(l=>setTimeout(l,75));try{a=await this.callApi("/getChannelKeys");break}catch{if(c++>6)throw new d("ChannelKeys() constructor: failed to get channel data, retrying ...");console.error("ChannelKeys() constructor: failed to get channel data, retrying ...")}}}a=Ft(a),y(a.channelId===this.#e,"Internal Error (L2493)"),this.#t=a}this[ge.ReadyFlag]=!0,r(this)}catch(i){s("[ChannelKeys] constructor failed. "+Ae(i))}})}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[ge.ReadyFlag]}get owner(){return this.private&&this.ownerChannelId&&this.channelId&&this.ownerChannelId===this.channelId}get channelId(){if(this.#e)return this.#e;throw new d("[ChannelKeys] ChannelID not known / object not ready. Internal Error (L894)")}get channelData(){return this.#t}get handle(){return{[qe]:!0,channelId:this.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData}}async buildApiBody(e,t){await this.sb384Ready;let r=await v.dateNow(),s=new ArrayBuffer(8);new DataView(s).setFloat64(0,r);let i=new TextEncoder().encode(e).buffer,c=te([s,i]),l=t?D(t):void 0,h=await U.sign(this.signKey,l?te([c,l]):c),o={channelId:this.#e,path:e,userId:this.userId,userPublicKey:this.userPublicKey,timestamp:r,sign:h};return l&&(o.apiPayloadBuf=l),ir(o)}callApi(e,t){return y(this.channelServer,"[ChannelApi.callApi] channelServer is unknown (you can just set it, eg 'channel.channelServer = ...')"),ar&&console.log("ChannelApi.callApi: calling fetch with path:",e),f&&console.log("... and body:",t),y(this.#e&&e,"Internal Error (L2528)"),new Promise(async(r,s)=>{let a={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:D(await this.buildApiBody(e,t))};f&&console.log(`==== ChannelApi.callApi: calling fetch with init:
`,a),ae(this.channelServer+"/api/v2/channel/"+this.#e+e,a).then(i=>{r(i)}).catch(i=>{i instanceof d?s(i):s("[Channel.callApi] Error: "+Ae(i))})})}};b([P],ge.prototype,"owner",1),b([P],ge.prototype,"channelId",1),b([P,E],ge.prototype,"channelData",1),b([P,E],ge.prototype,"handle",1);var De=ge;var dt=!1,ze=class{#e;#t;constructor(e,t){if(this.#t=t,!this.#t||!this.#t.salt1||!this.#t.iterations1||!this.#t.hash1)throw new Error("Protocol_AES_GCM_256() - insufficient key info (fatal)");this.#e=this.initializeMasterKey(e)}async ready(){await this.#e}async setChannel(e){}async initializeMasterKey(e){let t=this.#t.salt1,r=this.#t.iterations1,s=this.#t.hash1;y(t&&r&&s,"Protocol_AES_GCM_256.initializeMasterKey() - insufficient key info (fatal)");let a=await crypto.subtle.importKey("raw",new TextEncoder().encode(e),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),i=await crypto.subtle.deriveBits({name:"PBKDF2",salt:t,iterations:r,hash:s},a,256);return crypto.subtle.importKey("raw",i,{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}static async genKey(){return{salt1:crypto.getRandomValues(new Uint8Array(16)).buffer,iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}}async#r(e){if(!e||!(e instanceof ArrayBuffer))throw new Error("Protocol_AES_GCM_256 - salt missing (fatal)");let t=await crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:this.#t.iterations2,hash:this.#t.hash1},await this.#e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);if(dt){let r=(await crypto.subtle.exportKey("jwk",t)).k;if(!r)throw new Error("Internal Error (L136)");console.log("++++ Protocol_AES_GCM_256.#getMessageKey() - key (k):",r)}return t}async encryptionKey(e){return this.#r(e.salt)}async decryptionKey(e){return this.#r(e.salt)}};function Be(n){return _e.keyToName.get(n)||n.slice(0,6)}function Hr(n){return _e.keyToName.get(n)||n.slice(4,12)+"..."+n.slice(-4)}var _e=class{#e;#t=new Map;static keyToName=new Map;constructor(){}async setChannel(e){this.#e=e}async#r(e,t){if(!this.#t.has(t)){let s=await this.#e.getVisitorKeyFromID(t);if(!s)throw new Error(`Protocol_ECDH.#getKey() - visitor key not found for '${t}'`);let a=await new Ie(s).ready;if(a.userId!==t)throw new Error("Visitor key not consistent. Internal Error (L176)");let i=await crypto.subtle.deriveKey({name:"ECDH",public:a.publicKey},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);this.#t.set(t,i)}let r=this.#t.get(t);if(!r)throw new Error("Internal Error (L205)");return r}async encryptionKey(e){let t=await this.#e.ready,r=e.f;if(!r||r!==t.userId)throw dt&&console.error(`[${Be(t.userId)}] ERROR. sender missing or it's not us. Sender is:`,r),new Error("Protocol_ECDH.encryptionKey() - sender is missing or it's not us (error)");let s=e.t?e.t:t.channelId;if(!s||!he(s))throw new Error("Protocol_ECDH.encryptionKey() - recipient is missing or it's not a SBUserId (error)");let a=await this.#r(t.privateKey,s);if(dt){let i=(await crypto.subtle.exportKey("jwk",a)).k;if(!i)throw new Error("Internal Error (L175)");console.log(`[${Be(t.userId)}] ++++ Protocol_ECDH. +EN+ cryptionKey() -  from us and to:`,Hr(s),"key:",i)}return a}async decryptionKey(e){let t=await this.#e.ready,r=e.t?e.t:t.channelId,s=e.f;if(!s||!he(s))throw new Error("Protocol_ECDH.decryptionKey() - sender is missing or not a valid SBUserId");if(r!==t.userId&&s!==t.userId){dt&&console.log(`[${Be(t.userId)}] ++++ Protocol_ECDH.decryptionKey() - neither to nor from us (from [${Be(s)}] to [${Be(r)}])`);return}let a;if(s===t.userId?a=await this.#r(t.privateKey,r):a=await this.#r(t.privateKey,s),dt){let i=(await crypto.subtle.exportKey("jwk",a)).k;if(!i)throw new Error("Internal Error (L241)");console.log(`[${Be(t.userId)}] ++++ Protocol_ECDH. -DE- cryptionKey() - from [${Be(s)}] to [${Be(r)}], key:`,Hr(i))}return a}};var Mn=!1;function Ur(n){if(n){if(n.body!==void 0&&n.body!==null&&n.channelId&&typeof n.channelId=="string"&&n.channelId.length===43&&n.sender&&typeof n.sender=="string"&&n.sender.length===43&&n.senderPublicKey&&typeof n.senderPublicKey=="string"&&n.senderPublicKey.length>0&&n.senderTimestamp&&Number.isInteger(n.senderTimestamp)&&n.serverTimestamp&&Number.isInteger(n.serverTimestamp)&&n._id&&typeof n._id=="string"&&n._id.length===75)return n;throw Mn&&console.error(`invalid Message ... trying to ingest:
`,n),new d("invalid Message")}else throw new d("invalid Message (null or undefined)")}var An="=".repeat(76),zt=`
`+An+`
`,_t=!1;if(_t)throw new Error("TEST_WITH_SMALL_BRANCHING is set, but DBG0 or DBG1 is not set");var Ge=class n{constructor(e=!1){this.isLeaf=e}childrenNodes=[];childrenValues=[];from=void 0;to=void 0;count=0;isFull=!1;height=1;frozenChunkId=void 0;async insertTreeNodeValue(e,t){if(this.isFull)throw new Error("Should not be inserting here");let{count:r,from:s,to:a}=t;if(this.count+=r,N(this.from)!==N(this.to))throw new Error("Internal Error (L52)");if(N(this.from)||N(this.to))this.from=s,this.to=a;else if(a>this.to)this.to=a;else throw new Error("Internal Error (L59)");if(this.isLeaf){if(this.childrenValues.push(t),this.childrenValues.length===e.branchFactor){this.isFull=!0;let i=this.export();this.frozenChunkId=await e.freeze(i),this.childrenValues.length=0}}else if(this.childrenNodes.length===0||this.childrenNodes[this.childrenNodes.length-1].isFull){if(this.childrenNodes.length===e.branchFactor)throw new Error("Internal Error (L77)");let i=new n(!0);await i.insertTreeNodeValue(e,t),this.childrenNodes.push(i)}else if(await this.childrenNodes[this.childrenNodes.length-1].insertTreeNodeValue(e,t),this.childrenNodes[this.childrenNodes.length-1].isFull&&this.childrenNodes.length===e.branchFactor){let i=!0,c=0;for(c=0;c<this.childrenNodes.length-1;c++)if(this.childrenNodes[c].height!==this.childrenNodes[c+1].height){i=!1;break}if(i)this.isFull=!0,this.frozenChunkId=await e.freeze(this.export()),this.childrenNodes.length=0;else{let l=new n;l.childrenNodes=this.childrenNodes.splice(c+1),l.count=l.childrenNodes.map(o=>o.count).reduce((o,g)=>o+g,0);let h=l.childrenNodes.map(o=>o.height).reduce((o,g)=>Math.max(o,g),0)+1;l.height=h,l.from=l.childrenNodes[0].from,l.to=l.childrenNodes[l.childrenNodes.length-1].to,this.childrenNodes.push(l)}}}async traverse(e,t,r=!1){if(r||await t(this),!N(this.frozenChunkId))n.import(await e.deFrost(this.frozenChunkId)).traverse(e,t,r);else if(r)for(let s=this.childrenNodes.length-1;s>=0;s--)await this.childrenNodes[s].traverse(e,t,r);else for(let s of this.childrenNodes)await s.traverse(e,t,r);r&&await t(this)}async*_iterateValues(e,t=!1,r){if(e.childrenValues.length>0){if(r>e.childrenValues.length)return r-e.childrenValues.length;if(e.childrenValues.length>0){let s=(t?e.childrenValues.slice().reverse():e.childrenValues).slice(r);for(let a of s)yield a;return 0}}return r}async*traverseGenerator(e,t,r,s=!1,a){if(!e)throw new Error("Internal Error (L165)");if(a>=this.count)return a-this.count;if(s||(a=yield*this._iterateValues(this,s,a)),N(this.frozenChunkId))if(s)for(let i=this.childrenNodes.length-1;i>=0;i--)return yield*this.childrenNodes[i].traverseGenerator(e,t,r,s,a);else for(let i of this.childrenNodes)return yield*i.traverseGenerator(e,t,r,s,a);else{let i=await e.deFrost(this.frozenChunkId);return a=yield*n.import(i).traverseGenerator(e,t,r,s,a)}return s&&(a=yield*this._iterateValues(this,s,a)),0}async*traverseValuesGenerator(e,t,r,s=!1,a=0){if(!e)throw new Error("Internal Error (L192)");yield*this.traverseGenerator(e,t,r,s,a)}async validate(e,t=1){function r(a,i){if(N(i)||i<=1)return!1;let c=i/t,l=Math.log(c)/Math.log(e.branchFactor),h=Math.abs(l-a)>1+1e-10;return h&&console.log(zt,`Height error found.
height =`,a,", count =",i,", actualCount =",c,", exponent =",l,", Math.floor(exponent) =",Math.floor(l),", branch =",e.branchFactor,", branch ** height =",e.branchFactor**a,zt),h}let s="";if(N(this.from)!==N(this.to)&&(s+="[1]"),this.childrenValues.length>0&&this.childrenNodes.length>0&&(s+="[2]"),(this.childrenValues.length!==0||this.childrenNodes.length!==0)&&(N(this.from)&&(s+="[3]"),this.count===0&&(s+="[4]")),this.childrenValues.length>0){let a=this.childrenValues.map(i=>i.count).reduce((i,c)=>i+c,0);this.count!==a&&(s+="[5]"),this.height!==1&&(s+="[6]")}if(this.childrenNodes.length>0){this.childrenNodes.map(i=>i.height).some(i=>N(i)||i===0)&&(s+="[7]");let a=this.childrenNodes.map(i=>i.height).reduce((i,c)=>Math.max(i,c),0);this.height!==a+1&&(s+="[8]")}if(N(this.frozenChunkId)||(this.childrenValues.length>0&&(s+="[9]"),this.childrenNodes.length>0&&(s+="[10]")),this.count===e.branchFactor**this.height&&(this.childrenValues.length>0&&(s+="[11]"),this.childrenNodes.length>0&&(s+="[12]"),N(this.frozenChunkId)&&(s+="[13]"),this.isFull||(s+="[14]")),r(this.height,this.count)&&(s+="[15]"),this.childrenNodes.length>=2)for(let a=0;a<this.childrenNodes.length-1;a++)(N(this.childrenNodes[a].to)||N(this.childrenNodes[a+1].to))&&(s+="[16]"),(N(this.childrenNodes[a].from)||N(this.childrenNodes[a+1].from))&&(s+="[17]"),this.childrenNodes[a].to>=this.childrenNodes[a+1].from&&(s+="[18]");if(s!=="")throw console.error(zt,"Validation failed: "+s,zt),new Error("Validation failed: "+s);if(this.childrenNodes.length>0)for(let a of this.childrenNodes)await a.validate(e,t)}async _callbackValues(e,t,r=!1){if(e.childrenValues.length>0){let s=r?e.childrenValues.slice().reverse():e.childrenValues;for(let a of s)N(t)||await t(a)}}async traverseValues(e,t,r=!1){return this.traverse(e,async s=>await this._callbackValues(s,t,r),r)}export(){let e={from:this.from,to:this.to,count:this.count,height:this.height};return this.isFull&&(e.isFull=!0),N(this.frozenChunkId)?this.childrenValues.length>0?e={...e,isLeaf:!0,children:this.childrenValues}:this.childrenNodes.length>0&&(e={...e,children:this.childrenNodes.map(t=>t.export())}):e={...e,frozenChunkId:this.frozenChunkId},e}static import(e){let t=new n(e.isLeaf);return t.from=e.from,t.to=e.to,t.count=e.count,t.height=e.height,N(e.frozenChunkId)?e.isLeaf?(t.isFull=e.isFull,t.childrenValues=e.children):(t.isFull=e.isFull,e.children&&e.children.length>0&&(t.childrenNodes=e.children.map(r=>n.import(r)))):(t.frozenChunkId=e.frozenChunkId,t.isFull=!0),t}};function N(n){return n==null}var ut=class{constructor(e,t){this.branchFactor=e;t&&(this.root=Ge.import(t))}root=new Ge(!0);insertOrValidateLock=!1;residualSkip=0;async insertTreeNodeValue(e){if(this.insertOrValidateLock)throw new Error("Insertion or validation already in progress (these operations are not parallelized, are you missing an 'await'?)");this.insertOrValidateLock=!0;let{count:t,from:r,to:s}=e;if(!N(this.root.to)&&r<=this.root.to)throw new Error(`Insertion 'from' index ('${r}') must be greater than the highest 'to' value in the tree (currently '${this.root.to}')`);if(this.root.isFull){let a=new Ge;a.from=this.root.from,a.to=this.root.to,a.count=this.root.count,a.height=this.root.height+1,a.childrenNodes.push(this.root),this.root=a}await this.root.insertTreeNodeValue(this,e),this.insertOrValidateLock=!1}async traverse(e,t=!1){return this.root.traverse(this,e,t)}async traverseValues(e,t=!1){return this.root.traverseValues(this,e,t)}async*traverseValuesGenerator(e,t,r=!1){yield*this.root.traverseValuesGenerator(this,e,t,r,this.residualSkip)}skip(e){return this.residualSkip+=e,this}async validate(e){if(this.insertOrValidateLock)throw new Error("Validation or insertion already in progress (these operations are not parallelized, are you missing an 'await'?)");if(this.insertOrValidateLock=!0,N(this.root))throw new Error("Root missing (Internal Error)");await this.root.validate(this,e),this.insertOrValidateLock=!1}get from(){if(!N(this.root))return this.root.from}get to(){if(!N(this.root))return this.root.to}export(){return this.root?this.root.export():{}}};var $e=!1,Le=class extends ut{constructor(t,r){super(t,r);this.branchFactor=t}static MAX_MESSAGE_HISTORY_SHARD_SIZE=4*1024*1024-2*32*1024;async freeze(t){f&&console.log("freezing data:",t);let r=await this.storeData(t);return f&&console.log("... frozen data identifier:",r),r}async deFrost(t){f&&console.log("deFrosting handle:",t);let r=await this.fetchData(t);return f&&console.log(`... deFrosted results:
`,r),r}get fromTimestamp(){if(We(this.from))throw new Error("Requesting 'from' timestamp on uninitialized history");return C.base4StringToTimestamp(this.from)}get toTimestamp(){if(We(this.to))throw new Error("Requesting 'to' timestamp on uninitialized history");return C.base4StringToTimestamp(this.to)}};b([P],Le.prototype,"fromTimestamp",1),b([P],Le.prototype,"toTimestamp",1);var ce=class n extends Le{static MESSAGE_HISTORY_BRANCH_FACTOR=_t?3:32;static MAX_MESSAGE_SET_SIZE=_t?5:512;constructor(e){super(n.MESSAGE_HISTORY_BRANCH_FACTOR,e)}async insert(e){await this.insertTreeNodeValue(e)}async fetchData(e){throw new Error("[ServerDeepHistory] should not be fetching data (server-side is write-only)")}},ht=class extends Le{constructor(t,r){super(ce.MESSAGE_HISTORY_BRANCH_FACTOR,t);this.channel=r;this.SB=new v(this.channel.channelServer)}SB;async storeData(t){throw new Error("[ClientDeepHistory] should not be storing data (client-side is read-only)")}async fetchData(t){if(!this.SB)throw new Error("SB required to fetch data");return(await this.SB.storage.fetchData(t)).payload}async*traverseMessagesGenerator(t,r,s){let a=C.timestampToBase4String(t),i=C.timestampToBase4String(r);if(!a||!i)throw new Error("Invalid timestamp conversion");$e&&console.log(u,`Generator traversing the tree ${s?"in REVERSE":"in order"} from ${t} to '${r}':`,u,"From string:",a,"To string:",i,Or);for await(let c of this.traverseValuesGenerator(a,i,s)){let l=c;if($e&&console.log(u,`We are looking at node:
`,l,u),We(l.from)||We(l.to))throw new Error("Node missing 'from' or 'to' values");if(l.shard){if(i<l.from||a>l.to){$e&&console.log(u,"Skipping shard, out of range",`
`,"         node from/to:",l.from,l.to,`
`,"  restriction from/to:",a,i,u);continue}else $e&&console.log(u,"Processing shard range:",`
`,"                node from/to",l.from,l.to,`
`," touches restriction from/to:",a,i,u);let h=await this.fetchData(l.shard);if(!(h instanceof Map))throw new Error("Expected a map");$e&&console.log(u,`... FETCHING FROM STORAGE SERVER and in this shard we find ${h.size} messages:`,`
`,l.shard,u);let o=Array.from(h.keys());o.sort(),s&&o.reverse();for(let g of o){let p=h.get(g);if(p){if(We(p.sts))throw new Error("Message missing 'sts' value (L219)");if(p.sts>=t&&p.sts<=r){let m=await this.channel.extractMessage(p);m&&(f&&console.log("[ClientDeepHistory] Yielding message with server timestamp:",m.senderTimestamp),yield m)}else f&&console.log("Skipping message, out of range. message sts:",p.sts,"  restriction from/to:",t,r)}}}}$e&&console.log(u)}async traverseMessagesEncrypted(t){await this.traverseValues(async r=>{let s=r;if(s.shard){let a=await this.fetchData(s.shard);if(!(a instanceof Map))throw new Error("Expected a map");for(let[i,c]of a)await t(i,c)}})}async validate(){await super.validate(ce.MAX_MESSAGE_SET_SIZE)}};var z=!1,qe=Symbol("ChannelHandle"),Pn=/^([a-zA-Z0-9]{43})_[a-zA-Z0-9_]{4}_([0-3]{26})$/;function or(n){return Object.getPrototypeOf(n)===Object.prototype&&n.channelId&&n.channelId.length===43&&n.ownerPublicKey&&typeof n.ownerPublicKey=="string"&&n.ownerPublicKey.length>0&&(!n.storageToken||le(n.storageToken))}function Ft(n){if(n){if(or(n))return n;throw z&&console.error(`invalid SBChannelData ... trying to ingest:
`,n),new d("invalid SBChannelData")}else throw new d("invalid SBChannelData (null or undefined)")}function ee(n,e,t){if(t&&t.get){let r=t.get;t.get=function(){let s=n.constructor.name;return"owner"in this&&y(this["owner"]===!0,`${e} getter or method accessed for object ${s} but callee is not channel owner`),r.call(this)}}}var k=class k extends De{channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");locked=!1;defaultProtocol=new _e;protocol=this.defaultProtocol;#e=new Map;#t=new Map;sendQueue=new Se;closingDown=!1;previous=void 0;#r=void 0;#n=void 0;constructor(e,t){if(z&&console.log(`Channel() constructor called with handleOrKey:
`,e),e===null?super():super(e),this.protocol=t||this.defaultProtocol,!this.protocol)throw new d("Channel() constructor - no protocol? (internal error)");this.messageQueueManager().then(()=>{z&&console.log("Channel() constructor - messageQueueManager() is DONE")}).catch(r=>{throw r}),this.channelReady=this.sbChannelKeysReady.then(async()=>(this.#s(this.channelId,this.channelData.ownerPublicKey),this[k.ReadyFlag]=!0,await this.protocol.setChannel(this),this)).catch(r=>{throw r})}get ready(){return y(!this.closingDown,"[Channel] Channel is closed, blocking on'ready' will reject"),this.channelReady}get ChannelReadyFlag(){return this[k.ReadyFlag]}get api(){return this}async getPubKeys(){let e=await this.callApi("/getPubKeys");if(!e||!(e instanceof Map))throw new d("getPubKeys() - no visitor map returned");for(let[t,r]of e)this.#s(t,r);return this.#s(this.channelId,this.channelData.ownerPublicKey),e}#s(e,t){this.#e.set(e,t),this.#t.set(t,e)}async getVisitorKeyFromID(e){if(e===void 0)return this.channelData.ownerPublicKey;let t=this.#e.get(e);return t||(await this.getPubKeys(),t=this.#e.get(e)),t}async getVisitorIDFromKey(e){if(e===this.channelData.ownerPublicKey)return this.channelId;let t=this.#t.get(e);return t||(await this.getPubKeys(),t=this.#t.get(e)),t}async extractMessage(e,t=!1){if(e){if(f?console.log("[extractMessage] Extracting message:",e):t&&console.log("[extractMessage] Will try to extract message ..."),e instanceof ArrayBuffer)throw new d("[Channel.extractMessage] Message is an ArrayBuffer (did you forget extractPayload()?)");try{if(e=Oe(e),!e){(z||t)&&console.warn("++++ [extractMessage]: message is not valid (probably an error)",e);return}let r=e.f;if(!r){console.error("++++ [extractMessage]: no sender userId hash in message (probably an error)");return}let s=await this.getVisitorKeyFromID(r);if(!s)throw new d(`Cannot find sender userId hash ${r} in public key map (including asking server)`);y(this.protocol,"Protocol not set (internal error)");let a=await this.protocol?.decryptionKey(e);if(!a){(f||t)&&console.error("++++ [extractMessage]: no decryption key provided by protocol (perhaps an error)");return}if(t&&(console.log("[extractMessage] Decryption key:"),crypto.subtle.exportKey("raw",a).then(g=>{let p=new Uint8Array(g),m=Array.from(p).map(w=>w.toString(16).padStart(2,"0")+" ").join("");console.log(m)}).catch(g=>{console.error("Error exporting key:",g)})),!e.ts)throw new d("unwrap() - no timestamp in encrypted message");let{c:i,iv:c}=e;y(i,"[unwrap] No contents in encrypted message (probably an error)");let l=new DataView(new ArrayBuffer(8));if(l.setFloat64(0,e.ts),t){let g=new Uint8Array(l.buffer),p=Array.from(g).map(m=>m.toString(16).padStart(2,"0")+" ").join("");console.log("[extractMessage] Timestamp view (hex):",p)}let h;try{h=await crypto.subtle.decrypt({name:"AES-GCM",iv:c,additionalData:l},a,i)}catch(g){(z||t)&&console.error("[extractMessage] Could not decrypt message (exception) [L2898]:",g.message);return}e._id||(e._id=k.composeMessageKey(this.channelId,e.sts,e.i2)),(z||t)&&e.ttl!==void 0&&e.ttl!==15&&console.warn(`[extractMessage] TTL->EOL missing (TTL set to ${e.ttl}) [L2762]`);let o={body:L(h).payload,channelId:this.channelId,sender:r,senderPublicKey:s,senderTimestamp:e.ts,serverTimestamp:e.sts,_id:e._id};return(f||t)&&console.log("[Channel.extractMessage] Extracted message (before validation):",o.body),Ur(o)}catch(r){(z||t)&&console.error("[extractMessage] Could not process message (exception) [L2782]:",r.message);return}}}async extractMessageMap(e){let t=new Map;for(let[r,s]of e){let a=await this.extractMessage(s);a?t.set(r,a):z&&console.warn("[extractMessageMap] - message not valid, skipping:",r,s)}return t}sendToToUserId(e){if(he(e))return z&&console.log("[sendToToUserId] - sending to a user ID:",e),e;{if(z&&console.log("[sendToToUserId] - will try to parse string:",e),!ct(e))throw new d(`wrapMessage(): invalid 'sendTo' format (not a userid nor a key): '${e}'`);let t=this.#t.get(e);if(t)return t;console.error("[sendToToUserId] - sending to an ID that is not on the visitor list, probably an error");return}}packageMessage(e,t={}){(z||f)&&console.log(u,`[Channel#packageMessage] From '${this.userId}'`,u,`contents:
`,e,u,`options:
`,t,u);let r={f:this.userId,unencryptedContents:e};if(t){if(t.sendTo){let s=this.sendToToUserId(t.sendTo);if(!s)throw new d(`wrapMessage(): invalid 'sendTo' contents ('${t.sendTo}')`);r.t=s}if(t.subChannel)throw new d("wrapMessage(): subChannel not yet supported");t.ttl!==void 0&&(r.ttl=t.ttl),t.sendString&&(y(typeof e=="string","[packageMessage] sendString is true, but contents is not a string"),y(t.ttl===void 0||t.ttl===0,`[packageMessage] sendString implies TTL=0 (we got ${t.ttl})`),r.ttl=0,r.stringMessage=!0)}return r.stringMessage!==!0&&(r.protocol=t.protocol?t.protocol:this.protocol,r.ttl===void 0&&(r.ttl=15),r.salt||(r.salt=crypto.getRandomValues(new Uint8Array(16)).buffer),r.iv||(r.iv=crypto.getRandomValues(new Uint8Array(12)))),r}async finalizeMessage(e){e.ts||(e.ts=await v.dateNow()),y(e.stringMessage!==!0,"[Channel.finalizeMessage()] stringMessage is true, finalizing should not be called (internal error)");let t=D(e.unencryptedContents);y(t,"wrapMessage(): failed to assemble payload"),y(t.byteLength<65536,`[Channel.finalizeMessage]: body must be smaller than ${65536/1024} KiB (we got ${t.byteLength/1024} KiB)})`),e.ts=await v.dateNow();let r=new DataView(new ArrayBuffer(8));return r.setFloat64(0,e.ts),y(e.protocol,"[Channel.finalizeMessage()] Protocol not set (internal error)"),e.c=await U.encrypt(t,await e.protocol.encryptionKey(e),{iv:e.iv,additionalData:r}),e.s=await U.sign(this.signKey,e.c),nr(e)}#o(e){return new Promise(async(t,r)=>{await this.ready;let s=e.stringMessage===!0?e.unencryptedContents:await this.finalizeMessage(e);await this.callApi("/send",s).then(a=>{t(a)}).catch(a=>{r(a)})})}async send(e,t={}){return new Promise(async(r,s)=>{f&&console.log(u,"[Channel.send] called.",u,`contents:
`,e);let a=this.packageMessage(e,t);f&&console.log(u,`packed message:
`,a),f&&a.ttl!==void 0&&console.log(u,"enqueuing message with TTL value: ",a.ttl,u),this.sendQueue.enqueue({msg:a,resolve:r,reject:s,_send:this.#o.bind(this),retryCount:t.retries!==void 0?t.retries:0}),f&&console.log(gt)})}create(e,t=this.channelServer){return z&&console.log("==== Channel.create() called with storageToken:",e,"and channelServer:",t),y(e!==null,"[Channel.create] Missing storage token"),t&&(this.channelServer=t),y(this.channelServer,"[Channel.create] Missing channel server (neither provided nor in channelKeys)"),new Promise(async(r,s)=>{await this.channelReady,this.channelData.storageToken=le(e),z&&console.log("Will try to create channel with channelData:",this.channelData),this.callApi("/budd",this.channelData).then(()=>{this.channelServer=t,y(this.channelData&&this.channelData.channelId&&this.userPrivateKey,"Internal Error [L2546]"),r(this)}).catch(a=>{s("Channel.create() failed: "+Ae(a))})})}getLastMessageTimes(){throw new d("Channel.getLastMessageTimes(): deprecated")}getLatestTimestamp(){return this.callApi("/getLatestTimestamp")}async messageQueueManager(){f&&console.log(u,"[messageQueueManager] Channel message queue is starting up",u),await this.ready,f&&console.log(u,"[messageQueueManager] ... continuing to start up",u);let e=!0;for(;e;)await this.sendQueue.dequeue().then(async t=>{if(f&&console.log(u,`[messageQueueManager] ... pulled 'msg' from queue:
`,t?.msg.unencryptedContents,u),t){f&&console.log(u,`[messageQueueManager] Channel message queue is calling '_send' on message
`,t.msg.unencryptedContents),f&&console.log(t.msg);let r=null;for(;t.retryCount-->=0;){f&&console.log(u,"[messageQueueManager] ... trying message send (",t.retryCount,`retries left)
`,t.msg.unencryptedContents,u);try{let s=await t._send(t.msg);f&&console.log(u,`[messageQueueManager] Got response from registered '_send':
`,s,u),t.resolve(s);break}catch(s){f&&console.log(u,"[messageQueueManager] Got exception from '_send' operation, might retry",s,u),r="[ERROR] "+s}}t.reject(r)}else f&&console.log("[messageQueueManager] Channel message queue is empty and closed"),e=!1}).catch(t=>{if(this.closingDown||t==="shutDown"){f&&console.log("[messageQueueManager] Channel message queue is shutting down");return}else throw new d("[messageQueueManager] Channel message rejected (ToDo - internal error - L573)")})}close(){return f&&console.log("[Channel.close] called (will drain queue)"),this.closingDown=!0,this.sendQueue.drain("shutDown")}getMessageKeys(e="0"){return new Promise(async(t,r)=>{try{await this.channelReady,y(this.channelId,"Channel.getMessageKeys: no channel ID (?)");let a=await this.callApi("/getMessageKeys",{prefix:e});f&&console.log("getMessageKeys:",a),a.keys&&(a=a.keys);var s=new Set;if(a instanceof Set)s=a;else if(a instanceof Array)a.forEach(i=>s.add(i));else throw console.error("[Channel.getMessageKeys] Unexpected format, cannot parse out 'keys':",a),new d("[Channel.getMessageKeys] Unexpected response from server");(!s||s.size===0)&&console.warn("[Channel.getMessageKeys] Warning: no messages (empty/null response); not an error but perhaps unexpected?"),t({historyShard:void 0,keys:s})}catch(a){let i=`[Channel.getMessageKeys] Error in getting message keys (offline?) ('${a}')`;z&&console.warn(i),r(i)}})}async getRawMessageMap(e){if(z&&console.log(u,"[Channel.getRawMessageMap] called ... ",u),!Ve(e))throw new d("[getRawMessageMap] messageKeys is not a Set");if(e.size===0)throw new d("[getRawMessageMap] no message keys provided");if(e.size>v.MAX_MESSAGE_REQUEST_SIZE)throw new d(`[getRawMessageMap] too many messages requested at once (max is ${v.MAX_MESSAGE_REQUEST_SIZE}, you requested ${e.size})`);z&&console.log(u,"[Channel.getRawMessageMap] calling API with messageKeys ... ",u);let t=await this.callApi("/getMessages",e),r=new Map;if(t instanceof Map)r=t;else{let{keys:s,values:a}=t;if(s.length!==a.length)throw new d("[Channel.getRawMessageMap] keys and values arrays are not the same length");for(let i=0;i<s.length;i++)r.set(s[i],a[i])}return z&&console.log(u,`[Channel.getRawMessageMap] got ${r.size} payloads ...`,u),r}async convertRawMessageMap(e){z&&console.log(u,"[Channel.convertRawMessageMap] called ... ",u);let t=new Map;for(let[r,s]of e)try{t.set(r,Oe(L(s).payload))}catch(a){z&&console.warn(u,"[getMessageMap] Failed extract and/or to validate message:",u,s,u,a,u)}return await this.extractMessageMap(t)}async getMessageMap(e){if(z&&console.log(u,`[Channel.getMessageMap] called with ${e.size} keys ...`,u),!Ve(e))throw new d("[Channel.getMessageMap] messageKeys is not a Set");let t=await this.getRawMessageMap(e);z&&console.log(u,`[Channel.getMessageMap] got ${t.size} messagePayloads ... decoding`,u);let r=await this.convertRawMessageMap(t);return z&&console.log(u,"[Channel.getMessageMap] got messageMap ... done, returning",u),r}async getHistory(){await this.channelReady,y(this.channelId,"Channel.getHistory: no channel ID (?)");let e=await this.callApi("/getHistory");return f&&console.log(u,`getHistory result:
`,JSON.stringify(e,null,2),u),new ht(e,this)}setPage(e){var{page:t,prefix:r,type:s}=e;if(y(t,"Channel.setPage: no page (contents) provided"),r=r||12,r<6)throw new d("Channel.setPage: prefix must be at least 6 characters");return s=s||"sb384payloadV3",this.callApi("/setPage",{page:t,type:s,prefix:r})}async getPage(){let e=this.hashB32;z&&console.log(`==== ChannelApi.getPage: calling fetch with: ${e}`);let t=await Ir()(this.channelServer+"/api/v2/page/"+e).catch(a=>{throw new d(`[Channel.getPage] fetch failed: ${a}`)});if(t.headers.get("content-type")!=="sb384payloadV3")throw new d("[Channel.getPage] Can only handle 'sb384payloadV3' content type, use 'fetch()'");let s=await t.arrayBuffer();return L(s).payload}async#l(){if(!this.#r)throw new d("Channel.deriveAESKeyHKDF() - no kvParams");let e=this.#r.salt,t=new Uint8Array(D({x:this.binaryD,y:this.#r.entropy,z:this.#r.derivationNonce})),r=await crypto.subtle.importKey("raw",t,{name:"HKDF"},!1,["deriveKey"]);return await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:e,info:new TextEncoder().encode("AES-GCM SHA-256 key")},r,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}async#i(){if(!this.#r){if(this.#n)return this.#n;this.#n=(async()=>{if(!this.binaryD)throw new d("Channel.initializeKV() - no binaryD provided");let e=await this.get("__KV__params");if(e)this.#r=structuredClone(e),this.#r.aesKey=await this.#l();else{let t={derivationNonce:crypto.getRandomValues(new Uint8Array(12)),salt:crypto.getRandomValues(new Uint8Array(16)),entropy:crypto.getRandomValues(new Uint8Array(32))};this.#r=structuredClone(t),this.#r.aesKey=await this.#l(),await this.#u("__KV__params",t,!1)}})();try{await this.#n}finally{this.#n=void 0}}}async#c(e){if(!e)throw new d("Channel.hashKey() - no key provided");let t;typeof e=="string"&&e.startsWith("__KV__")?t={x:this.binaryD,key:e}:(this.#r||await this.#i(),t={x:this.binaryD,y:this.#r.entropy,key:e});let r=await crypto.subtle.digest("SHA-256",D(t));return I(r)}async#a(e,t,r){return await crypto.subtle.encrypt({name:"AES-GCM",iv:r},e,t)}async#d(e,t,r){return await crypto.subtle.decrypt({name:"AES-GCM",iv:r},e,t)}async#u(e,t,r=!0){let s=await this.#c(e),a=crypto.getRandomValues(new Uint8Array(12)),i=Z.padBuf(D(t)),c=r?await this.#a(this.#r.aesKey,i,a):i,l=D({nonce:a,timestamp:await v.dateNow(),version:1,encrypted:r,payload:c});return this.callApi("/kv",{type:"global",operation:"write",key:s,value:l})}async put(e,t,r=!0){if(typeof e=="string"&&e.startsWith("__KV__"))throw new d("Channel.put() - string key prefix '__KV__' is read-only");return this.#u(e,t,r)}async get(e){if(!e)throw new d("Channel.get() - no key provided");let t=await this.callApi("/kv",{type:"global",operation:"read",key:await this.#c(e)});if(!t||t.success!==!0)throw new d("Channel.get() failed ('success' false)");if(!t.value)return;let r=L(t.value).payload;if(!r.payload||!r.nonce||r.version!=1)throw new d("Channel.get() failed (got invalid structure)");if(r.encrypted===!1)return L(r.payload).payload;if(!this.#r||!this.#r.aesKey)throw new d("Channel.get() - no kvParams, or no aes key, needed to decrypt");let s=await this.#d(this.#r.aesKey,r.payload,r.nonce);return L(s).payload}acceptVisitor(e){return this.callApi("/acceptVisitor",{userId:e})}getCapacity(){return this.callApi("/getCapacity")}getInfo(){return this.callApi("/info")}getAdminData(){return this.callApi("/getAdminData")}getMother(){return this.getAdminData().then(e=>e.motherChannel)}isLocked(){return this.getAdminData().then(e=>e.locked)}lock(){return this.callApi("/lockChannel")}lockChannel(){return this.callApi("/lockChannel")}setCapacity(e){return this.callApi("/setCapacity",{capacity:e})}updateCapacity(e){return this.callApi("/setCapacity",{capacity:e})}getChannelKeys(){return this.callApi("/getChannelKeys")}getStorageLimit(){return this.callApi("/getStorageLimit")}async getStorageToken(e){return le(await this.callApi("/getStorageToken",{size:e}))}budd(e){return new Promise(async(t,r)=>{var{targetChannel:s,size:a,token:i}=e||{};if(!s)s=(await new k().ready).handle,z&&console.log(`
`,u,`[budd()]: no target channel provided, using new channel:
`,u,s,`
`,u);else if(this.channelId===s.channelId){r(new Error("[budd()]: source and target channels are the same, probably an error"));return}if(!s)throw new d("[budd()]: no target channel provided");let c=s.channelData;if(!c){r(new Error("[budd()]: target channel has no channel data, probably an error"));return}if(i){if(a||s)throw new d("[budd()]: cannot specify token and size or target channel");i=le(i)}else if(a||(a=8388608),a!==1/0&&Math.abs(a)>await this.getStorageLimit()){r(new Error(`[budd()]: storage amount (${a}) is more than current storage limit`));return}try{c.storageToken=i||await this.getStorageToken(a),z&&console.log(`[budd()]: requested ${a}, got storage token:`,c.storageToken);let l=await new k(s).ready;l.channelServer||(l.channelServer=this.channelServer);let h=Ft(await l.callApi("/budd",c));if(s.channelId!==h.channelId){console.warn(`[budd()]: target channel ID changed, should not happen, error somewhere
`,u),console.warn("targetChannel:",s,`
`,u),console.warn("newChannelData:",h,`
`,u),r(new Error("[budd()]: target channel ID changed, should not happen, error somewhere"));return}h.storageToken||console.warn("[budd()]: target channel has no storage token, possibly an error, should be returned from server");let o={[qe]:!0,channelId:h.channelId,userPrivateKey:s.userPrivateKey,channelServer:this.channelServer,channelData:h};z&&console.log("[budd()]: success, newHandle:",o),t(Fe(o))}catch{r("[budd] Could not get storage token from server, are you sure about the size?");return}})}static LOWEST_TIMESTAMP="0".repeat(26);static HIGHEST_TIMESTAMP="3".repeat(26);static timestampToBase4String(e){if(e!==void 0){if(e<0)throw new d("[timestampToBase4String] Negative timestamp");return e===0?k.LOWEST_TIMESTAMP:e===1/0?k.HIGHEST_TIMESTAMP:e.toString(4).padStart(22,"0")+"0000"}}static base4stringToDate(e){let t=parseInt(e.slice(0,-4),4);return new Date(t).toISOString()}static getLexicalExtremes(e){if(!(e instanceof Set||e instanceof Array||e instanceof Map))throw new d("[getLexicalExtremes] Paramater must be a Set, Array, or Map");let t=e instanceof Array?e:Array.from(e.keys());if(t.length===0)return[];let[r,s]=[t[0],t[0]];for(let a of t)a<r&&(r=a),a>s&&(s=a);return[r,s]}static messageKeySetToPrefix=e=>{if(!Ve(e))throw new d("[messageKeySetToPrefix] keys is not a Set");if(e.size===0)return"0";let[t,r]=k.getLexicalExtremes(e);y(t&&r,"[timestampLongestPrefix]: no lowest or highest (internal error?)");let{timestamp:s}=k.deComposeMessageKey(t),{timestamp:a}=k.deComposeMessageKey(r),i=0;for(;i<s.length&&i<a.length&&s[i]===a[i];)i++;return s.substring(0,i)};static timestampLongestPrefix=(e,t)=>{if(e&&t&&typeof e=="string"&&typeof t=="string"&&e.length===26&&t.length===26){let r=0;for(;r<e.length&&r<t.length&&e[r]===t[r];)r++;return e.substring(0,r)}else throw new d(`[timestampLongestPrefix]: invalid input:
 '${e}' or '${t}'`)};static timestampRegex=/^[0-3]{26}$/;static base4StringToTimestamp(e){if(!(!e||typeof e!="string"||e.length!==26||!k.timestampRegex.test(e)))return e===k.LOWEST_TIMESTAMP?0:e===k.HIGHEST_TIMESTAMP?1/0:parseInt(e.slice(0,-4),4)}static base4StringToDate(e){let t=k.base4StringToTimestamp(e);if(t)return new Date(t).toISOString()}static deComposeMessageKey(e){let t=/^([a-zA-Z0-9]{43})_([_a-zA-Z0-9]{4})_([0-3]{26})$/,r=e.match(t);return r&&r.length>=4?{channelId:r[1],i2:r[2],timestamp:r[3]}:{channelId:"",i2:"",timestamp:""}}static composeMessageKey(e,t,r="____"){let s=`${e}_${r??"____"}_${k.timestampToBase4String(t)}`;if(Pn.test(s))return s;throw new d(`[composeMessageKey] generated invalid message key: ${s}`)}};b([P,E],k.prototype,"api",1),b([E],k.prototype,"getPubKeys",1),b([P,E],k.prototype,"getVisitorKeyFromID",1),b([P,E],k.prototype,"getVisitorIDFromKey",1),b([E],k.prototype,"getLatestTimestamp",1),b([E],k.prototype,"getRawMessageMap",1),b([E],k.prototype,"getMessageMap",1),b([E,ee],k.prototype,"setPage",1),b([E],k.prototype,"getPage",1),b([E,ee],k.prototype,"put",1),b([E,ee],k.prototype,"get",1),b([E,ee],k.prototype,"acceptVisitor",1),b([E,ee],k.prototype,"getCapacity",1),b([E],k.prototype,"getInfo",1),b([E,ee],k.prototype,"getAdminData",1),b([E,ee],k.prototype,"getMother",1),b([E,ee],k.prototype,"isLocked",1),b([E,ee],k.prototype,"lock",1),b([E,ee],k.prototype,"lockChannel",1),b([E,ee],k.prototype,"setCapacity",1),b([E,ee],k.prototype,"updateCapacity",1),b([E,P],k.prototype,"getChannelKeys",1),b([E],k.prototype,"getStorageLimit",1),b([E,Ct(1)],k.prototype,"getStorageToken",1),b([E,ee],k.prototype,"budd",1);var C=k;function Pe(n){return n?Object.getPrototypeOf(n)===Object.prototype&&n.userPrivateKey&&typeof n.userPrivateKey=="string"&&n.userPrivateKey.length>0&&(!n.channelId||typeof n.channelId=="string"&&n.channelId.length===43)&&(!n.channelServer||typeof n.channelServer=="string")&&(!n.channelData||or(n.channelData)):!1}function Fe(n){if(n){if(n[qe])return n;if(Pe(n))return{...n,[qe]:!0};throw f&&console.error(`invalid ChannelHandle ... trying to ingest:
`,n),new d("invalid ChannelHandle")}else throw new d("invalid ChannelHandle (null or undefined)")}var xe=class n{static listeners={};static addEventListener(e,t,r){n.listeners[e]=n.listeners[e]||[],n.listeners[e].push(t)}static removeEventListener(e,t,r){if(!n.listeners[e])return;let s=n.listeners[e],a=s.indexOf(t);a>-1&&s.splice(a,1)}static dispatchEvent(e){let t=n.listeners[e.type];return t?(t.forEach(r=>r(e)),!e.defaultPrevented):!0}static on(e,t){n.addEventListener(e,t)}static off(e,t){n.removeEventListener(e,t)}static emit(e,...t){let r=new CustomEvent(e,{detail:t.length===1?t[0]:t});n.dispatchEvent(r)}};var F=!1;async function Fn(n){console.log("[closeSocket] closing socket",n),n.readyState!==WebSocket.CLOSED?await new Promise(e=>{n.addEventListener("close",()=>{console.log("[ChannelApi.closeSocket] ... socket confirmed closed",n),e()},{once:!0}),n.close(1e3)}):console.warn("[ChannelApi] websocket already closed")}var Ne=class n extends C{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#e;#t;onMessage=e=>{y(!1,"[ChannelSocket] NO MESSAGE HANDLER")};#r=new Map;#n=new Map;#s=!1;#o=new Set;#l=2e3;lastTimestampPrefix="0".repeat(26);#i=0;#c;#a;constructor(e,t,r){if(y(t,"[ChannelSocket] constructor: no onMessage handler provided"),typeof e=="string")super(e,r);else{let s=Fe(e);super(s,r),s.channelServer&&(this.channelServer=s.channelServer)}this.channelServer||(this.channelServer=v.defaultChannelServer),this[n.ReadyFlag]=!1,this.#t=this.channelServer.replace(/^http/,"ws"),this.onMessage=t,this.channelSocketReady=this.#h()}#d(){if(F&&console.log(u,"[ChannelSocket] Setting up 'ping' messages ... ",u),this.#i=setInterval(()=>{if(this.closingDown){console.error("[ChannelSocket] we are closed, removing ping interval"),clearInterval(this.#i);return}v.haveNotHeardFromServer()},1e3*.5),this.#e&&this.#e.websocket&&this.#e.websocket.readyState===1){F&&console.log(u,"[ChannelSocket] Sending first 'ping' (timestamp request) message.",u);try{this.#e.websocket.send("ping")}catch{console.error("[ChannelSocket] Failed to send first (hibernation) 'ping' message, Internal Error [L3986]")}}else console.error("[ChannelSocket] websocket not ready (?), not sending first 'ping', hibernation disabled")}async#u(){F&&console.log(u,"[ChannelSocket] Trying to re-establish connection ...",u),await new Promise(e=>setTimeout(e,75)),this.channelSocketReady=this.#h().catch(e=>(console.error(u,`[ChannelSocket] Could not re-establish connection, should queue up
`,e,u),this))}async#g(e){console.warn(`[ChannelSocket] Lost connection to server, will try to reset.
Reason (if any): '${e}'`),this[n.ReadyFlag]=!1,v.removeChannelSocket(this),v.on("online",this.#u)}#h(){this.#c=new Promise((t,r)=>{f&&console.log("Error promise initialized"),this.#a=r});let e=Promise.race([this.#c,new Promise(async(t,r)=>{F&&console.log("++++ STARTED ChannelSocket.readyPromise()"),await this.sbChannelKeysReady;let s=this.#t+"/api/v2/channel/"+this.channelId+"/websocket";if(this.#e={url:s,ready:!1,closed:!1,timeout:2e4},!this.#e.websocket||this.#e.websocket.readyState===3||this.#e.websocket.readyState===2){this.#e.websocket&&(console.warn("[ChannelSocket] websocket is in a bad state, closing it ... will await"),await Fn(this.#e.websocket),v.addChannelSocket(this));let l=D(await this.buildApiBody(s));y(l,"Internal Error [L3598]");try{this.#e.websocket=new WebSocket(s+"?apiBody="+I(l)),v.addChannelSocket(this)}catch(h){let o="[ChannelSocket] Could not open websocket: "+h;F&&console.error(o),this.#a(o);return}}F&&console.log(u,"++++ readyPromise() - setting up websocket message listener",u);let a=this.#e.websocket,i=async l=>{if(!l.data){let o="[ChannelSocket] received empty message (should be a 'ready' message)";console.error(o),this.#a(o)}let h=null;if(typeof l.data=="string"?h=ve(l.data,"L3909"):l.data instanceof ArrayBuffer?h=L(l.data).payload:l.data instanceof Blob?h=L(await l.data.arrayBuffer()).payload:St("L3987","[ChannelSocket] received something other than string or ArrayBuffer"),h)if(h.ready)F&&console.log(`++++ readyPromise() - received ready message, switching to main message processor:
`,h),h.latestTimestamp?(this.lastTimestampPrefix=h.latestTimestamp,f&&console.log("++++ readyPromise() - received latestTimestamp:",this.lastTimestampPrefix)):console.warn("[ChannelSocket] received 'ready' message without 'latestTimestamp'"),a.removeEventListener("message",i),a.addEventListener("message",this.#p),this.#d(),this[n.ReadyFlag]=!0,t(this);else{let o=`[ChannelSocket] received something other than 'ready' as first message:
`+JSON.stringify(l.data);this[n.ReadyFlag]===!0?console.warn(o):this.#a(o)}else{let o="[ChannelSocket] received empty message, or could not parse it (should be a 'ready' message)";this[n.ReadyFlag]===!0?console.warn(o):this.#a(o)}};this.#e.websocket.addEventListener("message",i);let c=setTimeout(()=>{if(this[n.ReadyFlag])f&&console.log("[ChannelSocket] resolved correctly",this);else{let l="[ChannelSocket] Socket not resolving after waiting, fatal.";console.warn(l),this.#a(l)}},2e3);this.#e.websocket.addEventListener("open",async()=>{this.#e.closed=!1,c&&(clearTimeout(c),c=void 0),await this.ready,F&&console.log("++++++++ readyPromise() sending init"),this.#e.websocket.send("ready"),F&&console.log("++++++++ readyPromise() ... no immediate errors for init")}),this.#e.websocket.addEventListener("close",l=>{if(this.#e.closed=!0,this.closingDown)F&&console.log("[ChannelSocket] Closing  down.");else{if(l.wasClean)if(l.reason.includes("does not have an owner")){let h=`[ChannelSocket] No such channel on this server (${this.channelServer})`;if(this[n.ReadyFlag]===!0)throw new d(h+" plus we are ready? (L4130)");this.#a(h)}else console.log(`[ChannelSocket] Closed (cleanly).
Reason (if any): '${l.reason}'.`);else console.warn(`[ChannelSocket] Closed (but not cleanly) [L4137]
Reason (if any): '${l.reason}'. Server: '${this.channelServer}'`);if(this[n.ReadyFlag]===!0)this.#g("Channel was ready, but reporting being closed [L4140]");else{let h="[ChannelSocket] Closed before ready (?) [L4142]";console.error(h),this.#a(h)}}}),this.#e.websocket.addEventListener("error",l=>{if(this.#e.closed=!0,this.closingDown)F&&console.log("[ChannelSocket] Closing down.");else if(this[n.ReadyFlag]===!0){let h=`[ChannelSocket] Socket closed [L4152]
Event message (if any): '`+l.message+"'";console.error(h),this.#a(h)}else{let h=`[ChannelSocket] Failed to connect, or errored out immediately [L4153].
Error (if any): '${l}'`;console.error(h),this.#a(h)}})})]);return f&&console.log("Socket ready factory done, error promise:",this.#a),e}#p=async e=>{y(!this.errorState,"[ChannelSocket] in error state (Internal Error L4018)");let t=e.data;f&&console.log(u,`[ChannelSocket] Received socket message:
`,t,u);var r=null;if(y(t,"[ChannelSocket] received empty message"),v.heardFromServer(),typeof t=="string"&&C.timestampRegex.test(t)){f&&console.log("[ChannelSocket] Received 'latestTimestamp' message:",t),v.heardFromServer(),t>this.lastTimestampPrefix&&(F&&console.log(u,"[ChannelSocket] Received newer timestamp, will request those messages",u),this.#e.websocket.send(this.lastTimestampPrefix)),setTimeout(()=>{if(this.#e&&!this.#e.closed&&this.#e.websocket?.readyState===1){f&&console.log("[ChannelSocket] Sending 'ping' (timestamp request) message.");try{this.#e.websocket.send("ping")}catch{F&&console.warn("[ChannelSocket] Failed to send 'ping' message, ignoring")}}else F&&console.log("[ChannelSocket] Shutting down ping message timeout")},1e3);return}if(typeof t=="string"){let h=Er(t);if(!h)St("L3287","[ChannelSocket] Cannot parse message: "+t);else{F&&console.log(`[ChannelSocket] Received unrecognized 'string' message, will discard:
`,h),this.#e.websocket.send(D({error:`Cannot parse 'string' message (''${h})`}));return}}else if(t instanceof ArrayBuffer)r=L(t).payload;else if(t instanceof Blob)r=L(await t.arrayBuffer()).payload;else{this.#e.websocket.send(D({error:"Received unknown 'type' of message (??)"}));return}if(y(r,"[ChannelSocket] cannot extract message"),r.ready){F&&console.log(`++++++++ #processMessage: received ready message
`,r);return}if(r.error){console.error(`++++++++ #processMessage: received error message:
`,r.error);return}r=Oe(r),f&&console.log(u,`[ChannelSocket] Received (extracted/validated) socket message:
`,r,`
`,u),r.channelId||(r.channelId=this.channelId),y(r.channelId===this.channelId,"[ChannelSocket] received message for wrong channel?"),this.#s&&console.log("[ChannelSocket] Received socket message:",r),y(r.sts,"[ChannelSocket] Message missing server timestamp Internal Error (L4145)"),this.lastTimestampPrefix=n.timestampToBase4String(r.sts),F&&console.log("[ChannelSocket] Updated 'latestTimestamp' to:",this.lastTimestampPrefix),y(r.c&&r.c instanceof ArrayBuffer,"[ChannelSocket] Internal Error (L3675)");let s=await crypto.subtle.digest("SHA-256",r.c),a=$(s);this.previous&&(r.p=this.previous),this.previous=a,F&&console.log("[ChannelSocket] Received message with hash:",a);let i=this.#r.get(a);i&&((F||this.#s)&&console.log(`++++++++ #processMessage: found matching ack for id ${a}`),this.#r.delete(a),i("success"));let c=this.#n.get(a);c&&((f||this.#s)&&console.log(`++++++++ #processMessage: clearing matching ack timeout for id ${a}`),clearTimeout(c),this.#n.delete(a)),f&&console.log("[ChannelSocket] New message, client and server time stamp: ",r.sts);let l=await this.extractMessage(r);if(l){if(!l._id)throw new d("[ChannelSocket] Internal Error (L522)");if(this.#o.has(l._id))console.warn("[ChannelSocket] **** WARNING: Message already forwarded, will not deliver");else{for(;this.#o.size>this.#l;){let h=this.#o.values().next().value;this.#o.delete(h)}this.#o.add(l._id),F&&console.log("[ChannelSocket] Repackaged and will deliver 'Message':",l),this.onMessage(l)}}else F&&console.log("[ChannelSocket] Message could not be parsed, will not deliver")};get ready(){return y(!this.errorState,"[ChannelSocket] in error state (Internal Error L4104)"),y(!this.closingDown,"[ChannelSocket] We are closed, blocking on'ready' will reject"),this.channelSocketReady}get errorPromise(){if(!this.#c)throw new d("[ChannelSocket] errorPromise called before ready");return this.#c}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#e||!this.#e.websocket)return"CLOSED";switch(this.#e.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set enableTrace(e){this.#s=e,e&&console.log("==== ChannelSocket: Tracing enabled ====")}#m(e){return y(!this.errorState,"[ChannelSocket] in error state (Internal Error L4130)"),f&&console.log("[ChannelSocket] #_send() called"),new Promise(async(t,r)=>{if(f&&console.log(u,"++++++++ [ChannelSocket.#_send()] called, will return promise to send:",e.unencryptedContents,u),this.#e.closed){f&&console.error("[ChannelSocket] #_send() to a CLOSED socket"),r("<websocket closed>");return}if(e.stringMessage===!0)try{let s=e.unencryptedContents;f&&console.log("[ChannelSocket] actually sending string message:",s),this.#e.websocket.send(s),t("success")}catch(s){r(`<websocket error upon send() of a string message: ${s}>`);return}else{e=await this.finalizeMessage(e);let s=D(e);if(!s){r("ChannelSocket.send(): no message payload (Internal Error)");return}let a=await crypto.subtle.digest("SHA-256",e.c),i=$(a);(f||this.#s)&&console.log("++++++++ ChannelSocket.send(): Which has hash:",i),this.#r.set(i,t),this.#n.set(i,setTimeout(async()=>{if(this.#r.has(i)){if(this.#r.delete(i),v.isShutdown){r("shutDown");return}F&&console.error(`[ChannelSocket] websocket request timed out (no ack) after ${this.#e.timeout}ms (${i})`),r(`<websocket request timed out (no ack) after ${this.#e.timeout}ms (${i})>`);return}else(F||this.#s)&&console.log("++++++++ ChannelSocket.send() completed sending"),t("<received ACK, success, message sent and mirrored back>")},this.#e.timeout)),f&&console.log("[ChannelSocket] actually sending message:",s);try{f&&console.log("[ChannelSocket] actually sending message:",s),this.#e.websocket.send(s)}catch(c){console.error(`Failed to send on socket:
`,c,`
`,new Error().stack),r(`<websocket error upon send() of a message: ${c}>`);return}}})}async send(e,t){return f&&console.log("++++ ChannelSocket.send() called ..."),await this.ready,y(this.#e&&this.#e.websocket,"[ChannelSocket.send()] called before ready"),f&&console.log(u,`[ChannelSocket] sending, contents:
`,JSON.stringify(e),u),this.#e.closed&&(console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#h(),this[n.ReadyFlag]=!1),new Promise(async(r,s)=>{this.ChannelSocketReadyFlag||s("ChannelSocket.send() is NOT ready, perhaps it's resetting?");let a=this.#e.websocket.readyState;switch(a){case 1:this.sendQueue.enqueue({msg:this.packageMessage(e,t),resolve:r,reject:s,_send:this.#m.bind(this),retryCount:3});break;case 0:case 2:case 3:s(`[ChannelSocket.send()] Tried sending but socket not OPEN - it is ${a===0?"CONNECTING":a===2?"CLOSING":"CLOSED"}`);break;default:St("ChannelSocket",`socket in unknown state (${a})`)}})}async close(){F&&console.log("++++ ChannelSocket.close() called ... closing down stuff ..."),this.closingDown=!0,clearInterval(this.#i),this.#e&&this.#e.websocket&&(this.#e.websocket.readyState===1&&(F&&console.log(u,"[ChannelSocket] Closing websocket, with readystate:",this.#e.websocket.readyState,u),this.#e.websocket.close(),await new Promise(t=>setTimeout(t,75))),this.#e.closed=!0);let e=super.close();return v.removeChannelSocket(this),this[n.ReadyFlag]=!1,e}reset(){F&&console.trace("++++ ChannelSocket.reset() called ... for ChannelID:",this.channelId),this.#e&&this.#e.websocket&&(this.#e.websocket.readyState===1&&(F&&console.log("[ChannelSocket] Closing websocket, with readystate:",this.#e.websocket.readyState),this.#e.websocket.close()),this.#e.closed=!0,this[n.ReadyFlag]=!1,v.removeChannelSocket(this),this.channelSocketReady=this.#h())}};var re=!1,qr=Symbol("SB_CHANNEL_API_BODY_SYMBOL");function ir(n){if(n){if(n[qr])return n;if(n.channelId&&n.channelId.length===43&&n.path&&typeof n.path=="string"&&n.path.length>0&&n.userId&&typeof n.userId=="string"&&n.userId.length===43&&n.userPublicKey&&n.userPublicKey.length>0&&(!n.isOwner||typeof n.isOwner=="boolean")&&(!n.apiPayloadBuf||n.apiPayloadBuf instanceof ArrayBuffer)&&n.timestamp&&Number.isInteger(n.timestamp)&&n.sign&&n.sign instanceof ArrayBuffer)return{...n,[qr]:!0};throw re&&console.error(`invalid ChannelApiBody ... trying to ingest:
`,n),new d("invalid ChannelApiBody")}else throw new d("invalid ChannelApiBody (null or undefined)")}var M=class M extends xe{static version="3.20241011.0";static MAX_MESSAGE_REQUEST_SIZE=128;static MAX_MESSAGE_SET_SIZE=ce.MAX_MESSAGE_SET_SIZE;static knownShards=Yt;#e;#t;static lastTimeStamp=0;static#r=new Set;static isShutdown=!1;static lastTimestampPrefix="0".repeat(26);static#n=Date.now();static onlineStatus="unknown";static defaultChannelServer="https://c3.384.dev";eventTarget=new xe;static shardBreakpoints=new Set;fetchPayload=At;constructor(e,t){super(),y(typeof e=="string","[ChannelApi] Takes channel server URL as parameter"),e&&(M.defaultChannelServer=e),re&&console.warn(`==== CREATING ChannelApi object generation: ${M.version} (${M.defaultChannelServer}) ====`),typeof t=="boolean"&&(t={DBG:t}),t&&t.sbFetch&&(console.log("++++ ChannelApi constructor: setting custom fetch function ++++"),Tr(t.sbFetch)),this.#e=e,this.#t=new Z(e)}static async dateNow(){let e=Date.now();return e<=M.lastTimeStamp&&(e=M.lastTimeStamp+1),M.lastTimeStamp=e,e}static heardFromServer(){switch(M.#n=Date.now(),f&&console.log("[ChannelApi] heardFromServer() at",M.#n),M.onlineStatus){case"offline":re&&console.info(`[ChannelApi] [${M.#n}] we are now BACK online`),this.emit("online"),this.emit("reconnected"),M.onlineStatus="online";break;case"online":f&&console.info("[ChannelApi] heardFromServer() we are still online");break;case"unknown":re&&console.info(`[ChannelApi] [${M.#n}] we are now ONLINE`),this.emit("online"),M.onlineStatus="online";break}this.checkUnknownNetworkStatus()}static checkUnknownNetworkStatus(){M.#r.size===0&&(M.onlineStatus!=="unknown"&&this.emit("unknownNetworkStatus"),M.onlineStatus="unknown")}static haveNotHeardFromServer(){let e=Date.now();e-M.#n>1e3*1.5&&(f&&console.warn("[ChannelApi] 'ping' message seems to have timed out"),M.onlineStatus==="online"&&(M.#r.size>0?(re&&console.log(`[ChannelApi] [${e}] OFFLINE`),M.onlineStatus="offline",this.emit("offline")):(re&&console.warn("[ChannelApi] [${timeNow}] No active channel sockets, online status is now UNKNOWN"),M.onlineStatus="unknown",M.onlineStatus="offline",this.emit("unknownNetworkStatus")))),this.checkUnknownNetworkStatus()}static addChannelSocket(e){re&&console.log("[ChannelApi] adding channel socket:",e),M.#r.add(e)}static removeChannelSocket(e){re&&console.log("[ChannelApi] removing channel socket:",e),M.#r.has(e)&&M.#r.delete(e),this.checkUnknownNetworkStatus()}async getPage(e){re&&console.log(`==== ChannelApi.getPage: calling fetch with: ${e}`);let t=await Zt(this.#e+"/api/v2/page/"+e);if(t.ok){let r=t.headers.get("content-type");if(!r)throw new d(`[getPage] Failed to fetch page '${e}'`);let s;if(r.includes("application/json"))s=await t.json();else if(r.includes("text/")||r.includes("xml")||r.includes("html"))s=await t.text();else{if(r.includes("multipart/form-data"))throw new d("[getPage] Multipart form data not supported");r.match(/(image|audio|video)\//)?s=await t.blob():s=await t.arrayBuffer()}return{type:r,payload:s}}else throw new d(`[getPage] Failed to fetch page '${e}'`)}create(e){return y(e!==null,"[create channel] Invalid parameter (null)"),new Promise(async(t,r)=>{try{var s;if(e instanceof C){let i=e;await i.ready,i.channelServer||(i.channelServer=this.#e),s=await i.getStorageToken(8388608)}else try{s=le(e)}catch{r("Invalid parameter to create() - need a token or a budget channel");return}y(s,"[create channel] Failed to get storage token for the provided channel");let a=await new C().ready;a.channelServer=this.#e,a.create(s).then(i=>{t(i.handle)}).catch(i=>{r(i)})}catch(a){let i=`Creating channel did not succeed: ${a}`;console.error(i),r(i)}})}connect(e,t){let r;if(typeof e=="string")r={userPrivateKey:e};else if(r=e,!Pe(r))throw new d("[ChannelApi.connect] Invalid parameter (not a channel handle)");if(y(r!==void 0&&r&&r.userPrivateKey,"[ChannelApi.connect] Invalid parameter (at least need owner private key)"),r.channelServer&&r.channelServer!==this.#e)throw new d(`[ChannelApi.connect] channel server in handle ('${r.channelServer}') does not match what SB was set up with ('${this.#e}')`);return r.channelServer||(r.channelServer=this.#e),re&&console.log("++++ ChannelApi.connect() ++++",r),t?new Ne(r,t):new C(r)}static async closeAll(){if(console.log(u,"==== ChannelApi.closeAll() called ====",u),M.isShutdown){console.warn("closeAll() called, but it was already shutting down");return}M.isShutdown=!0,Dr(),console.log("[ChannelApi] [closeAll] closing all active channel sockets:",M.#r),await Promise.all(Array.from(M.#r).map(close)),console.log("[ChannelApi] [closeAll] ... waiting for everything to close ..."),await new Promise(e=>setTimeout(e,75))}static async getServerInfo(e=M.defaultChannelServer){try{let t=await ae(e+"/api/v2/info");return re&&console.log(u,`[getServerInfo] Fetching server info from '${e}' ++++
`,t,u),t&&t.maxMessageRequestSize&&(M.MAX_MESSAGE_REQUEST_SIZE=t.maxMessageRequestSize),t}catch{re&&console.warn(`[getServerInfo] Could not access server '${e}'`);return}}static traceShard(e){M.shardBreakpoints.add(e)}get storage(){return this.#t}async getStorageServer(){return this.storage.getStorageServer()}get crypto(){return U}get version(){return M.version}};b([P],M.prototype,"storage",1),b([P],M.prototype,"getStorageServer",1);var v=M;var zn="0123456789ADMRTxQjrEywcLBdHpNufk",pt=zn,_n=new RegExp(`[${pt}.concat(' ')]`);function lr(n){let e=pt;if(n<0||n>524287)throw new Error("Input number is out of range. Expected a 19-bit integer.");let t=[n>>14&31,n>>9&31,n>>4&31,n&15];return t[3]|=(t[0]^t[1]^t[2])&16,t.map(r=>e[r]).join("")}async function Ln(n){let{extraEntropy:e}=n||{},t,r,s=e?new Uint32Array(await crypto.subtle.digest("SHA-256",new TextEncoder().encode(e))):new Uint32Array([0]),a=new Uint32Array(1);return globalThis.crypto.getRandomValues(a),t=(a[0]^s[0])&524287,r=lr(t),r}async function Gr(n){let{enforceMix:e,setCount:t}=n||{},r,s=0;if(t||(t=1),t<1||t>40)throw new Error("setCount must be between 1 and 40 (upper limit is arbitrary).");do if(r=(await Promise.all(Array(t).fill(null).map(()=>Ln(n)))).join(" "),++s>32)throw new Error("Unable to generate a strongpin16 after 32 attempts (should never happen even with singleton sets).");while(e&&!(/[0-9]/.test(r)&&/[a-z]/.test(r)&&/[A-Z]/.test(r)));return r}async function cr(n){let e={...n,setCount:1};return Gr(e)}async function dr(n){let e={...n,setCount:4};return Gr(e)}function $r(n){let e={o:"0",O:"0",i:"1",I:"1",l:"1",z:"2",Z:"2",s:"5",S:"5",b:"6",G:"6",a:"9",g:"9",q:"9",m:"M",t:"T",X:"x",J:"j",e:"E",Y:"y",W:"w",C:"c",P:"p",n:"N",h:"N",U:"u",v:"u",V:"u",F:"f",K:"k"},t="";for(let r of n)t+=e[r]||r;return t}function Wr(n){if(!_n.test(n))throw new Error(`Input string contains invalid characters (${n}) - use 'process()'.`);let e=Array.from(n).map(t=>pt.indexOf(t));return e.reduce((t,r)=>t^r)&16?null:((e[0]*32+e[1])*32+e[2])*16+(e[3]&15)}var Nn=!1;function Dt(n){typeof n=="string"&&(n=X(n));let e=new Uint8Array(n);return(e[e.length-1]&1)===1?1:0}function jn(n,e,t){if(t===1n)return 0n;let r=1n;for(n=n%t;e>0n;)e%2n===1n&&(r=r*n%t),e=e>>1n,n=n*n%t;return r}function Vr(n,e){let t=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),r=BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),s=(t+1n)/4n,a=new Uint8Array(X(n)),i="0x"+Array.from(a,p=>p.toString(16).padStart(2,"0")).join("");var c=BigInt(i),l=jn(c*c*c-3n*c+r,s,t);l%2n!==BigInt(e)&&(l=t-l);let h=l.toString(16).padStart(96,"0"),o=new Uint8Array(h.match(/.{1,2}/g).map(p=>parseInt(p,16))),g=$(o);return{x:n,y:g}}function ct(n){try{if(n.length<=4)return;let e=n.slice(0,4),t=n.slice(4);switch(e.slice(0,3)){case"PNk":switch(e[3]){case"4":{let r=Y(t);if(r.byteLength!==48*2)return;let s=r.slice(48,96);return{x:$(r.slice(0,48)),y:$(s),ySign:Dt(s)}}case"2":case"3":{let r=e[3]==="2"?0:1,s=Y(t);if(s.byteLength!==48)return;let{x:a,y:i}=Vr($(s),r);return{x:a,y:i,ySign:r}}default:console.error("KeySubPrefix not recognized")}break;case"Xj3":switch(e[3]){case"4":{let r=Y(t);if(r.byteLength!==48*3)return;let s=r.slice(48,96);return{x:$(r.slice(0,48)),y:$(s),ySign:Dt(s),d:$(r.slice(96,144))}}case"2":case"3":{let r=e[3]==="2"?0:1,s=Y(t);if(s.byteLength!==48*2)return;let a=s.slice(0,48),{x:i,y:c}=Vr($(a),r);return{x:i,y:c,ySign:r,d:$(s.slice(48,96))}}case"x":{console.error("parseSB384string() - you need to rehydrate first ('hydrateKey()')");return}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}return}catch(e){console.error("parseSB384string() - malformed input, exception: ",e);return}}function sr(n,e,t){if(!n||n.length!==64||!e||e.length!==64||t===void 0)return;let r=new Uint8Array(2*48);return r.set(X(n),0),r.set(X(e),48),"Xj3"+(t===0?"2":"3")+I(r)}function Kn(n,e){if(n.length<=4)return;let t=n.slice(0,4);switch(t.slice(0,3)){case"PNk":return n;case"Xj3":switch(t[3]){case"4":case"2":case"3":return n;case"x":{if(!e){console.error("hydrateKey() - you need to provide pubKey to hydrate");return}let r=n.slice(4),a=Y(r).slice(0,48),i=$(a),c=ct(e);if(!c||!c.x||c.ySign===void 0){console.error("hydrateKey() - failed to parse public key");return}return sr(c.x,i,c.ySign)}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}}var Ze=class{strongpin={encode:lr,decode:Wr,generate:cr,generate16:dr,process:$r,base32mi:pt};importKey=xt;generateIdKey(e){if(!(e instanceof ArrayBuffer))throw new TypeError("Input must be an ArrayBuffer");return new Promise((t,r)=>{try{crypto.subtle.digest("SHA-512",e).then(s=>{let a=s.slice(0,32),i=s.slice(32);t({idBinary:a,keyMaterial:i})})}catch(s){r(s)}})}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new d("generateKeys() exception ("+e+")")}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch(()=>{Nn&&console.warn("... exportKey() protested, this just means we treat this as undefined")})}async encrypt(e,t,r){if(e===null)throw new d("no contents");if(!r.iv)throw new d("no nonce");return r.name?y(r.name==="AES-GCM","Must be AES-GCM (L412)"):r.name="AES-GCM",crypto.subtle.encrypt(r,t,e)}async wrap(e,t,r,s,a){let i=D(e),c=crypto.getRandomValues(new Uint8Array(12)),l=await v.dateNow(),h=new DataView(new ArrayBuffer(8));return h.setFloat64(0,l),{f:t,c:await U.encrypt(i,r,{iv:c,additionalData:h}),iv:c,salt:s,s:await U.sign(a,i),ts:l}}sign(e,t){return crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},e,t)}verify(e,t,r){return crypto.subtle.verify({name:"ECDSA",hash:{name:"SHA-384"}},e,t,r)}str2ab(e){return new TextEncoder().encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}generateRandomString(e=16){let t="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",r=t+"0123456789";return Array.from({length:e},(s,a)=>a===0?t.charAt(Math.floor(Math.random()*t.length)):r.charAt(Math.floor(Math.random()*r.length))).join("")}getRandomValues(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{y(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let r=new Uint8Array(1024);crypto.getRandomValues(r),e.set(r,t)}}catch(r){console.log(`got an error on index i=${t}`),console.log(r),console.trace()}return e}}async hashDown(e,t=12){if(t<4||t>42)throw Error("[hashDown] Length must be range 12-42.");let r=e instanceof ArrayBuffer?e:new TextEncoder().encode(e);return I(await window.crypto.subtle.digest("SHA-256",r)).slice(0,t)}};var U=new Ze;var Rn=!1,f=!1,ur="=".repeat(76),u=`
`+ur+`
`,Or=`
`+ur,gt=ur+`
`;function We(n){return n==null}function he(n){let e=/^[A-Za-z0-9]*$/,t=typeof n=="string"&&n.length===43&&e.test(n);return Rn&&!t&&console.log(`isSBUserId(${n}) => ${t}`),t}function Ve(n){return n instanceof Set}function P(n,e,t){if(t&&t.get){let r=t.get;t.get=function(){let s=`__${n.constructor.name}__${e}__`;if(this.hasOwnProperty(s))return this[s];{let a=r.call(this);return Object.defineProperty(this,s,{configurable:!1,enumerable:!1,writable:!1,value:a}),a}}}}function E(n,e,t){if(t&&t.get){let r=t.get;t.get=function(){let s=n.constructor.name,a=n.constructor.ReadyFlag;y(a in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),y(this[a],`'${s}.${e}' getter accessed but object not 'ready' (fatal)`);let i=r.call(this);return y(i!==null,`'${s}.${e}' getter accessed but return value will be NULL (fatal)`),i}}}if(typeof WeakRef>"u"){class n{_target;constructor(t){this._target=t}deref(){return this._target}}Object.defineProperty(n.prototype,Symbol.toStringTag,{value:"WeakRef",configurable:!0}),globalThis.WeakRef=n}function Hn(n){return new Promise((e,t)=>{crypto.subtle.importKey("raw",Y(n.key),"PBKDF2",!1,["deriveBits","deriveKey"]).then(r=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:n.salt,iterations:1e5,hash:"SHA-256"},r,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then(s=>{crypto.subtle.decrypt({name:"AES-GCM",iv:n.iv},s,Z.getData(n)).then(a=>{let i=new DataView(a.slice(-4)).getUint32(0);e(a.slice(0,i))}).catch(()=>{t("error decrypting shard")})}).catch(()=>{t("unable to derive key")})}).catch(()=>{t("unable to import key")})})}function Qe(n,e="http://localhost:3841"){return console.log("[loadShard] ++++ Using the following shard to load the library: ",n),new Promise((t,r)=>{let s=`${e}/api/v2/fetchData?id=${n.id}&verification=${n.verification}`;fetch(s).then(a=>a.arrayBuffer()).then(a=>{let i=L(a).payload;console.log("[loadShard] payload: ",a),console.log("[loadShard] data: ",i),n.version=="1"?i.key=Te(n.key):n.version=="2"||n.version=="3"?i.key=n.key:r(`unknown or missing shard version: ${n}`),Hn(i).then(c=>{t(c)}).catch(()=>{r("unable to decrypt")})}).catch(a=>{`${a}`.match('"ror":"cann"')?r("shard not found"):r(`failed to fetch or process shard: ${a}`)})})}function Un(n){return new Promise((e,t)=>{Qe(n).then(r=>{let s=new TextDecoder("utf-8").decode(r),a=document.createElement("script");a.textContent=s,document.head.append(a),console.log("'globalThis.SB' object (library loaded) should be available in the console."),e()}).catch(()=>{t("unable to fetch shard")})})}function hr(){let n=globalThis.configuration&&globalThis.configuration.jslibShardHandle?globalThis.configuration.jslibShardHandle:{version:"2",type:"p",id:"6bpz2xOwq9eCG9ZZzF4P0LMoydo89lgJg2TkJFvZvKx",key:"GxQ6at56Lv1p8V8AFZqQZur4MEKyiZzEMFpiyPnZYv0",actualSize:247612,verification:"8117233191337661625",fileName:"384.iife.js",shardServer:"https://shard.3.8.4.land",lastModified:1701294057573};return console.log("[boot.loadshard] ++++ Using the following shard to load the library: ",n),Un(n)}var On=new Set(["localhost","io","dev","app","land","ac","lk","cc","com","net","org","jp","de","fr","br","it","ru","es","me","gov","pl","ca","in","nl","edu","eu","ch","id","at","kr","cz","mx","be","se","tr","tw","al","ua","ir","vn","cl","sk","to","no","fi","us","pt","dk","ar","hu","tk","gr","il","sg","ru"]),qn={uk:["co","ac","gov","org","net"],au:["com","net","org","edu","gov"],nz:["co","org","net","edu","gov","ac","gen","kiwi","maori"],br:["com","net","org","gov","edu","mil"],jp:["co","ac","go","or","ne"],kr:["co","go","ne","or","re"],ar:["com","net","org","gov","edu","mil"],il:["co","ac","org","net","gov"],sg:["com","net","org","gov","edu","per"]},Gn=/^\d{1,3}(\.\d{1,3}){3}$/;function Ye(n=globalThis.location?.hostname??null){let e={baseDomain:null,subdomain:null,port:null};if(!n)return console.warn("[getDomainDetails] cannot read location"),e;let t=n.split(".").reverse();if(t.length===0)return console.warn("[getDomainDetails] cannot parse location"),e;let r=t[0],s=globalThis.location?.port??null;if(t.length===1)return r==="localhost"?{baseDomain:n,subdomain:null,port:s}:(console.warn("[getDomainDetails] singleton TLD not on allowed list"),e);if(Gn.test(t.slice(0,4).reverse().join("."))){let c=t.slice(0,4).reverse().join("."),l=t.length>4?t.slice(4).reverse().join("."):null;return{baseDomain:c,subdomain:l,port:s??null}}let a=null,i=null;if(r==="localhost"&&t.length===3&&t[1]==="ipfs")return{baseDomain:t[2],subdomain:null,port:s};if(r==="localhost")a=t.slice(0,1).reverse().join("."),i=t.slice(1).reverse().join(".")||null;else if(On.has(r))a=t.slice(0,2).reverse().join("."),i=t.slice(2).reverse().join(".")||null;else{if(t.length<3)return{baseDomain:null,subdomain:null,port:s};let c=t[1],l=qn[r];if(l&&l.includes(c))a=t.slice(0,3).reverse().join("."),i=t.slice(3).reverse().join(".")||null;else return e}return{baseDomain:a,subdomain:i,port:s}}var Zr=!1,Qr=!1;Zr&&console.warn("==== BootstrapLoader: 1. MutationObserver disabled (make sure this is not production)");Qr&&console.warn("==== BootstrapLoader: 2. Immediate and repeated scans disabled (make sure this is not production)");var mt=class{DBG;baseDomain;subdomain;port;loaderShard;reportScans=0;securedTimeout=globalThis.setTimeout.bind(globalThis);disconnectObserver;tagScan=()=>{if(Qr)return;let e=document.querySelectorAll("script");for(let t=0;t<e.length;t++)if(e[t].src)if(e[t].src.startsWith("blob:"))this.DBG&&console.log(`==== BootstrapLoader (immediate scan): Allowing (blob) script tag: ${e[t].src}`);else if(!new URL(e[t].src))console.warn(`==== BootstrapLoader (immediate scan): Removing external script tag (failed to parse it). Tried sourcing: ${e[t].src}`),e[t].remove;else{let{baseDomain:s}=Ye();s===this.baseDomain?this.DBG&&console.log(`==== BootstrapLoader (immediate scan): Allowing (hosted) script tag: ${e[t].src}`):(console.warn(`==== BootstrapLoader (immediate scan): Removing external script tag. Tried sourcing: ${e[t].src}`),e[t].remove)}};timedScan=()=>{this.tagScan(),queueMicrotask(()=>this.tagScan()),this.reportScans++,this.reportScans<10?this.securedTimeout(this.timedScan,100):this.reportScans<20?this.securedTimeout(this.timedScan,1e3):this.DBG&&console.log("==== BootstrapLoader (scan): Stopping regular scans for external script tags.")};removeExternalScripts=()=>{if(this.securedTimeout(this.timedScan,0),Zr)return()=>{};let e=new MutationObserver(t=>{t.forEach(r=>{r.type==="childList"&&r.addedNodes.forEach(s=>{if(s.nodeName==="SCRIPT"&&s instanceof HTMLScriptElement)if(s.src){console.warn(`==== BootstrapLoader (MutationObserver): Removing external script tag. Tried sourcing: ${s.src}`),s.remove();let a=document.createElement("script");a.setAttribute("sb384counterMeasure","blocked");for(let i of s.attributes)i.name!=="src"&&a.setAttribute(i.name,i.value);r.target.appendChild(a)}else this.DBG&&console.log(`==== BootstrapLoader (MutationObserver): Allowing script tag: ${s.innerHTML.slice(0,300)}...`)})})});return e.observe(document.body,{childList:!0,subtree:!0}),()=>e.disconnect()};scorchedEarth=()=>{this.DBG&&console.log("==== BootstrapLoader: SCORCHED EARTH");class e{observe(i,c){r("MutationObserver")}disconnect(){}takeRecords(){return[]}}let t={addEventListener:globalThis.addEventListener.bind(globalThis),setTimeout:globalThis.setTimeout.bind(globalThis),setInterval:globalThis.setInterval.bind(globalThis),MutationObserver:globalThis.MutationObserver,dispatchEvent:globalThis.dispatchEvent.bind(globalThis)},r=a=>(console.warn(`==== BootstrapLoader: Attempted to use "${a}" during scorched earth period (blocked).`),-1);globalThis.addEventListener=()=>r("addEventListener"),globalThis.setTimeout=()=>r("setTimeout"),globalThis.setInterval=()=>r("setInterval"),globalThis.MutationObserver=e,globalThis.dispatchEvent=function(a){return r("dispatchEvent"),console.log(a),!0};let s=()=>{this.tagScan(),globalThis.addEventListener=t.addEventListener,globalThis.setTimeout=t.setTimeout,globalThis.setInterval=t.setInterval,globalThis.dispatchEvent=t.dispatchEvent,globalThis.MutationObserver=t.MutationObserver,this.DBG&&console.log("==== BootstrapLoader: Original methods restored")};this.DBG&&console.log("==== BootstrapLoader: LOADING the loader"),Qe(this.loaderShard).then(a=>{this.DBG&&console.log("==== [END] BootstrapLoader: LOADING the loader"),s(),this.disconnectObserver(),queueMicrotask(()=>this.tagScan()),document.open(),document.write(new TextDecoder("utf-8").decode(a)),document.close(),console.log("==== [END] BootstrapLoader: done, handing over to loader")}).catch(()=>{document.body.style.visibility="visible"})};constructor(e,t=!1){this.DBG=t,this.loaderShard=e;let{baseDomain:r,subdomain:s,port:a}=Ye();if(!r)throw new Error("unable to determine base domain");this.DBG&&(console.log("==== BootstrapLoader: domain details:"),console.log({baseDomain:r,subdomain:s,port:a})),this.baseDomain=r,this.subdomain=s,this.port=a,document.body.style.visibility="hidden",console.log("==== [BEGIN] BootstrapLoader: starting"),this.DBG&&console.log("==== BootstrapLoader: 3. Debug logging enabled"),this.DBG&&console.log("==== BootstrapLoader: starting countermeasures"),this.tagScan(),queueMicrotask(()=>this.tagScan()),this.disconnectObserver=this.removeExternalScripts(),this.scorchedEarth(),this.DBG&&console.log("==== ALL DONE ... ")}};var pe=!1,gr=!1,$n="sb384cache",J="serviceWorker"in navigator?navigator:null,pr="<unknown>";globalThis.location&&(pr=globalThis.location.protocol+"//"+globalThis.location.host,gr&&console.log("[SBServiceWorker] serverPrefix: ",pr));var Ee=class{#e;#t;ready;constructor(e,t){this.#t=e,pe&&console.warn(`[SBServiceWorker] [constructor] ++++ setting up file helper service worker (${pr}) `),gr&&console.log("[SBServiceWorker] [constructor ++++ SBFS:",this.#t),this.ready=new Promise(async(r,s)=>{try{this.#e=await caches.open($n),r(await this.setupServiceWorker(t))}catch(a){console.error("[SBServiceWorker] [constructor] Error setting up service worker: "+a),r(!1)}})}async postMessage(e){if(await this.ready===!1){let t="[SBServiceWorker] 'ready' is false (?) ... cannot post any messages";throw console.error(t),new Error(t)}if(!J){let t="[SBServiceWorker] 'ready' is null or false (?) or no navigatorObject ... cannot post any messages";throw console.error(t),new Error(t)}if(J.serviceWorker&&J.serviceWorker.controller)J.serviceWorker.controller.postMessage(e);else{let t="[SBServiceWorker] "+(J.serviceWorker?"No service worker. ":"")+(J.serviceWorker.controller?"No controller. ":"")+"Cannot post message to service worker.";throw console.error(t,`
`,`Message that will be dropped:
`,e),new Error(t)}}async setupServiceWorker(e){if(!J)return console.error("[SBServiceWorker] ERROR: navigator.serviceWorker is not available"),Promise.reject("[SBServiceWorker] ERROR: navigator.serviceWorker is not available");try{let t=await J.serviceWorker.getRegistrations();if(t.length>1){console.error("[devLoader] ERROR: we should never have MANY service workers registered");for(let r of t)console.log("[devLoader] ++++ unregistering service worker: ",r),await r.unregister();pe&&console.log("[SBServiceWorker] ++++ ... finished unregistering, registering a fresh one"),await J.serviceWorker.register("service-worker.js")}else t.length===1?pe&&console.log("[devLoader] ++++ we already have a service worker registered"):(pe&&console.log("[SBServiceWorker] ++++ Did not have a service worker, registering one"),await J.serviceWorker.register("service-worker.js"));return pe&&console.log("[SBServiceWorker] ++++ waiting for service worker to be ready then setting up message handler"),await J.serviceWorker.ready,J.serviceWorker.addEventListener("message",e),J.serviceWorker.controller?(sessionStorage.removeItem("swReloaded"),console.log("[SBServiceWorker] Service worker is ready and controlling the page."),J.serviceWorker.controller.postMessage({type:"INIT"}),!0):sessionStorage.getItem("swReloaded")?(console.warn("[SBServiceWorker] Already reloaded once, avoid looping."),sessionStorage.removeItem("swReloaded"),!1):(console.warn("[SBServiceWorker] No controller after registration, setting flag and reloading page."),sessionStorage.setItem("swReloaded","true"),window.location.reload(),!1)}catch(t){return console.error("[SBServiceWorker] Error registering service worker: "+t),!1}}async cacheResourceFromArrayBuffer(e,t,r){if(!r||!(r instanceof ArrayBuffer)){let i="[SBServiceWorker] Got empty or no data or not an array buffer for cacheResource()";return console.error(i),Promise.reject(i)}if(await this.ready,!this.ready||!this.#e){let i="[SBServiceWorker] 'ready' or 'sb384cache' is null ... cannot cache any resources";return console.error(i),Promise.reject(i)}e==="/index.html"&&(pe&&console.log("[SBServiceWorker] **** automatically adding '/' for '/index.html'"),await this.cacheResourceFromArrayBuffer("/",t,r)),pe&&console.log(`[SBServiceWorker] Got data for ${e} cacheResourceFromArrayBuffer()`,r);let s=new Response(r,{status:200,headers:{"Content-Type":t}});await this.#e.put(e,s);let a=await this.#e.match(e);a?gr&&console.log("Response successfully cached:",a):console.error(`**** Response was not cached **** '${e}'`,s)}async cacheResourceFromHandle(e,t,r){if(pe&&console.log(`[SBServiceWorker] Caching resource '${e}' mimeType '${t}' from handle:`,r),r=await this.#t.SB.storage.fetchData(r),!r||!r.payload)throw new Error(`[SBServiceWorker] Error fetching data for handle ${r}`);return pe&&console.log(`[SBServiceWorker] Caching resource for '${e}' from handle, got finalized handle:
`,r),this.cacheResourceFromArrayBuffer(e,t,r.payload)}};b([Ct(2)],Ee.prototype,"postMessage",1);var Wn={loadShard:Qe,bootstrapJsLib:hr,boostrapLoaderClass:mt,getDomainDetails:Ye,serviceWorker:Ee};async function jt(n){let e,t;if(typeof n=="string"?e=n:typeof n=="number"?t=n:n&&(e=n.extraEntropy,t=n.words),(!t||t<1)&&(t=3),t>16)throw new Error("Too many words requested, max is 16.");if(Yr.length!==16384)throw new Error("Word list is not the expected size (16x1024).");let c=globalThis.crypto.getRandomValues(new Uint8Array(32)),l=c;if(e){let g=new TextEncoder,p=await globalThis.crypto.subtle.digest("SHA-256",g.encode(e)),m=new Uint8Array([...c,...new Uint8Array(p)]);l=new Uint8Array(await globalThis.crypto.subtle.digest("SHA-256",m))}let h=new Uint16Array(l.buffer);return Array.from(h,g=>Yr[g&16383]).slice(0,t).join(" ")}async function mr(n){let e=globalThis.crypto.getRandomValues(new Uint8Array(16));return n||(n=await jt(3)),await Jr(n,e,1e7)}async function fr(n,e,t){return await Jr(n,e,t)}async function Jr(n,e,t){let s=new TextEncoder().encode(n),a=await globalThis.crypto.subtle.importKey("raw",s,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),i=await globalThis.crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:t,hash:"SHA-256"},a,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);return{phrase:n,key:i,salt:e,iterations:t}}var Yr=["that","this","have","they","what","from","there","about","know","just","said","like","will","when","more","people","right","time","could","into","going","other","then","because","yeah","these","want","good","also","over","only","come","very","even","first","where","most","make","down","much","those","many","okay","take","before","need","such","little","work","still","never","last","year","world","life","around","tell","mean","between","state","thing","both","same","long","another","great","three","again","each","school","home","love","help","away","thought","doing","find","sure","give","used","always","better","since","next","today","night","thank","place","during","kind","maybe","best","anything","found","must","family","point","left","sorry","talk","percent","nothing","head","under","city","feel","keep","public","high","country","social","enough","call","room","believe","mother","until","face","once","hand","please","case","system","million","group","father","course","number","game","real","someone","woman","health","getting","small","water","news","name","second","change","business","power","door","story","often","data","team","company","question","book","among","problem","later","hard","already","wait","making","person","together","young","side","morning","play","example","program","able","become","open","almost","behind","table","live","start","else","human","john","early","five","whole","history","across","remember","idea","mind","process","wrong","season","rather","police","control","although","general","girl","everyone","body","leave","party","line","large","pretty","child","light","office","music","nice","move","level","fine","order","food","front","stay","matter","either","moment","toward","future","local","area","sense","issue","hope","anyone","possible","baby","voice","taking","turn","reason","close","half","deal","student","friend","inside","major","federal","service","gone","street","myself","market","hair","sort","guess","bring","post","gave","provide","figure","security","heart","outside","cause","tonight","bush","wife","hold","model","south","north","report","phone","thus","above","ready","soon","media","special","watch","couple","tried","available","current","evidence","energy","goes","view","happy","science","stuff","field","alone","space","easy","middle","photo","town","hello","month","result","vote","park","answer","present","common","certain","road","west","interest","upon","herself","similar","practice","cost","nature","force","test","sound","short","include","series","brought","congress","language","strong","risk","near","check","agree","list","physical","nation","share","project","video","culture","film","action","private","position","blood","learn","miss","total","floor","economy","industry","earth","record","stand","green","truth","movie","brother","wall","rate","fall","board","increase","husband","forward","ahead","kept","defense","return","price","note","window","effects","response","walk","summer","focus","blue","paper","average","east","type","beyond","quality","daughter","step","design","coach","blog","tomorrow","final","hour","staff","drive","ability","race","simple","section","access","entire","cold","various","century","subject","mouth","chief","begin","page","speak","author","brown","consider","minute","choice","review","write","cool","doctor","anyway","senator","offer","excuse","seven","legal","amount","main","sleep","giving","huge","theory","impact","success","worth","friday","perfect","hurt","onto","range","stopped","online","crazy","sitting","welcome","trade","wish","picture","size","below","eight","sister","shut","sign","piece","june","term","member","allow","follow","cover","image","worry","save","judge","march","source","hospital","trust","effort","heat","original","saturday","kitchen","expect","pass","spend","union","july","forget","smile","safe","build","hate","glass","message","popular","river","account","anybody","skin","debate","honey","trouble","dinner","send","address","daily","ball","credit","region","caught","goal","afraid","october","army","budget","club","text","search","anymore","visit","senior","unless","peace","primary","female","version","civil","leader","sample","drink","scene","funny","april","income","fish","chair","shown","material","favorite","monday","brain","network","explain","property","nuclear","degree","song","tuesday","freedom","marriage","basic","wonder","stage","lady","scale","develop","base","rich","spring","fresh","coffee","clean","september","opinion","bottom","stock","hundred","title","choose","radio","claim","survey","rule","negative","rose","capital","normal","island","easily","letter","dream","surface","wide","trial","purpose","suggest","sell","direct","protect","weekend","yesterday","pull","measure","mass","thursday","remain","seat","appear","labor","amazing","camera","museum","method","tree","alive","trip","patient","plus","shoulder","grow","secret","firm","style","avoid","strategy","edge","gold","heavy","quick","charge","neither","travel","enjoy","produce","captain","gender","hotel","task","round","sweet","track","apple","afternoon","require","truly","correct","hill","actual","ship","catch","annual","screen","moral","vice","lake","benefit","drop","glad","quiet","beach","filled","empty","memory","ride","card","january","tiny","release","google","reform","warm","dance","garden","reduce","speed","rise","grew","neck","improve","slow","raise","prison","winter","extra","battle","august","receive","salt","spot","ended","foot","worst","library","spirit","code","mountain","distance","exercise","regular","broken","join","throw","machine","carry","stone","chest","desk","aware","demand","camp","wear","identify","crowd","magazine","artist","target","paying","novel","decide","gotten","notice","link","smart","cook","path","advice","surprise","cash","email","twice","guard","snow","solution","spread","unique","bright","faculty","train","urban","dress","uncle","lucky","eating","truck","dude","evil","planet","weather","square","decade","wild","damage","supreme","prevent","mention","host","animal","teach","obvious","master","december","push","balance","useful","file","agent","exist","initial","soft","finish","victory","rain","tired","birth","youth","nose","wine","digital","moon","shop","suit","option","sugar","valley","border","exchange","lunch","core","clip","jury","domestic","lying","forest","unit","equal","boat","plenty","yellow","apart","owner","democracy","stick","wake","double","tall","visual","traffic","coast","proud","soul","busy","weird","famous","mistake","wood","village","cross","guide","self","flight","quarter","aside","ring","chicken","voting","till","shirt","ladies","waste","horse","theater","laugh","universe","ensure","gain","smoke","barely","plastic","sport","pair","february","sight","taste","remove","stuck","reference","match","gift","supply","farm","blame","boss","pattern","super","fuel","object","wedding","fault","carefully","silver","indicate","mama","reaction","seek","feature","metal","enter","twenty","user","ought","usual","describe","buddy","parent","argue","beauty","magic","click","twitter","device","shift","bunch","golf","assume","finger","achieve","drew","draw","bridge","calm","silent","ancient","kiss","tool","flat","drove","typical","occur","quote","rising","display","print","meat","orange","admit","rural","accident","pepper","pool","length","grace","solar","vehicle","giant","fashion","crew","estate","treat","tape","amendment","jump","faster","struggle","suspect","cream","reflect","rice","rare","jimmy","afford","cheese","album","topic","milk","hurry","cognitive","ocean","grant","aunt","mirror","solid","limit","copy","episode","outcome","chapter","bird","acts","transfer","affected","facing","numerous","airport","promote","loud","awesome","flying","attitude","darkness","vast","conduct","upper","frame","danger","strike","pink","upset","stadium","panel","brand","relief","emphasis","category","injury","diet","jersey","gulf","dust","client","joke","escape","wealth","coat","alright","grass","santa","brief","mobile","circle","encourage","alcohol","feed","noise","wave","stairs","advance","engine","plate","document","purchase","sudden","zone","crying","draft","resource","unable","quit","engage","anger","tone","festival","element","latter","motion","gore","decline","chosen","deeply","pregnant","talent","hidden","express","armed","stomach","spokesman","session","winner","landscape","sauce","narrow","duty","error","bike","capable","fruit","grab","actor","rush","lesson","bread","sing","journey","avenue","butter","steel","kick","route","volume","turkey","minimum","cycle","electric","yard","detail","gaze","holiday","trend","theme","cheap","mixture","roof","junior","cute","relax","asleep","witness","iron","jacket","prepare","carbon","skill","mixed","sand","sentence","shadow","fifth","manage","dean","disagree","unusual","hero","hungry","replace","anxiety","height","prefer","zero","creek","smooth","proof","iphone","innocent","mail","juice","item","split","aspect","crucial","cable","arrest","attend","aids","recall","swear","fiction","ticket","pacific","update","index","shock","desert","profit","nurse","thirty","math","minor","substance","dirt","loan","monitor","entry","cloud","hence","savings","ending","awful","angle","reveal","boots","comfort","ongoing","gate","fiscal","sheriff","ordinary","stir","deliver","bone","solve","fiber","license","olympic","portion","cried","random","navy","cake","select","shame","lift","ignore","exact","garlic","pilot","marine","ultimate","shaking","veteran","gallery","sake","wheel","define","citizen","hunt","inner","maximum","liberty","lock","fool","swing","unknown","rough","switch","foster","upstairs","royal","illness","logic","wisdom","column","corn","repeat","prayer","plot","sheet","riding","clock","efficient","drama","stable","suffer","ceiling","pride","mystery","obtain","brilliant","knee","couch","oven","curious","deputy","earn","belt","expand","palm","frozen","analyst","dating","champion","phrase","slept","menu","sequence","dynamic","cousin","knock","essay","gear","discover","elite","rescue","load","silly","ugly","flash","wash","scope","deck","olive","kingdom","dawn","muscle","domain","priority","divorce","twelve","evaluate","soldier","dining","depth","ethics","involve","vital","rapid","motor","tower","virus","burden","hire","deer","flag","tank","rely","chase","combine","trick","prize","fame","wing","baking","monster","lawsuit","wolf","retail","salad","remind","connect","pitch","atlantic","alien","payment","wire","colonial","layer","forum","concert","whoever","wise","fence","enhance","recipe","tissue","bench","dish","dole","soccer","badly","wound","pause","darling","uniform","glance","settle","chef","empirical","brush","broadcast","ghost","chronic","pentagon","valid","fantasy","garage","lemon","frequent","disorder","mutual","rent","humor","climb","liquid","auto","arrive","affair","seed","diabetes","convince","powder","fitness","penalty","label","heritage","candy","deny","stole","yield","collect","fortune","pope","extend","jeans","mortality","tail","duke","stem","decrease","implement","virtual","inquiry","jazz","soup","delay","assist","awake","abstract","pizza","galaxy","predict","sixth","boost","midnight","burst","gospel","cabin","android","shell","craft","gradually","poem","spatial","racing","ipad","opera","onion","actress","cotton","slip","lyrics","utility","rookie","depend","ideology","eliminate","bacteria","inch","gather","coping","input","tobacco","exit","judicial","refuse","horror","sacred","robin","differ","scheme","anchor","lawn","slide","backed","arena","invest","trash","failing","output","wage","clay","dried","exhibit","genius","acid","beef","bullet","flavor","enable","eager","abroad","biology","clinic","panic","mask","aging","script","embrace","permit","sword","elevator","lily","grip","nominee","lonely","tennis","slight","eligible","gentle","ranch","globe","tube","glory","chip","banking","insane","blade","essence","venture","spin","boring","outdoor","density","fancy","timing","carol","brave","rally","cliff","repair","fabric","saint","flower","tackle","habit","amid","endless","symbol","spell","spare","immune","alert","ridge","rope","garbage","harbor","guilt","piano","guitar","myth","alpha","shed","genuine","observe","excess","alarm","segment","faint","ritual","gravity","width","blanket","manual","drank","oxygen","bitter","pound","oxford","mouse","cruise","attract","chaos","tent","rail","crystal","duration","chemicals","luxury","cure","trigger","comic","wrap","praise","ranked","upcoming","mandate","breeze","emerge","purse","punch","twin","cave","swept","salmon","canyon","feminist","gesture","cloth","reward","phoenix","monetary","castle","swung","rifle","regret","silk","swim","rage","hockey","precise","outer","buffalo","submit","grocery","divide","emotion","invite","skirt","census","tiger","wrist","grill","spray","miracle","patch","resist","tunnel","brick","tactics","poet","confirm","palace","shoe","crop","custom","glow","caring","bath","thumb","rival","sadly","pipe","grief","hood","neutral","liability","pension","genre","install","margin","barn","legend","clause","outlook","stimulus","bless","awkward","harsh","carpet","dragon","jealous","lens","folk","alike","diamond","romance","patrol","adjust","mercy","tribe","curve","parade","tightly","cluster","cattle","critic","skull","nerve","whisper","fluid","alley","trap","casual","rocket","rubber","snake","usage","duck","toss","useless","gorgeous","pork","basket","detect","vertical","scare","hint","blast","clever","pastor","bubble","twist","athlete","rhythm","snap","penny","premium","syndrome","eaten","delta","tomato","dutch","tshirt","slice","unfair","pole","dose","fork","dignity","elegant","grain","lazy","medal","skiing","geography","harvest","ruined","orbit","arise","canvas","blend","inform","aged","urge","leaf","negotiate","eternal","cage","upgrade","damp","aluminum","tragic","alter","barrel","acquire","liar","bonus","verdict","envelope","ecosystem","blinked","viable","chat","disk","spoon","pulse","filter","molecular","laptop","laundry","fever","toast","stunned","shallow","boil","pardon","potato","elaborate","monkey","ambitious","roster","atop","hatred","elbow","varying","municipal","fossil","ashamed","ecology","lecture","salvation","flip","fled","filing","oppose","quantum","wagon","robot","nail","loop","upward","lion","lamp","doll","rude","cart","impose","infant","merry","pond","noble","hammer","purely","cruel","retention","shrimp","soap","vocal","bulk","reluctant","vessel","borrow","waving","sunny","clerk","retreat","curled","matrix","junk","rack","uncertain","notable","absent","fraction","drill","wheat","asset","helmet","ninth","cherry","tray","sunset","stack","stove","spouse","buzz","autism","shine","surge","theft","poison","squeeze","bacon","soda","abruptly","sustain","grid","jungle","tide","loyal","nest","denial","approve","aisle","ginger","glimpse","diagram","gaming","hybrid","amber","lung","eagle","cape","shield","semester","epic","exotic","educate","ruby","ladder","scout","curse","parish","plaza","radar","emperor","thee","fatal","casino","outfit","crisp","warfare","fabulous","rabbit","employ","curtain","robust","imperial","unhappy","vague","absurd","ankle","astronomy","enforce","intact","warrior","gambling","flame","debris","pledge","retire","petition","taxi","announce","trim","wipe","bucket","hydrogen","trembling","behave","apology","scan","grove","crush","puzzle","auction","cope","abandon","fold","hollow","adapt","waking","satisfy","tourist","vacuum","yoga","sculpture","sphere","illusion","cargo","juvenile","dock","canal","vintage","bean","arrange","silicon","copper","ambulance","harmful","bust","brass","blah","arctic","pending","autumn","icon","caution","slim","epidemic","fragile","mankind","calcium","merit","pencil","dilemma","moisture","steak","elder","swift","despair","whale","lance","tweet","aide","humble","thunder","bicycle","payroll","algorithm","marathon","bargain","unlimited","twilight","inspire","dioxide","wool","tuition","herbs","rebel","subway","halt","upright","organ","sadness","pill","plug","marble","coke","sierra","buyer","mansion","audit","echo","triumph","bronze","hawk","onset","pouring","boxing","clarify","robe","rebuild","timothy","widow","fatigue","diary","cosmic","coin","sank","expose","setup","outrage","fade","synthesis","edit","spike","dairy","upside","gown","sponsor","float","maid","baked","arrow","seldom","crane","catalog","sneak","neatly","lounge","elephant","drift","grinning","bachelor","dusk","empathy","pumpkin","guts","urging","goat","cancel","antique","cinema","donate","petty","trophy","punk","neglect","tooth","roast","outbreak","peanut","whip","plausible","drained","veto","monument","yogurt","armor","kidney","hull","drum","asthma","balcony","obscure","slot","daylight","slender","shaft","shaping","parsley","unaware","donor","awhile","aviation","timber","dismiss","utter","pioneer","tattoo","velocity","limb","immense","absorb","naive","misery","peculiar","dodge","clown","arbitrary","parole","majesty","runner","evolve","glue","frost","ozone","lining","syrup","gossip","melt","sage","cane","rigid","impulse","erosion","ferry","maple","picnic","void","dash","glove","burger","crawl","skies","vivid","trio","cinnamon","oval","velvet","banana","axis","indoor","fury","enduring","barbecue","glare","prone","eats","wikipedia","slate","cement","blouse","salon","lure","snack","knelt","puppy","caucus","feast","gratitude","dial","turtle","mold","wizard","lend","visa","yahoo","proximity","bartender","bolt","viral","slam","thigh","stamp","drone","cathedral","venue","sketch","garnish","coherent","stool","foil","gazing","delete","bounce","aggregate","lunar","dubbed","chop","zombie","thrive","sanctuary","dislike","nephew","modify","eclipse","polar","badge","foam","arose","monopoly","panama","amused","banner","shone","fading","petroleum","runway","fidelity","verify","maturity","unwilling","ashes","spider","rumor","navigate","blunt","preacher","gleaming","attach","refined","bunny","cedar","tapping","ample","nickname","daisy","vista","coral","ribbon","reunion","jeep","tipped","outward","exile","chunk","resemble","envy","umbrella","unrelated","cough","flock","vacant","parlor","masculine","uranium","obstacle","ditch","stubborn","poker","naming","coconut","unstable","exclude","affiliate","module","reps","semantic","crept","chewing","bats","cannon","psychic","hazard","unwanted","ethanol","ragged","prolonged","sturdy","ivory","trinity","factual","ipod","dime","bundle","riot","apostle","diner","culinary","lucrative","emission","turf","nebula","ramp","juror","demise","shrug","unsure","ninja","turmoil","rotten","stellar","imminent","cozy","disbelief","vowed","scrap","rehab","vigorous","tile","uneasy","dentist","endorse","dove","symptom","fringe","amnesty","scoop","cilantro","xbox","altitude","batch","vest","volatile","liking","itunes","apron","raven","shove","fetch","napkin","heap","nanny","jelly","dwarf","suburb","quilt","scam","clash","regain","cache","humming","abnormal","frantic","dizzy","nineteen","exemption","popcorn","cloak","bulb","unison","herald","laurel","paycheck","elusive","celery","cabbage","thickness","kinship","stereo","vegan","onstage","dictator","angrily","anyhow","dipped","reckless","seminar","darn","niece","frown","trilogy","daunting","hesitate","salsa","trivial","boxer","swell","ounce","surround","pony","unseen","rogue","saga","pyramid","marvelous","tying","wrath","voyage","rover","gigantic","scotch","sesame","friction","hypocrisy","baggage","diminish","curator","affluent","coma","stew","rinse","zoning","ebay","upscale","exhaust","vendor","jaws","woven","violin","oops","daytime","citation","glucose","drown","geometry","agony","rebound","alto","carnival","obedience","hush","pulmonary","cavalry","purity","unhealthy","refrain","awoke","anatomy","unpopular","estrogen","java","lumber","lavender","poking","perennial","clutch","uninsured","neon","skeleton","shack","parmesan","dumping","chevy","splendid","reproduce","avid","geek","pueblo","dice","scroll","sedan","tilt","sway","mule","hamlet","grape","jasmine","tavern","raging","deed","upheld","cube","disregard","cone","nutrient","oppressed","suing","crimson","humility","choking","walnut","rash","foyer","oyster","swan","perpetual","query","font","zoom","slogan","frenzy","yeast","vascular","derby","harness","upload","pajamas","trunks","phantom","carving","drastic","staple","uneven","flap","unchanged","anthem","mushroom","gluten","exquisite","drizzle","asparagus","irregular","bleak","proactive","sloppy","cortex","spur","womb","exodus","lent","obsolete","grazing","almighty","lantern","salute","atom","hefty","bony","polo","floral","glacier","raft","deploy","guru","enroll","kosher","mutation","sibling","revolt","ouch","brewing","alibi","amino","blazing","falcon","hacking","flint","baton","depict","gamma","aspirin","nylon","pediatric","broom","acre","sabbath","glamorous","turbine","extinct","unsafe","quake","bamboo","bolster","groom","flick","mantra","hastily","graffiti","pavilion","rust","mundane","bluff","uphill","sediment","enzyme","sermon","coronary","blizzard","uncover","bash","ebook","avalanche","slapping","cadillac","perjury","unpaid","dazzling","cavity","freight","capsule","disgrace","crib","unfold","empower","blush","clone","motto","sizable","uphold","plywood","tidy","tidal","cider","disdain","bonding","dominion","gothic","envision","nerd","splashed","ominous","manor","unlawful","dotted","subgroup","taps","outing","mosaic","eccentric","nurture","cupped","sitcom","mashed","immortal","demeanor","abide","sushi","rethink","sinister","stench","brethren","unnatural","multiply","pagan","cylinder","karma","bogus","unequal","halves","rumble","claw","paced","monastery","expire","outgoing","garment","stumble","await","deacon","morbidity","mummy","ceramics","citrus","untouched","evoke","stout","pesticide","duplicate","frying","cradle","lavish","siren","crescent","frail","dagger","mute","vineyard","pupil","pulp","corporal","latitude","voltage","abdominal","junction","rearview","diaper","moaning","skype","stash","paddle","putt","fetal","eggplant","diploma","pouch","evacuate","haunt","slab","deity","thud","slacks","upbeat","varsity","lizard","skipping","mating","dart","kitten","elastic","debtor","catfish","vanish","kudos","immature","smashing","luminous","maverick","hamburger","sarcasm","shudder","poppy","goofy","murky","dwelling","usable","taco","diocese","slit","mahogany","sublime","ascertain","licking","wiring","nicotine","brittle","aroma","swarm","subtly","unnoticed","enlarged","brunch","sniff","duct","rhyme","skyline","snoring","smuggling","mango","sludge","onboard","cascade","botanical","vantage","safari","fascism","hurdle","grunt","cucumber","armchair","avatar","wrought","skewed","unethical","chlorine","casket","usher","angular","mural","sulfur","prenatal","enrich","latch","tainted","parcel","hash","tutor","hulk","apache","stiffness","colt","untrue","plural","bobbing","algebra","tanned","clad","capped","slashed","wifi","setback","kettle","ludicrous","grit","calorie","tumble","ultra","entail","pang","obnoxious","goggles","mulch","delusion","giggle","sagging","unspoken","utmost","caliber","sprung","morse","cricket","slain","jolt","embody","dugout","payday","sabotage","thorn","ignition","defy","shabby","crook","culprit","dimly","skeptic","antarctic","omega","subdued","swirl","reopen","palpable","rewrite","cactus","bloated","craving","guise","panther","wrench","jogging","ripple","getaway","jolly","finch","reclaim","shuffle","dolphin","fanning","uptown","voucher","rosy","rift","ebony","rigor","espionage","brim","nutmeg","caravan","coauthor","gloss","omission","hurled","giddy","manned","payer","whiff","helium","bribe","manifesto","uncanny","geology","janitor","ridden","hazy","envoy","jockey","comrade","cheddar","imitate","robbing","afloat","elves","anew","oasis","prowess","agile","augmented","onward","kung","blatantly","flanked","erratic","cubicle","muzzle","seismic","groin","sullen","hassle","utopia","shawl","eloquent","freckles","trolling","serpent","siding","glitter","grueling","wand","dwindling","kite","diligence","rake","polymer","annex","feeble","banish","icing","reuse","denote","emit","payback","curfew","parrot","blitz","relocate","mower","cassette","cork","slug","stitch","uptake","linoleum","unbiased","sinner","huddle","plutonium","enclosure","wiry","acorn","flyer","chubby","smirk","reputable","myspace","edgy","plow","lucid","espresso","roaming","dosage","dill","swipe","rectangle","yarn","saline","lagoon","balsamic","barley","sled","rejoice","coliseum","gutter","pancake","clatter","frivolous","wavy","enchanted","clamp","borough","remnant","duffel","whomever","gulp","lagged","opium","subprime","idly","bulge","onslaught","tummy","frayed","cadmium","morphine","plethora","ferocious","tweak","rink","rambling","satchel","desolate","pecan","unmarked","arson","esquire","faucet","aptly","coil","perish","yummy","clump","flirt","chute","frighten","crouch","buggy","python","aloft","brute","murmuring","pebble","quail","badass","rupture","manpower","quadrant","jingle","savor","sliver","manly","rebirth","fervor","unruly","expulsion","flop","ravine","fiddle","ditto","engraved","jargon","seizing","muck","manhood","entourage","shrank","panda","nectar","recreate","paternal","spied","veal","acutely","karate","lego","mammal","ploy","atypical","shredder","purge","marlin","exalted","deem","waltz","enamel","dedicate","unwelcome","hangover","cofounder","celtic","aptitude","daycare","deafening","creole","rabid","kinetic","emblem","whoops","mayday","lash","duchess","unlucky","cadet","upfront","deprive","acclaim","nutty","ammonia","conjure","rarity","fondly","jumbo","lanky","joyous","extortion","douche","juggling","simmering","lark","huff","mumbling","enigmatic","rundown","visor","eradicate","paprika","debit","paparazzi","uplifting","canine","tucking","duly","fang","edging","uproar","epiphany","afar","deftly","hunk","maroon","bleep","pungent","embark","staunch","cupcake","pamphlet","cobalt","whimsical","audacity","wreath","evade","wrinkle","dimmed","grimace","cringe","nutshell","wilt","neuron","unsolved","fanatic","macaroni","tinker","gauze","rickety","pesky","wasp","pessimism","slang","veggie","unworthy","phosphate","unquote","ricotta","snagged","elongated","grudge","sprout","fleshy","synopsis","thaw","derail","drab","calamity","skid","sanitary","lazily","xerox","lair","snout","onscreen","yiddish","evasion","smog","porous","shrouded","bagel","sheath","unicorn","secluded","itinerary","coexist","stalemate","astute","sift","pluck","suction","yanking","bruising","esteemed","rebate","dingy","widget","oncoming","exuberant","wobbly","prelude","bonfire","tingling","nape","clover","chug","dyslexia","prozac","mutt","quiver","scuba","jinx","easel","serotonin","endanger","jarring","wharf","waffle","ajar","twig","mace","pelvis","banter","pruning","nimble","anemia","limelight","seduce","ligament","anaerobic","wolverine","cryptic","lurch","kerosene","boasting","panorama","babbling","umpire","creme","fanfare","posh","jukebox","enquirer","limping","unbroken","iodine","deflation","risotto","hazing","idiocy","goliath","unbeaten","zebra","rants","omit","tarmac","dork","dormitory","skimmed","feisty","stoic","arming","crux","oxidation","mournful","swoop","saffron","fender","cola","pried","gimmick","maggot","grumbling","deduct","fedora","sassy","swagger","agnostic","obituary","slum","gong","rind","nemesis","nifty","erupt","gullible","awry","mowing","snitch","woof","sizzling","wince","yelp","broiler","irritable","retorted","alias","bovine","shimmer","scowling","earring","bonnet","molasses","sneeze","ruse","zeppelin","canteen","ether","unskilled","reiterate","spew","hamper","doable","scorpion","almanac","daybreak","legislate","skyward","swivel","earshot","outage","tiring","tulip","jokingly","aloof","donut","wistful","churn","dares","turret","cleft","blot","tantrum","outnumber","epilepsy","baritone","italics","atrium","askew","dandy","hatchet","wannabe","fable","reshape","opal","linguini","viper","uptight","wispy","hypnotic","sash","dorsal","sultry","blob","shun","glaucoma","greyhound","luster","raking","unnerving","unscathed","unmoving","evaporate","quack","flaring","lukewarm","fraternal","smudge","bogged","dilute","banjo","splurge","gauntlet","lilac","awning","nautical","baffling","varnish","kleenex","bonanza","upturned","amigo","scapegoat","snarl","anyplace","otter","lapel","panhandle","whiny","kangaroo","unwrapped","renounce","alkaline","aqua","siberian","omen","etching","bluish","rigging","flier","celibacy","kilometer","saxophone","undress","alfalfa","peddling","dainty","smitten","blip","elated","unplanned","paltry","dribble","geriatric","unholy","unproven","hermit","litmus","synergy","schilling","silt","mutiny","mardi","wimp","drool","peroxide","tint","payable","reggae","unending","clang","floss","atrocious","detonate","malt","rimmed","sizing","hamster","chirping","tabby","roulette","humvee","destitute","unfunded","crock","lard","catwalk","shush","swab","gaffe","scolding","ladle","trifle","unkind","deport","lapping","jigsaw","surname","snuff","fructose","resale","leggings","feline","zealous","jalapeno","cuddle","amiss","kimono","napping","cusp","chump","thong","amiable","isotope","rascal","reptile","clunky","unopened","caddie","unkempt","quirk","wick","romp","surcharge","zodiac","raider","shank","aghast","glazing","kennel","perky","slush","gusto","camcorder","stipend","knapsack","gurgling","reimburse","flaky","preheated","blissful","yonder","roving","reaffirm","amulet","aloha","movable","chowder","untapped","cinch","nugget","groggy","detract","vibes","gills","ablaze","musket","cupid","tycoon","deuce","umbilical","tubular","pout","jittery","truffle","knoll","femur","flaxseed","haphazard","folic","defuse","livable","trespass","ointment","magma","nibble","appointee","frisbee","afoot","pelt","dissuade","deodorant","sphinx","euphemism","affront","pelican","sauna","rudder","vengeful","reappear","chihuahua","reheat","gondola","rewind","flounder","labrador","licorice","abrasive","mossy","smock","abreast","hemlock","tibia","polka","gibberish","drudge","ooze","lurk","volley","outhouse","magenta","velcro","sycamore","irate","crayon","poplar","wafer","cobbler","darwinism","phobia","tiara","barometer","rename","baguette","enslave","wham","rotunda","unshaven","tarot","grub","porridge","galore","docile","lullaby","fidgeting","slaw","coerce","gooey","snugly","skyrocket","lint","guacamole","stupor","frustrate","snooze","unafraid","boxy","thyself","balmy","hertz","aloe","endpoint","geiger","ibuprofen","gory","daydream","kiwi","taunt","judo","exorcism","esophagus","mulberry","joystick","unraveled","froth","undated","snippet","valuables","ruckus","crevice","zipping","dowry","lubricant","prewar","ungodly","petal","scion","raffle","elude","croak","runt","unjustly","eskimo","gush","maimed","clique","unsigned","goon","elixir","silo","kiln","plop","talon","oxymoron","kelp","dexterity","pellet","anvil","corset","scavenger","twirl","jugular","popsicle","purr","fretted","gopher","crudely","oblong","scoff","conical","serrated","tutu","gangly","snide","ritalin","stoke","zips","tartar","duress","doze","dutiful","earpiece","dimness","peso","thrash","jailhouse","opacity","subatomic","imbecile","venomous","obtuse","dimple","smother","viscous","paging","quintet","mocha","clench","gummy","chivalry","dilation","disengage","suave","icky","urchin","talisman","upswing","blighted","tidbit","doodle","savanna","bunt","jubilant","zoology","debunk","jester","vanquish","estimator","baboon","letdown","rasping","hula","devalue","mauve","eject","rerun","rephrase","porcupine","reexamine","ember","rummage","woozy","cytoplasm","facsimile","tabasco","jovial","ferment","wooing","pogo","padlock","gosling","swerve","gleeful","jaunt","unadorned","bungee","undivided","armrest","marmalade","gizmo","lisp","slinky","plexiglas","sinuous","vixen","hypertext","krypton","aqueduct","kerchief","mobster","joyfully","emcee","aeration","whacking","armadillo","reentry","boozy","excavate","ripening","onshore","bobcat","unelected","yapping","pawing","poncho","siamese","albatross","antsy","chitchat","seltzer","muppet","gloating","hazelnut","pliable","onyx","lather","capricorn","uncut","aorta","nastiness","gander","eggnog","excretion","exonerate","cesspool","purveyor","mayflower","busboy","mulled","figment","girdle","lethargic","encrypt","evict","ergonomic","undying","culminate","wriggle","blemish","walrus","tidings","germinate","trowel","suds","ageless","tarnish","dejected","twerp","antler","unguarded","coleslaw","synapse","mongrel","thwarting","aground","scuttle","halogen","ovary","borax","gnarly","snub","nacho","gout","papyrus","iguana","grope","nullify","kilt","vindicate","galvanize","alabaster","panning","wasabi","rework","trombone","tinsel","treble","prancing","exes","hanky","blimp","knickers","thieving","defraud","briar","trident","upwind","slouching","koala","tamper","nuptials","engulf","garter","barman","glisten","frugality","earmark","blubber","ahoy","latrine","puma","sepia","unimpeded","drapery","vivacious","gawk","banshee","nutcase","gruffly","ribcage","rekindle","cesarean","unrivaled","jawline","vaseline","quench","tusk","snazzy","sappy","pedometer","unbounded","tapioca","bobsled","cabana","tubby","sapling","gecko","flaccid","unbuckled","lumping","humpback","haiku","jurist","lasso","urologist","sputter","tinfoil","gutless","encircle","boxcar","impish","kooky","frolic","sasquatch","geranium","flyover","schnapps","cackle","unaltered","prude","falsify","matador","octagon","unpeeled","armful","reroute","unfilled","zesty","payphone","pucker","unzip","litigate","eggshell","hunchback","duvet","powwow","spry","barstool","flail","linseed","legume","mumps","slurp","marshy","dubiously","siesta","unedited","dastardly","ogle","aflame","wrangle","osmosis","dupe","reissue","vagabond","carmaker","flogging","roping","ardently","gnat","oink","sardine","scurvy","sulk","pumice","ellipse","tiptoeing","jiffy","spiffy","spud","tassel","petunia","ashy","tamer","spilt","legwork","getup","poach","uncivil","anaconda","exfoliate","pauper","ramrod","useable","doozy","cahoots","oboe","leotard","boogeyman","yippee","bonsai","chafe","munchkin","varmint","ragweed","sulphate","earful","unfeeling","tamale","hyphen","scuff","egotism","outtakes","abacus","tarantula","smelting","elope","urethane","dayroom","igloo","gristle","caboose","opossum","barcode","amniotic","datebook","clavicle","bazooka","unturned","dweeb","scone","tiling","untying","ritzy","amicably","onlooker","legroom","chomp","spyglass","unroll","levitate","thimble","poser","badness","demystify","pummel","cabdriver","henna","gerbil","senorita","udder","zookeeper","laxative","gigolo","gating","kebab","joyride","eardrum","swaddling","zigzagged","ravage","cussed","talcum","sinless","trodden","absinthe","camisole","duller","daffodil","pectin","ream","reorder","tadpole","omnivore","disinfect","rimless","utensil","stowing","catlike","bodacious","skedaddle","nuzzle","acetone","egging","cubbyhole","lapdog","boondocks","malformed","busload","penknife","shucking","egomaniac","cobweb","anagram","smolder","unexpired","taekwondo","fritter","enrage","runaround","abridge","exhume","reattach","scabby","botch","gargle","lushly","enunciate","plod","doily","hexagon","punisher","tyke","armband","calzone","unashamed","tinderbox","rehydrate","obtrusive","bauble","sixfold","crabbing","moocher","clobber","unbaked","rehire","sudoku","moodiness","dicing","reemerge","gumball","pulverize","hatless","endnote","yodel","cymbal","bagpipe","splotchy","nanometer","mollusk","harpist","mooing","jaywalker","astound","ocelot","hubcap","frill","gonad","rubdown","tigress","denatured","pegboard","dehydrate","gizzard","waggle","kinfolk","unmixed","ensnare","buccaneer","amaretto","felttip","jujitsu","amuck","bunion","skydiver","coeditor","amperage","deface","riptide","hatbox","trekker","jaybird","swizzle","drench","jawed","ditzy","illicitly","preoccupy","vagrancy","carwash","earache","subfloor","armless","ransack","curdle","cozily","unaudited","unblock","catsup","unframed","wielder","dallying","catnap","cosponsor","boxlike","aflutter","wackiness","unviable","husked","babied","eclair","guzzler","giblet","kabob","unhinge","upchuck","coagulant","bagful","batboy","flypaper","gumdrop","disfigure","entwine","oozy","unarmored","cufflink","slobbery","reoccupy","twiddle","ungraded","viselike","carless","stegosaur","coyness","uncross","earwig","ripcord","blabber","retype","unaired","aneurism","antonym","unsnap","eggbeater","untwist","cosigner","racoon","veneering","bobtail","gyration","reanalyze","reabsorb","recharger","unpicked","unsworn","mocker","fernlike","pyromania","opulently","outmost","penpal","flyable","prorate","eatable","skittle","armhole","unvalued","haggler","vexingly","unglue","defog","ecard","dawdler","delouse","disjoin","engorge","finless","lividly","nutlike","reawake","tinwork","unvocal","zipfile","anointer","atonable","cogwheel","undusted","unflawed","unsliced","unsmooth","unthawed","copartner","hemstitch","jeeringly","joylessly","luridness","penholder","subheader","their","would","think","which","after","years","really","should","through","something","being","president","students","while","things","every","house","might","against","children","states","women","money","without","different","though","study","however","actually","research","white","called","looked","national","education","important","times","asked","wanted","united","trying","political","looking","least","having","coming","saying","talking","using","support","within","including","whether","others","community","probably","several","working","makes","happened","heard","along","himself","thanks","center","turned","america","hands","given","started","court","means","according","friends","months","minutes","teachers","former","based","studies","words","seems","comes","results","college","economic","members","looks","parents","likely","instead","policy","groups","problems","hours","began","needs","county","sometimes","military","issues","living","learning","listen","thinking","seemed","perhaps","clear","known","taken","analysis","questions","finally","reading","quite","yourself","clinton","happen","class","exactly","higher","simply","society","everybody","wants","recent","following","companies","programs","officials","campaign","services","personal","director","rights","lives","schools","games","running","article","needed","became","break","building","whatever","itself","knowledge","americans","romney","weeks","third","further","effect","trump","david","reported","whose","longer","points","somebody","worked","single","terms","works","certainly","teacher","takes","chance","value","nearly","ground","press","behavior","continue","areas","changes","attention","countries","cases","knows","comments","stood","players","medical","situation","writing","difficult","approach","george","election","create","levels","books","patients","natural","involved","decision","shows","recently","potential","financial","playing","billion","specific","beautiful","feeling","moved","posted","training","spent","michael","wrote","treatment","teaching","growth","systems","texas","shall","cultural","supposed","skills","usually","foreign","quickly","waiting","earlier","china","democrats","included","related","lower","therefore","despite","workers","provided","district","serious","walked","played","addition","resources","greater","central","miles","decided","meeting","watching","global","positive","factors","career","moving","content","written","expected","created","nobody","religious","sunday","beginning","telling","stories","families","pulled","leaders","changed","increased","clearly","computer","costs","justice","received","events","senate","committee","activity","seeing","necessary","required","added","chicago","suddenly","values","numbers","growing","movement","standing","learned","plans","atlanta","comment","november","developed","calls","james","opened","happens","married","indeed","academic","ideas","effective","politics","event","internet","except","standard","journal","store","forces","passed","majority","efforts","talked","allowed","player","english","league","robert","obviously","sounds","rules","critical","older","rates","character","products","meant","status","reality","species","helped","showed","modern","places","complete","built","reports","starting","followed","straight","loved","reasons","reached","insurance","pressure","limited","executive","compared","influence","leaving","spending","lived","weight","respect","described","agency","western","statement","asking","benefits","previous","governor","francisco","context","worse","generally","smith","watched","continued","designed","dollars","sales","standards","sports","lines","holding","secretary","attorney","closed","published","reach","turns","florida","teams","product","parts","imagine","gives","speech","europe","council","calling","professor","thousands","measures","named","voters","raised","provides","safety","officer","interview","structure","touch","evening","overall","directly","colorado","slowly","items","larger","basis","employees","models","football","denver","serve","complex","voiceover","fingers","scores","windows","tough","findings","practices","multiple","includes","taxes","biggest","challenge","leading","houston","georgia","basically","breath","manager","images","official","walking","meaning","prices","methods","policies","trees","smiled","argument","nodded","contact","highly","happening","steps","johnson","willing","features","classroom","station","putting","editor","powerful","french","speaking","sources","realize","function","identity","doubt","british","nations","spoke","finding","concerned","types","wonderful","offered","plant","wearing","southern","currently","stars","shook","authority","records","corner","appears","drugs","decisions","forms","mostly","wednesday","candidate","peter","returned","noted","christmas","presented","decades","hearing","folks","somewhere","concern","presence","religion","factor","determine","materials","appeared","planning","yards","totally","sidebar","relations","variables","climate","crisis","cells","bought","served","becomes","otherwise","homes","notes","agreement","interests","goals","richard","latest","suggests","leaves","plants","promise","claims","liked","thomas","block","audience","apartment","offers","weapons","clothes","fighting","thinks","citizens","angeles","picked","residents","actions","chris","variety","released","larry","direction","software","regarding","website","realized","officers","native","mission","mental","concerns","institute","largest","forced","finished","active","daddy","driving","details","seriously","names","animals","missing","mentioned","sites","projects","keeping","closer","concept","produced","yours","users","baseball","instance","attempt","feels","fully","setting","troops","opening","covered","mexico","customers","subjects","parties","turning","prior","beside","conflict","continues","agreed","towards","responses","condition","dropped","cities","suggested","vision","jones","facebook","progress","healthy","frank","joining","indian","millions","believed","creating","pictures","accept","hundreds","tells","requires","surprised","knowing","funds","virginia","strange","dangerous","william","caused","threat","broke","russia","chairman","conducted","steve","announced","providing","easier","somehow","mayor","observed","arrived","tests","slightly","thoughts","helping","charles","becoming","handle","grand","readers","indicated","laughed","contract","silence","division","stress","lights","sides","plays","doctors","smaller","pieces","williams","starts","elements","experts","classes","london","minister","changing","worried","writer","walls","showing","scott","separate","focused","extent","movies","views","strength","facts","mmhmm","shape","jackson","donald","seconds","defined","placed","proposed","adults","grade","possibly","japan","score","patterns","noticed","attacks","fourth","stared","contrast","losing","younger","martin","advantage","charges","streets","shared","taught","count","internal","winning","allows","partner","corporate","beneath","behaviors","scared","terrible","listening","smell","processes","prepared","options","regional","tools","thousand","authors","missed","honor","signed","lawyer","harry","anywhere","outcomes","familiar","forever","emotional","plane","kinds","greatest","carolina","soldiers","helps","carried","testing","ourselves","explained","pointed","affect","largely","stepped","driver","prove","pushed","housing","heads","applied","apply","serving","marketing","perceived","painting","relative","essential","boston","markets","artists","extremely","joined","shoes","examples","banks","stands","coverage","medicine","equipment","thick","russian","figures","canada","favor","storm","shoulders","teeth","funding","letters","expensive","northern","signs","pages","photos","victims","fellow","clinical","existing","faces","votes","wondered","aspects","feelings","recognize","entirely","begins","charlie","maintain","selling","relevant","highest","careful","eastern","inches","matters","england","typically","capacity","narrative","pounds","agencies","managed","henry","germany","tradition","emergency","prime","location","represent","doors","longterm","waited","remained","honest","operation","supported","buying","selected","tears","supra","bedroom","objects","stated","believes","bodies","massive","humans","elected","revealed","occurred","houses","michigan","attitudes","persons","guilty","creative","stores","besides","moreover","articles","discuss","respond","educators","excellent","kidding","posts","explains","hoping","unlike","bringing","moments","newspaper","france","reduced","technical","staring","pocket","tight","davis","exposure","completed","grown","manner","adding","owners","committed","opposite","talks","reader","keeps","assistant","belief","suppose","performed","discussed","birthday","remaining","meanwhile","leaned","planned","hardly","brothers","charged","forth","treated","intended","answers","analyses","singing","investors","iraqi","reporting","voted","consumer","anonymous","consumers","leads","revenue","india","golden","drinking","likes","causes","existence","thats","kennedy","stayed","merely","fields","passing","arizona","elections","bathroom","hollywood","accepted","hillary","nearby","creation","clients","choices","expressed","throat","songs","louis","fired","dozen","combined","estimated","lawyers","dealing","somewhat","classic","moves","positions","courses","seeking","sarah","framework","cards","primarily","documents","reporter","trail","dressed","laughing","beliefs","falling","saved","victim","medium","proper","acting","courts","critics","regime","woods","kevin","saddam","increases","fewer","pleasure","request","holds","gentlemen","detroit","entered","removed","sharing","whereas","surgery","glanced","degrees","bottle","musical","writers","headed","accounts","offering","buildings","advanced","obtained","downtown","paint","donaldson","argued","miller","devices","democrat","dreams","powers","studio","korea","selection","wondering","breaking","hanging","parking","sleeping","broad","brian","regard","allowing","answered","perform","excited","brings","spiritual","walks","principle","notion","literally","measured","examined","reagan","birds","agents","operating","sector","flowers","wilson","criteria","dying","films","knees","hopes","diversity","cooking","threw","opposed","phase","samples","purposes","andor","carrying","papers","sharp","offense","improved","paris","loves","variable","examine","foods","colleges","perfectly","practical","centers","jordan","accused","polls","located","formal","figured","bills","limits","external","expert","affairs","sought","billy","similarly","award","barbara","finds","touched","rooms","widely","lifted","awareness","symptoms","colors","graduate","offensive","jerry","struck","maam","ordered","agenda","shopping","susan","fairly","whenever","relation","units","partners","guest","concepts","promised","studied","secondary","collected","arrested","queen","estimates","appeal","campus","breakfast","closely","organized","narrator","roles","survive","daniel","roberts","extreme","whispered","austin","falls","links","constant","chose","strongly","suffering","seasons","nervous","defensive","cutting","childhood","drawn","tickets","rolled","follows","replied","firms","retired","extended","illinois","schedule","detective","smiling","tested","surely","protein","command","severe","kelly","establish","violent","procedure","spanish","criticism","demands","formula","filed","customer","raising","writes","dollar","formed","immediate","pants","meetings","earned","package","athletes","shots","therapy","claimed","attempts","heaven","scholars","sounded","drawing","pulling","evolution","microsoft","diverse","letting","refused","engaged","goods","recovery","warning","pushing","taylor","locked","chemical","reduction","andrew","pulls","coaches","reporters","loose","principal","academy","boyfriend","elsewhere","forgot","recorded","farmers","neighbors","hired","joseph","scored","arguments","absence","mountains","howard","fishing","regions","islamic","settings","connected","begun","facility","barack","sending","tasks","proposal","judgment","faced","hussein","males","contains","equally","laughter","videotape","networks","lessons","literary","risks","miami","functions","counter","grabbed","accurate","carter","valuable","adopted","fixed","owned","lovely","exists","orders","objective","ideal","rarely","elizabeth","opens","chopped","visitors","platform","memories","staying","enjoyed","approved","serves","settled","incident","texts","solutions","speaker","shares","voices","resulting","explore","quietly","edition","mothers","returns","linked","depends","pressed","issued","chain","secure","computers","literacy","launch","highway","virtually","assess","enormous","medicare","universal","directed","frequency","convinced","fallen","danny","females","discourse","genetic","employee","nights","trained","historic","opinions","helpful","viewed","scheduled","anderson","minds","feedback","stocks","disaster","dramatic","component","personnel","reviews","visible","deficit","involving","strategic","channel","commander","receiving","informed","waves","syria","calories","referred","telephone","wooden","nancy","glasses","stops","depending","inspired","guests","bears","destroyed","versus","addressed","defend","suffered","prince","stronger","vietnam","calif","harris","exposed","initially","roger","clark","hills","dallas","repeated","detailed","indicates","bobby","signal","hopefully","britain","bones","checked","technique","republic","roughly","hoped","burning","dependent","seats","cleveland","marry","employed","crossed","contain","files","omitted","deserve","invited","gently","rolling","jason","messages","honestly","simon","loans","cultures","socalled","vehicles","breathing","minnesota","lewis","listed","apparent","passage","survival","seattle","forgotten","baltimore","wanting","describes","driven","hunting","concrete","sawyer","replaced","compare","tries","assets","expansion","involves","reserve","allen","handed","joins","managers","smiles","properly","kansas","declined","simpson","smoking","fought","organic","finance","proved","launched","italian","discovery","plain","button","heavily","islam","confirmed","horrible","divided","resulted","laughs","sandy","bureau","worker","imagined","shrugged","patrick","maryland","storage","delivered","responded","porch","passion","achieved","normally","paused","teaspoon","slipped","nowhere","privacy","screaming","controls","coalition","sciences","warming","dancing","permanent","gathered","intense","household","springs","sensitive","heading","bruce","sighed","scenes","approval","movements","hurricane","exciting","granted","flickr","frankly","chances","lincoln","painted","emerged","precisely","stretch","veterans","cited","assumed","ratio","wrapped","extensive","closing","passes","tommy","unlikely","leather","brinkley","testimony","declared","occurs","machines","returning","egypt","sisters","amounts","indians","naturally","chocolate","denied","visited","columbia","flesh","parks","rachel","trends","paintings","judges","deals","regularly","harvard","supports","topics","jumped","economics","distinct","attended","rocks","injuries","marked","horses","spoken","sessions","distant","delivery","trading","concluded","pakistan","stephen","recommend","reducing","bother","confused","dialogue","theories","anthony","studying","muslims","blocks","reaching","hitting","genes","shake","oregon","profile","infection","combat","dozens","mainly","validity","deeper","losses","waters","rapidly","friendly","listened","fifteen","interior","recalls","fifty","reminded","roads","picking","publicly","absolute","forgive","throwing","sweat","analysts","territory","saudi","presents","admitted","burned","hospitals","shouted","moore","actors","angel","generated","rating","moderate","gifted","dominant","exception","saving","tracks","caller","stability","peers","ratings","assembly","nursing","forehead","deaths","shadows","giants","assigned","pointing","empire","johnny","eddie","offices","clouds","chronicle","memorial","thrown","walter","formation","amazon","mommy","hated","roots","founded","dedicated","mistakes","steady","comedy","counsel","emerging","capitol","contained","stations","instant","reflected","associate","cameras","clothing","traveling","stream","confident","branch","periods","estimate","walker","injured","weekly","threats","grades","speaks","inaudible","terry","hiding","newly","ruling","bonds","orleans","diego","districts","drivers","diane","improving","fantastic","wildlife","metro","humanity","protected","routine","shower","oakland","everyday","covering","linda","abandoned","thread","payments","poetry","churches","summary","causing","breathe","physics","gained","vacation","seeds","creates","mount","annie","australia","compete","pleased","videos","covers","capture","worldwide","producer","tables","origin","oklahoma","awards","profits","ignored","furniture","bound","lifetime","ethical","athletic","generate","climbed","sighs","operate","wisconsin","searching","edward","inflation","alice","barry","bucks","acres","supplies","sanctions","variance","attacked","attached","prominent","mortgage","doctrine","reaches","manhattan","italy","cheek","pollution","centuries","jennifer","copyright","broader","breaks","shortly","sections","protest","decent","kerry","entrance","locations","producing","marks","contrary","gains","earnings","commonly","opponents","scenario","predicted","emissions","loading","wings","goodbye","chairs","reply","superior","baker","founder","packed","ministry","remote","alleged","alliance","theatre","baghdad","softly","allies","phones","visiting","boxes","neighbor","telescope","spots","societies","focusing","collapse","adequate","attempted","helen","temple","steal","diagnosis","announcer","doorway","refer","rejected","accuracy","voter","roman","desperate","emotions","consensus","convicted","singer","disney","guidance","argues","contracts","expanded","warned","recession","hallway","loving","hearts","themes","aircraft","factory","karen","lately","stolen","thompson","resident","laura","engineers","derived","kicked","stages","vegas","recording","taiwan","races","grounds","captured","drives","intent","insisted","trials","proven","waved","commerce","beans","alabama","landing","belong","creature","employers","expecting","targets","divine","happiness","muscles","wished","errors","romantic","missouri","resort","monthly","preferred","format","daughters","variation","conflicts","extension","greek","posting","greatly","wallace","scary","managing","scales","analyzed","pregnancy","ships","peoples","bloody","aimed","wealthy","shore","salary","thereby","pursue","unions","mechanism","refers","kissed","integrity","lists","partly","checking","contest","morgan","designer","youre","lawmakers","preparing","legacy","witnesses","trips","beating","colonel","cheeks","stranger","featured","stare","warren","grateful","temporary","enemies","pretend","civilian","chamber","evident","battery","referring","reflects","assuming","entering","handful","gordon","couples","versions","stewart","drops","scientist","consent","recalled","matthew","painful","cents","moscow","overcome","flour","kinda","defeat","entitled","disorders","courage","priest","encounter","hardware","emily","editorial","advocates","promoting","guarantee","sorts","succeed","tragedy","intensity","isolated","fears","irish","string","database","behalf","stretched","drinks","visits","longtime","tension","sweetie","celebrate","picks","knocked","promises","spain","gifts","arthur","blogs","apologize","korean","acquired","expenses","homeless","reveals","robinson","directors","closet","charlotte","scandal","handsome","chart","belly","lifestyle","kuwait","hunter","cares","gates","viewers","insight","reliable","outta","checks","construct","tomatoes","steven","dishes","lands","liberals","tennessee","guards","purchased","strip","indiana","hispanic","adams","providers","chuck","designs","leaning","shocked","radiation","assessed","perry","volunteer","circuit","summit","airlines","strikes","ownership","register","murdered","potatoes","qualified","watches","ranging","briefly","provision","elderly","counties","biden","gathering","meals","ruled","surveys","swimming","baseline","islands","russell","barriers","dynamics","hampshire","norms","trillion","racism","filling","adoption","reforms","devoted","maria","landed","cleaning","competing","graham","coaching","dennis","walters","buchanan","nurses","survived","shelter","sergeant","rings","employer","nelson","arguing","nixon","artistic","theology","dates","alexander","choosing","abilities","existed","perot","striking","ballot","corps","targeted","sodium","expertise","relatives","wayne","sooner","olympics","seemingly","senators","preserve","princess","rational","stares","snapped","treaty","grandma","towns","followup","parallel","grave","styles","turner","theyre","mitchell","desired","introduce","counts","rhetoric","folded","sacrifice","verbal","commit","margaret","lowest","handling","farther","chuckles","cohen","expense","youtube","brazil","scoring","cleared","jacob","engaging","makeup","sheets","secrets","edwards","bastard","lightly","clubs","confusion","examining","equality","horizon","producers","titles","fathers","powell","correctly","tendency","claiming","stake","michelle","appointed","screening","parental","stones","reverse","playoffs","jonathan","franchise","spaces","raises","traveled","jesse","louisiana","adventure","cokie","classical","wounded","requiring","nonprofit","parker","contexts","copies","stanford","smelled","purple","brooklyn","currency","boards","cambridge","educated","ceremony","reads","precious","aesthetic","modest","campaigns","activists","kentucky","suspected","parked","actively","basement","franklin","branches","wright","julie","attorneys","impressed","ronald","physician","varied","expanding","forty","separated","gardens","carries","edges","debates","lawrence","engineer","unity","wherever","cardinals","satellite","ranks","southwest","refugees","sunlight","wells","playoff","shifted","regarded","creatures","twisted","learners","receiver","touchdown","exclusive","languages","overseas","arabia","stopping","aaron","signals","occasion","reviewed","taliban","marshall","cookies","chips","breasts","intention","broadway","sizes","billions","satisfied","cabinet","adviser","borders","hiring","appeals","collins","jerusalem","default","relate","server","invisible","broncos","immigrant","alongside","douglas","charity","equation","blues","reactions","favorites","linear","dropping","inclusion","bishop","revenues","shade","audio","logical","oldest","poured","demanded","winds","attending","worlds","berkeley","prisoners","healing","wages","theres","counting","taxpayers","shops","complaint","dispute","invasion","resolve","rated","balanced","transport","trucks","libraries","prospect","craig","modified","reasoning","yankees","overnight","feeding","consists","suits","flood","spectrum","northwest","adopt","download","rangers","justify","scream","martha","migration","admission","installed","blond","requests","instances","struggled","focuses","gibson","promising","grabs","displayed","campbell","autonomy","deadly","claire","produces","plates","dimension","crowded","loaded","trace","explicit","morris","tribal","modeling","tossed","cooper","advocate","oclock","portland","evaluated","touching","circles","planes","arrival","nutrition","bradley","remembers","wheels","habits","decreased","motivated","heels","impacts","magnitude","backs","pockets","forcing","maggie","equity","comparing","freshman","suburban","closest","lined","applying","subtle","jefferson","wider","trapped","halfway","nebraska","celebrity","rushed","antonio","pleasant","alaska","featuring","affects","cooked","trauma","servings","proposals","noting","enjoying","seventh","demanding","lobby","justin","array","signing","arkansas","murphy","grinned","likewise","angels","oscar","funded","defending","accessed","julia","portrait","layers","custody","buyers","waist","jackie","lowered","realistic","slavery","rushing","updated","ignorant","passenger","debut","fires","remarks","faded","jennings","makers","observers","katie","forests","duties","tender","identical","camps","talented","hurts","imposed","privilege","printed","corridor","francis","yelled","novels","rivers","hearings","overhead","farms","lover","pitcher","crossing","tends","treasury","goodness","complain","dominated","recipes","meets","disappear","arranged","laden","updates","iranian","electoral","habitat","teens","enhanced","worthy","sanders","instantly","readily","conscious","sliced","peaceful","rolls","rocky","vegetable","protests","shaped","maine","jamie","chill","newshour","courtesy","russians","sidewalk","climbing","dressing","grants","someday","solely","opponent","damaged","strain","nathan","crops","evolved","particles","jokes","websites","libya","violation","profound","cheaper","retrieved","medicaid","tracking","terrific","missile","floating","trunk","virtue","keith","deserves","magazines","crown","removal","donna","shapes","washed","allegedly","nonsense","promotion","worship","secular","heroes","analyze","reminds","stirring","editors","symbolic","boats","wishes","attracted","musicians","spotted","qualities","airline","planets","minimal","paragraph","southeast","handled","paula","fails","delicious","shakes","masters","signature","publisher","charter","audiences","warner","brooks","applies","insights","seniors","bleeding","bottles","ignorance","madison","jeffrey","safer","twins","headlines","generous","fulltime","frowned","annually","toxic","measuring","bands","slaves","socially","wiped","restore","afterward","sustained","aboard","dough","blessed","believing","careers","cheney","homeland","molly","civilians","grows","coastal","suspended","brains","gorbachev","necessity","counted","pressures","scattered","efficacy","victor","expects","iraqis","assessing","traits","ellen","dragged","patience","disabled","occupied","tucked","mason","sometime","rebecca","partial","addresses","legally","hawaii","scent","defendant","survivors","sally","followers","toronto","civic","jessica","transit","automatic","credits","implies","engines","informal","tigers","treating","tended","ireland","acute","freak","sponsored","graph","stanley","enters","admits","inherent","smells","strict","fruits","defining","exploring","composed","nightmare","realm","defeated","placement","nicole","ethnicity","viewing","sampling","channels","blank","freeze","prospects","lebanon","submitted","betty","graphic","speakers","berlin","booth","eleven","monica","firmly","delicate","drain","isolation","entity","quarters","emphasize","cared","origins","flexible","stays","spite","philip","residence","sticks","acted","silently","adapted","graduated","vaccine","slices","quest","corners","gloves","protocol","hotels","adjusted","quoted","spirits","seated","dismissed","steam","innings","tourists","hamilton","episodes","jenny","backup","winners","trailer","sharon","dealt","muttered","workplace","shifts","economies","maker","grams","troubled","rubbed","momentum","eighth","crosstalk","putin","sandwich","diagnosed","poorly","codes","consisted","brands","react","solving","ranged","shouting","rounds","stuffed","courtroom","pursuit","excluded","throws","achieving","petraeus","historian","seeks","bases","attacking","startled","pressing","advocacy","sheep","journals","lightning","recover","sentences","ralph","inning","critique","emails","deadline","strangers","displays","driveway","lakes","morality","rockets","blowing","insist","catching","attribute","yelling","beard","farmer","trusted","phillips","portfolio","arnold","marie","hunters","wives","beloved","answering","flies","brandon","invested","cracked","shorter","halloween","intimate","teenage","counselor","redskins","screamed","twentieth","agrees","beaten","vitamin","namely","damned","mature","trails","heights","advances","blocked","belongs","jumping","gentleman","accepting","souls","enrolled","conclude","meters","onions","requested","projected","incidence","lighting","shifting","provider","stiff","contents","janet","escaped","suite","teaches","tours","median","perceive","diana","openly","exhausted","unclear","permitted","province","patent","meantime","stored","greens","tanks","mueller","anxious","specified","columnist","rises","revealing","designers","mister","exercises","interact","temporal","struggles","northeast","bored","swallowed","benjamin","planted","streak","assured","pitching","calendar","safely","investing","pasta","squad","homework","interface","urged","quotes","grasp","sucks","partially","ignoring","statute","saints","pills","sells","detected","flights","resolved","towel","promoted","wireless","browser","syrian","tyler","stealing","panels","catherine","criterion","mentally","founding","accent","respected","bernie","steep","stance","columbus","missiles","jewelry","draws","suspects","hunger","workout","corrupt","warmth","incidents","placing","eyebrows","teammates","prompted","screams","metaphor","starter","backward","murray","feared","hannah","casey","allstar","mobility","occasions","wendy","inventory","threshold","warrant","deciding","guided","galaxies","financing","writings","shelf","fighters","excessive","tropical","evans","recovered","curiosity","qualify","montana","traded","mining","obesity","screwed","strengths","nevada","belonged","hears","footage","sheer","meanings","blown","bearing","kenny","forrest","proceed","activist","lucas","symbols","carlos","suitable","possess","reserves","highlight","workshop","collar","albert","graduates","chemistry","eagles","infected","reception","vinegar","hansen","vincent","avoided","shuttle","lacking","sectors","lineup","greece","stepping","amanda","shiny","matches","awarded","embassy","incentive","colin","bothered","jurors","voluntary","decides","gasoline","explored","masses","oliver","retain","missions","squeezed","hostile","paradigm","spends","developer","teenagers","spreading","departure","happily","haiti","donations","tales","invented","orchestra","aliens","benghazi","palin","flows","magnetic","holmes","detection","organize","ukraine","removing","barrier","nothin","loyalty","knight","fights","shining","villages","harvey","economist","converted","sticking","relieved","poems","hurting","affecting","hurried","lighter","studios","malcolm","locker","revenge","lungs","tablet","testament","notably","wears","flames","publish","justified","pillow","divorced","relating","export","worries","grandpa","marcus","sharply","hesitated","leonard","entities","polling","desktop","lifting","backyard","inability","norman","authentic","finishing","interpret","companion","depressed","rogers","labeled","contacts","altered","distress","centre","essays","deemed","vessels","pickup","lions","prints","blogging","bosnia","laser","bride","railroad","mercury","relaxed","graphics","testified","dealer","pearl","fleet","regimes","holidays","floors","midst","drawer","banned","addiction","countless","fighter","sends","revised","embedded","liver","vanished","teenager","marines","reserved","rumors","yeltsin","cuban","occurring","zones","transform","stunning","battles","testify","paths","harold","freely","anytime","matching","judgments","collapsed","tolerance","latino","creator","weakness","earning","costly","insists","treasure","marty","carrier","tampa","varieties","partisan","modes","cowboys","boulder","delayed","wallet","pursuing","intensive","pathetic","avoiding","kings","failures","skillet","edited","kicking","regards","reminder","dealers","considers","magical","butler","prayers","starters","polish","proteins","backing","priests","shipping","utterly","rebounds","insects","resume","spinning","glances","faithful","crushed","terrain","quinn","bennett","compound","colorful","digging","accounted","sullivan","laying","imagery","youngest","molecules","skinny","brutal","terrified","resting","favorable","shorts","egyptian","pairs","nails","pilots","posed","intend","desires","tribes","emergence","exports","stating","charming","turkish","wonders","puerto","apples","citing","mounted","applause","governing","slope","advisory","dylan","rebels","fisher","witnessed","forming","socks","strictly","carved","senses","slammed","brushed","initiated","printing","opposing","succeeded","manning","scholar","averaged","tavis","favored","doubled","sliding","tenure","surgeon","mighty","container","lesser","palms","bulls","relevance","destiny","knocking","operated","assure","samsung","dakota","ballots","samuel","angela","loudly","tapes","polite","catches","discount","louder","reverend","novak","bullying","stressed","skilled","colleague","tapped","switched","ripped","rides","sprinkle","rejection","glenn","cleaned","teddy","visitor","chiefs","foolish","scratch","permits","bizarre","tourism","miserable","dreamed","architect","occupy","leans","receives","palestine","blamed","gaining","hometown","formerly","symphony","vanilla","stern","routinely","stark","tensions","derek","youths","bullets","travelers","armstrong","watson","domains","crowds","rodriguez","andrea","jeremy","sympathy","practiced","religions","scrutiny","labels","terribly","cohort","earliest","hosts","ancestors","passive","murders","chasing","batman","prisoner","dusty","medieval","annoying","verse","garcia","bryant","spencer","searched","farming","gasps","cheating","trains","buttons","strongest","observer","matched","weekends","loses","organisms","yields","subsidies","peterson","orlando","abundance","nearest","equipped","suburbs","bridges","wounds","shocking","homer","lasted","wasted","kathy","appealing","patriots","airplane","costume","parenting","richmond","tucson","tumor","surgical","observing","desirable","irony","lawsuits","legendary","theaters","divisions","blessing","skeptical","cheers","warriors","tires","screens","caribbean","adverse","tribune","operator","probe","sentenced","hates","aurora","statue","valued","inmates","mandatory","honored","replacing","imaging","prophet","germans","kissing","jupiter","flashed","enabled","caroline","rewards","realizing","oversight","champagne","dense","workforce","sophomore","rested","straw","museums","donors","continent","optimal","clearing","restored","certified","ounces","vermont","notions","sweeping","downs","hudson","recycling","titled","binding","minimize","sweater","cookie","murmured","solved","heather","confusing","retailers","abraham","somethin","sentiment","ranking","drifted","doubts","clarity","reduces","premise","dated","hierarchy","harrison","histories","cycles","keyboard","operates","shelves","hangs","stevens","casting","tricks","lloyd","scenarios","carrie","seized","severely","pushes","charm","propose","realities","drawings","taxpayer","washing","prevented","convert","cries","speeches","chains","limiting","bailey","guides","hightech","investor","popped","commented","sixteen","randomly","salaries","archives","closes","hiking","milwaukee","violated","blogger","fried","louise","lasting","routes","trout","thrust","analyzing","framed","supper","elevated","freshly","barnes","arriving","limbs","compact","aloud","rotation","lovers","thesis","sequences","triple","quantity","mitch","travis","colony","princeton","bikes","indirect","towers","maintains","melissa","selfish","paradise","shoved","obstacles","castro","crude","tucker","spine","peered","severity","integral","victories","packages","processor","slowed","appearing","surfaces","raymond","ashley","judged","shields","exclusion","threaten","enables","judging","delight","furious","starr","christie","praying","suspicion","frames","releases","boundary","hardest","europeans","risky","dodgers","therapist","publicity","aides","confront","damages","charging","lakers","diameter","poster","targeting","pipeline","painter","notre","rental","static","scripture","dorothy","hatch","regulate","blonde","hughes","amazed","pounding","saturated","speeds","grunts","resigned","shout","gazed","lauren","extract","majors","optional","greta","dangers","glowing","longest","scholarly","workshops","shirts","consumed","storms","hopeful","blows","flowing","declare","dessert","kitty","poland","intel","impaired","normative","declining","tastes","texture","batteries","contacted","victoria","martinez","raiders","shawn","fortunate","drought","amongst","invention","dresses","cameron","deficits","naval","overview","embraced","exhibited","idiots","nitrogen","weigh","credible","clusters","ballet","privately","ellis","stumbled","mentor","delegates","imply","operators","mills","goldman","sensation","utilities","chile","rooted","ethan","disputes","footsteps","fuels","mickey","slides","forecast","theirs","blair","cooling","natalie","arlington","broth","scouts","falcons","headline","notebook","customs","locate","travels","arrives","heated","ensuring","riley","beats","columns","implied","swinging","kenneth","canon","optical","sucked","discharge","sophie","alternate","roses","terminal","accidents","purchases","precision","tribute","cowboy","stems","designing","chapters","quarterly","persian","sealed","recipient","motel","surrender","coupled","tokyo","renewed","centered","dumped","fourteen","troubles","comply","spotlight","defines","chapel","indicator","artifacts","urgent","worrying","dreaming","marginal","compost","viewer","gregory","sweep","servants","harper","judiciary","predictor","bloggers","steadily","chorus","hosted","visually","flipped","harmony","thrilled","siblings","kisses","onethird","fictional","inspector","tense","buses","talkin","albeit","overtime","relied","extending","curtains","midwest","computing","whats","griffin","underwear","moses","finest","charts","editing","proves","idaho","gravel","robbery","backwards","rockies","facial","intake","bloom","depicted","heating","basin","cottage","cousins","grounded","fluency","crews","streams","chick","shades","donated","refuge","flooding","suited","comics","motive","steering","integrate","indonesia","possessed","mushrooms","password","frontier","penalties","needle","nutrients","drilling","pricing","explosive","conceived","analogy","candles","tuned","surveyed","vendors","haven","pelosi","nicely","klein","relates","compounds","carriers","outlined","admire","listing","whispers","profiles","pleaded","interval","competent","finely","motives","intrinsic","suitcase","riders","starring","strains","composite","passages","wasting","broadly","hazardous","readings","breathed","phases","utilized","justices","immunity","factories","subscribe","thief","arguably","coded","stuart","fisheries","slapped","nashville","minced","dominate","crashed","venus","rendered","creepy","finals","convey","lacks","brady","sundays","mixing","renewable","nigeria","platforms","obsessed","nexus","statewide","implicit","sixty","carson","budgets","kinsley","aftermath","breeding","liane","recruited","peppers","ringing","planting","thankful","elites","strips","blocking","smoked","refusing","parttime","portable","zealand","cheer","maternal","serial","blake","selecting","shells","fellas","trevor","rationale","thighs","elders","porter","segments","coding","pursued","ideals","thirteen","atomic","newman","wildly","specialty","warehouse","ellie","genuinely","sleeve","ranges","waitress","melted","elvis","cindy","omaha","lifts","comet","consume","bryan","rivals","leverage","generic","someplace","deserved","wolves","freezing","formally","waits","hostages","risen","selective","wandered","bells","proceeds","canceled","governors","shortage","denying","retained","danced","spill","slower","volumes","mario","morally","wines","ensemble","newest","stakes","simmer","trans","obtaining","astros","bloomberg","byebye","gloria","translate","sweden","fitting","clayton","absorbed","slipping","treats","strings","secondly","greeted","argentina","sensed","certainty","tracy","listeners","champions","pitchers","examines","shotgun","borrowed","illegally","premiere","motors","trainer","holder","curtis","entries","portrayed","outlets","memorable","pitched","boulevard","ironic","peaks","poles","fists","zimmerman","disposal","processed","reviewing","portions","lacked","breakdown","defended","imports","musician","flags","logan","stephanie","surviving","handy","marriages","extends","polished","thrones","peeled","decorated","carroll","intervals","concludes","flawed","allied","loads","survivor","excerpt","unified","lending","bowed","jumps","appendix","communism","cellular","console","connie","patricia","overly","nodding","tubes","comin","enacted","offset","talents","taller","chambers","greed","admiral","regulated","rosie","stats","burke","exploded","drafted","yielded","landmark","albums","christine","linking","mistaken","outright","kindle","founders","dominance","stossel","preserved","offended","swings","packing","wicked","waiter","megan","affection","leslie","glancing","sensors","clues","courtyard","spelling","primitive","sporting","gettin","happier","shark","flavors","favors","licensed","secured","flashing","deborah","sunshine","hugged","smarter","darker","gestured","neurons","outdoors","trait","offerings","guardian","detention","exceed","elect","grunting","plains","notices","patted","sideways","browns","interim","ministers","innocence","crosses","objection","mentality","palmer","kicks","undermine","annoyed","finances","newton","carlson","ricky","fairness","shattered","optimism","causal","monsters","exchanges","thorough","genome","respects","needing","cartoon","manages","rubbing","seasonal","kenya","import","topped","warnings","rented","specimens","preschool","sandra","genesis","wrestling","imported","launching","cooler","withdraw","doctoral","hopkins","corpse","curry","evenly","shooter","singapore","ratios","begging","chickens","groans","systemic","basil","feathers","recruit","posters","damaging","serum","glorious","subjected","husbands","gonzalez","crust","lookin","panthers","offenders","forbes","jerked","diplomacy","stripped","affective","feminine","gestures","curricula","descent","hardy","preheat","hosting","carrots","echoed","refuses","messed","grilled","sydney","cheat","paperwork","robots","alfred","laurie","ducks","relying","relies","mouths","censored","costa","brett","ravens","ranger","breed","phrases","shouts","queens","matthews","stimuli","preceding","candle","supporter","clinics","bowls","fertility","combining","deployed","dragging","tilted","superman","coleman","blaming","whisk","enron","marvel","toyota","delighted","swiss","releasing","cracks","folder","discusses","margins","teaspoons","viruses","fixing","searches","isaac","cardinal","rusty","wishing","squash","persuade","cautious","elbows","outline","sensible","steelers","walmart","runners","educator","chloe","realizes","mustard","prayed","endorsed","praised","supplied","pretended","interrupt","cooperate","joking","joshua","sponsors","proving","surplus","spark","freaking","animated","circus","seventeen","stresses","nerves","fastest","boiling","rounded","cheering","smallest","emerges","busted","wandering","auburn","gabriel","excuses","computed","repeating","closure","holdings","easter","hispanics","floated","roasted","traces","mapping","reinforce","meredith","dietary","lanes","confined","fragments","julian","reliance","lengthy","streaming","varies","wyoming","nicholas","lectures","parkway","meter","enabling","olivia","calculate","crossfire","frankie","fountain","corrected","compiled","prejudice","schemes","demons","deviation","felony","newer","hercules","clara","secretly","violet","thereof","criticize","peninsula","enjoys","tricky","atoms","saturn","piled","dont","walsh","residual","commands","wires","powered","carla","conan","mines","delivers","packs","mattress","mastery","pupils","commodity","nervously","betrayed","spilled","timely","precedent","limbaugh","oddly","refusal","outreach","homemade","repeal","delays","nintendo","sacks","prevalent","poses","delaware","liberties","myers","statutes","premier","grains","biased","livestock","particle","prairie","nobel","elaine","brenda","hawks","portraits","bushes","christina","scotland","flaws","contend","massage","hormone","raced","stamps","vaguely","boeing","stretches","cycling","necklace","bankers","comprised","chili","dancer","meyer","woody","stacked","appetite","singles","revision","luckily","rigorous","markers","visions","revival","learner","tablets","figuring","rainbow","masks","cardboard","slick","fishery","rituals","endure","shepherd","broker","baseman","debbie","promotes","alltime","valentine","gerald","shoots","spiral","testers","literal","healthier","opener","tissues","locks","offseason","throne","lifelong","niche","joyce","thermal","evolving","stirred","condemned","feminism","depths","offshore","resign","puzzled","starving","advise","grammar","basics","handles","successes","surprises","donation","distances","curls","marco","backpack","communal","confess","stained","probable","concerts","balloon","assert","develops","monitors","denise","elliott","colonies","handing","mentions","pools","grabbing","strokes","darwin","saucepan","clarence","tasted","arrests","briefing","flooded","differed","textbooks","debts","plots","whistle","sherman","settling","obsession","lottery","packers","manifest","preseason","maximize","truths","interfere","forbidden","balancing","ontario","saves","tolerate","violate","allison","punished","blankets","chuckled","synthetic","marietta","priced","pavement","turtles","choir","timeline","pierce","angles","cloves","sonny","disclose","switching","doomed","servers","posture","triggered","glared","punish","lester","battered","carpenter","premiums","exhibits","chrysler","comeback","turnout","audrey","crawford","trades","sensor","rocking","reversed","crafts","remedy","neglected","saddle","scarf","troubling","headache","twoyear","altar","dancers","blades","sprint","probation","graves","vicious","deleted","clutching","marital","circular","descended","gasped","consult","lengths","haunted","contempt","calvin","henderson","compelled","memoir","hedge","acids","strangely","uniforms","pipes","netanyahu","planetary","fills","barrels","resistant","imaginary","truman","sammy","capita","showbiz","vaccines","moonlight","mattered","forums","saturdays","subscale","andrews","intimacy","freed","crises","poetic","kindness","gripped","quayle","easiest","prisons","averaging","dolphins","nicky","mornings","parameter","remark","weeds","carriage","calmly","textual","flung","helpless","enhancing","slips","serbs","athens","robertson","downward","peggy","outlet","ambiguous","caption","labour","suppliers","savannah","patty","accord","savage","flushed","colts","licenses","romans","guiding","thailand","coats","patches","preview","rider","machinery","camping","sticky","threads","hayes","bacterial","offspring","tweets","coins","sweating","fishermen","theorists","miniature","schooling","clicking","snakes","galleries","reign","tones","ferguson","cherokee","wholly","nowadays","predators","librarian","mistress","whipped","warmer","losers","directing","myths","artwork","shipped","teachings","batting","prevents","winston","airports","clenched","ruins","spinach","realism","fools","modernity","exclaimed","foremost","nasdaq","pitches","buddies","crawled","enjoyment","piles","replies","observes","swollen","dripping","dental","carolyn","wreck","sinking","santorum","coffin","decreases","patterson","bonnie","katherine","gardening","render","shootings","summers","pathways","campuses","adrian","successor","tearing","muddy","siegel","jenkins","vibrant","explorer","whitney","chooses","chefs","arises","exploit","rankings","vince","teammate","marsh","draped","feasible","scanned","sanchez","breach","lethal","diamonds","casually","benny","gauge","geraldo","narrowed","samantha","nationals","poets","statutory","startup","uncovered","lindsay","perched","wagner","lateral","shrink","poised","programme","lousy","fouryear","gallon","lenses","batter","electron","marker","frederick","ambition","disasters","imagining","cursed","keywords","crashing","rehearsal","radically","singers","cleaner","tackles","fridge","mentoring","deserted","monroe","fiveyear","woodruff","imposing","gases","patrons","curved","mainland","flush","traumatic","halls","morrison","marilyn","traced","licensing","heavier","killers","utilize","oneself","mineral","marched","subscales","defenses","scratched","ankles","curves","froze","readiness","transfers","dateline","leisure","genocide","catcher","rosemary","smoothly","misses","sleeves","proudly","explores","thrill","situated","gangs","seller","panting","momma","robbed","modem","responds","eleanor","mound","notorious","arrogant","lively","defender","bounced","willis","punched","darkened","borrowing","gardner","cornell","schedules","clicked","oceans","layout","trousers","overlap","milky","michel","sincere","shelters","veins","bites","covenant","fueled","anova","minus","perimeter","lowering","freeman","slightest","hitter","remainder","stimulate","becky","perfume","mindset","norway","filters","eased","rests","drifting","ambiguity","swedish","joints","strive","virtues","sudan","manners","displaced","pervasive","triangle","seals","vanessa","marcia","elliot","filthy","heroic","wyatt","exchanged","lipstick","slowing","motions","simpler","aligned","holland","gilbert","passport","tightened","lenders","denies","evidently","repairs","kelley","florence","freedoms","marvin","paste","climbs","phoebe","shoppers","footnote","colombia","mounting","lieberman","michele","costumes","roommate","tactic","asteroid","anonymity","mortgages","exterior","specify","activism","netflix","skywalker","pumps","africans","tracked","scanning","plague","andre","messenger","geneva","hostility","finale","defenders","knicks","shannon","mortal","floyd","folding","noticing","eyebrow","dangling","edgar","restrict","whilst","randall","mutually","rebellion","prose","nascar","mosque","rumsfeld","lydia","govern","vernon","policeman","marching","boasts","kosovo","verge","awaiting","sensory","claude","soaked","continuum","handson","agnes","baylor","wrists","venezuela","johns","doses","worthless","newsweek","stressful","sterling","begged","databases","peering","reactor","methodist","seafood","decisive","equations","endured","sworn","prompt","gallons","insect","wander","alignment","clergy","ramsey","medicines","amended","gradual","cleanup","messy","mentors","shutdown","whereby","receivers","neural","montreal","victorian","evelyn","crouched","phillip","pinch","thinly","formats","auditory","stabbed","primaries","sequel","sunni","eternity","bodily","twisting","bankrupt","norfolk","grated","deposits","simmons","quoting","settlers","beams","diving","acquiring","bully","urgency","hottest","plasma","weary","automated","remarked","chunks","binary","shane","patio","pledged","killings","filming","tugged","flynn","embodied","hiphop","bulletin","illnesses","notified","ports","melting","mcconnell","cease","differing","getty","burton","monitored","archive","pinned","trustees","bailout","planners","feeds","initiate","textbook","tangible","staffers","sailing","nasal","pathway","persuaded","apollo","linux","brightly","diced","greeting","exceeded","sausage","sheila","scrambled","jackets","shiite","sucking","beers","drowned","predicts","staircase","disclosed","sugars","propped","knives","rightly","fella","friedman","iconic","retiring","foliage","minerals","paramount","consuming","sings","disgust","pains","handbook","politely","cochran","accusing","cigar","evenings","melody","yanked","attic","rescued","ventures","modeled","depot","combines","protects","patents","hubble","lettuce","diesel","sparked","avoidance","robbie","jared","believer","skiers","betsy","animation","connor","wordpress","salesman","apparatus","provinces","dared","paranoid","heavens","sellers","frances","squinted","canned","mysteries","anyways","endeavor","forensic","mutant","honda","dwight","consist","genetics","yorker","pumping","blinking","enjoyable","prostate","pauses","generates","miguel","smashed","stein","bubbles","judgement","performs","earnest","disciples","scars","doubles","clips","winding","renewal","explode","crawling","cheryl","governed","bowling","juliet","blended","underway","cooks","greene","decay","warns","righteous","offenses","linen","briefcase","sights","promptly","amusement","sabrina","claws","needles","metals","activated","commons","greedy","postal","brighter","hampton","threatens","nursery","latinos","proceeded","bothering","pragmatic","butterfly","chess","viewpoint","flashes","comedian","fibers","freezer","reuters","bulbs","hobby","chelsea","fries","weaker","attendant","uncommon","stall","sleek","ideally","impress","boomers","palette","stahl","clarke","boarding","freeway","whales","aristotle","postwar","clutched","strained","cosby","littleton","slopes","prototype","vitamins","feminists","coached","gamble","bronx","tweeted","communion","finishes","massacre","jerome","cardiac","plaintiff","showcase","richards","fracture","eventual","fitted","tumors","rewarding","chased","crooked","patriot","mandela","isaiah","wrinkled","softened","unusually","violating","armies","fuller","touring","pastel","tangled","shaken","shirley","intervene","realtime","railing","generals","prefers","declines","trademark","butcher","bosses","slumped","mandated","reggie","swamp","daniels","thanked","reminding","belle","slams","troop","outsiders","dread","antiques","kimberly","schorr","benefited","goddess","taxation","cereal","snorted","cheerful","vastly","metaphors","rodney","shredded","differs","shrugs","pierre","relay","moist","printer","sting","longing","grandson","mammals","lindsey","solomon","mercedes","owens","richer","turnover","sharks","bastards","greet","staged","savvy","rubio","definite","mustache","remotely","composer","scarce","barney","tshirts","betting","steer","jonah","harlem","decatur","traders","credited","strands","artillery","collector","cancers","charities","resembles","hernandez","verizon","spice","sipped","strode","prestige","trailing","marion","stray","bouncing","fearful","specifics","sailor","resisted","clung","creators","hunched","snatched","fines","flown","echoes","wiping","soils","diplomats","freddie","headnote","paired","rewarded","jacobs","openness","homers","equals","listens","persist","confessed","rifles","lowfat","numerical","skirts","devotion","swore","exits","lakewood","brushing","tract","freud","goose","preaching","directory","pastoral","accompany","felix","hazards","wasnt","singular","vancouver","superb","lamps","boris","broccoli","habitats","chargers","proposing","groaned","earrings","declaring","tactical","monkeys","vienna","cheated","manny","americas","hostess","circled","splash","norton","swiftly","herbert","isabel","undergo","piper","impatient","sparks","tenants","improves","discrete","wired","worms","frasier","muscular","sidney","agreeing","messing","storyline","exposing","deepest","graders","performer","preorder","bullpen","startling","pillows","barking","alumni","bending","villain","hints","cites","stupidity","deputies","dances","venues","valerie","ambitions","battling","grapes","chicks","luggage","marrying","employing","diets","sleepy","veronica","granite","beatles","parted","riots","islamist","schwartz","groceries","pursuant","judith","recruits","dolls","cakes","cracking","concealed","shapiro","harmless","tornado","denmark","poked","autopsy","suffers","arthritis","outbreaks","alicia","leaked","protocols","backlash","quicker","freelance","favourite","villagers","referral","taped","clearer","framing","curly","rains","brooke","sebastian","medals","grease","extracted","ropes","garth","lingering","thieves","downhill","dawson","signaling","groaning","recycled","dixon","blink","tossing","roswell","scarcely","protested","restraint","garrett","iranians","verses","herman","kindly","tenth","mumbled","finite","presently","toddler","drake","popping","mediation","dudes","paints","derive","rendering","salient","troll","jenna","thinkers","destined","sweaty","booked","logging","restless","buster","gateway","spoiled","stink","whining","paradox","exposures","debated","dissolve","huddled","archer","accepts","webster","collision","skating","famously","cocked","enforced","natives","drums","crashes","spicy","backdrop","hissed","leaks","ramirez","spouses","bumps","albany","stalin","schmidt","dinners","dissent","pamela","classics","weakened","wetlands","seize","pedagogy","champ","commanded","highways","generator","denny","shivering","globally","thyme","alison","premises","civilized","cockpit","diffusion","perez","presses","daring","pastry","growers","hisher","anita","shrinking","carnegie","trope","holders","goldberg","cavuto","cables","prolife","crater","painters","departed","outraged","seating","youve","pointless","amusing","aiming","genres","confirms","mandates","podcast","folds","bosnian","fantasies","jammed","renowned","metric","snaps","ethic","shivered","proxy","appealed","leftist","sprawling","drones","squares","brokers","milton","chavez","freddy","landlord","blessings","trent","deceased","sincerely","attain","excluding","embargo","wildcats","marina","posttest","obese","nodes","nichols","plunged","poorer","buffy","educating","employs","tryin","gasping","ceramic","depended","coughing","retrieve","overhaul","packaging","wesley","watts","owning","spectacle","naomi","rouge","syracuse","drowning","tunes","erica","alliances","electrons","freshmen","securing","suntimes","starbucks","creep","subtitles","cafeteria","gunshot","tiles","marking","martial","republics","lasts","reallife","lilly","meadow","accuse","dresser","biting","summoned","cubic","superstar","elevation","periodic","durable","organism","hilton","rugged","deeds","gibbs","apologies","sunrise","withdrew","damon","icons","heartbeat","filmmaker","dividing","vanity","fleeing","expresses","assign","hairs","examiner","barber","treaties","mourning","foreman","pounded","wrapping","razor","miners","snapping","stump","augustine","valve","pumped","strap","cellphone","tails","mediated","buffer","booming","populated","wholesale","salvador","detained","rulers","eliot","coward","arsenal","colour","portray","intends","retailer","renee","underwent","prophets","undertake","hopeless","presumed","willow","slack","induce","brightest","roller","sparkling","stella","kurtz","prizes","jessie","captures","capturing","sneakers","wakes","dante","discarded","bookstore","energetic","addicted","rocked","prophecy","banker","ronnie","currents","entertain","tariffs","clubhouse","conrad","bakery","cognition","excel","headaches","stroked","yearly","rattled","compares","chapman","maurice","crumpled","ignores","swelling","nokia","vault","resorts","comey","favour","opted","softball","highend","weiss","takeover","leaped","choked","crunch","utilizing","impacted","drying","exams","fairfax","reservoir","siege","portal","aquatic","proposes","roaring","slippery","traveler","turnovers","dementia","snacks","scottish","contests","nolan","canopy","averages","assemble","harriet","vargas","reset","prevail","exempt","jacques","apartheid","chandler","legends","weber","relieve","shuddered","contends","vines","goodman","conductor","chores","evidenced","sniffed","chewed","spilling","uniquely","embracing","esther","allergic","pensions","hauled","sears","filmed","newcomers","remedies","stain","strand","poultry","reviewers","steroids","widened","mandy","logistic","speeding","shutting","strapped","anaheim","shanghai","connects","betrayal","libby","foley","boycott","maxwell","brennan","sailors","liable","cliffs","melanie","bella","pretest","defects","thriving","malaria","metabolic","tester","restoring","oversees","chaotic","tighter","mulder","greatness","seeming","rubin","doubted","rivera","reese","arising","benign","debating","versatile","haley","stripes","trailed","peasant","wouldbe","immoral","exploited","smash","cathy","belts","condemn","exercised","traps","flowed","graceful","stride","vivian","claudia","levin","treasures","churchill","emanuel","dictate","fallout","devised","faintly","distorted","emerson","tents","teasing","isolates","needless","stigma","dragons","aired","planner","dinosaurs","congo","clinging","aerial","suppress","contested","swirling","bathing","grind","flicked","malaysia","raining","seventy","puppet","relaxing","termed","drawers","savior","tasty","tasting","seahawks","fractures","shovel","oblivious","violently","subset","richest","forge","bonuses","minded","speculate","hoover","scans","rushes","newborn","shelly","peters","shaved","jules","audition","pulitzer","trimmed","baldwin","poisoning","torch","gardeners","depicts","stacks","workouts","cosmos","lunden","tesla","lobster","keller","midway","bounds","wherein","morton","township","arrows","pines","zombies","patiently","doyle","passions","wardrobe","lastly","richie","erupted","consulate","devote","resembled","knights","sonic","bidding","painfully","eyelids","ducked","patriotic","motivate","elephants","conquest","thirsty","claus","barred","eagerly","labeling","farewell","parallels","acoustic","alarming","distract","brendan","pedro","schumer","illicit","elena","aspen","recount","payne","dubious","heavenly","airplanes","obliged","enlisted","madrid","realise","abrams","crafted","contrasts","armored","secrecy","leaps","scandals","tutoring","glowed","receipt","pluralism","spinal","venice","intellect","token","unveiled","probes","forged","chang","growled","schneider","danish","digest","baskets","chrome","versa","messiah","outsider","dolly","scalp","rubble","brent","watergate","moody","sayin","offender","prohibit","marxist","episcopal","layoffs","financed","warmed","paige","bingo","ruler","intricate","conform","guatemala","intensely","energies","roared","locke","wally","spreads","newport","ethiopia","styling","shave","cutter","screws","fooled","sachs","barton","malone","breaths","reacted","disguise","factions","surgeons","declares","diplomat","browned","bricks","benson","appraisal","preach","nailed","monty","arrogance","mutations","guinea","resumed","bleed","butch","shelby","newark","unlocked","therapies","switches","leapt","showers","bedrooms","verified","seasoned","clearance","intrigued","levine","sonya","crushing","moose","dissolved","meadows","pauline","shortstop","geeks","circling","cellar","persona","clint","hungary","carey","biases","allocated","phony","twenties","removes","buddhist","wastes","kabul","pottery","peasants","charcoal","cabinets","famed","arched","trusting","singled","rejecting","deception","yells","predator","shores","nucleus","fertile","cramped","panetta","darcy","rainy","intuitive","disagreed","contender","amazingly","regrets","rivalry","brink","spear","woodward","magnet","austria","banning","endurance","licked","volcano","granting","feather","asians","analogous","clockwise","frowning","validated","sprang","precinct","knocks","tailored","sensing","uprising","strauss","endowment","recorder","rotating","pleading","beatrice","motioned","garner","maritime","devils","winked","stacy","ninety","sophia","chilling","bothers","remedial","halftime","grunted","spins","roberta","pundits","tumbled","celtics","apostles","cruising","retirees","reversal","bolts","sailed","scrub","rodgers","kristen","dayton","directs","judaism","sketches","airborne","villa","schieffer","jarriel","whitman","cocacola","forgiven","bruno","cubes","grouped","renal","corey","dominican","discard","shitty","benedict","prompting","johnston","atlas","paralyzed","condo","knots","defence","shortages","blender","baron","councils","unite","caleb","striped","symposium","psycho","simulated","intently","corpus","irritated","sandals","pharmacy","creditors","coyote","bounty","goats","issuing","dinosaur","barrett","latent","guild","isolate","routines","poorest","thumbs","carlton","prosecute","receptor","patron","graphs","joked","discounts","flipping","spurs","sipping","multitude","colon","hunted","exceeds","downturn","steals","youthful","dividends","panicked","brushes","molecule","smelling","plight","retreated","walton","applicant","booze","specimen","plunge","drainage","hannity","quebec","bumped","intern","grinding","janice","specially","humane","augusta","maureen","plato","doctrines","litter","forecasts","flatow","randolph","metallic","marin","compass","avery","blurred","pathogens","surfing","resonance","narrowly","delia","scouting","pinched","depicting","bumper","narration","matchup","emory","straps","posterior","frogs","outset","granny","copied","emptied","perkins","disrupt","ledge","manuel","squeezing","alpine","oilers","hitters","wales","confuse","stationed","inmate","wolfe","chilly","doubling","bourne","morale","amsterdam","sherry","entails","chatter","consulted","bourgeois","grande","fetus","shrine","asphalt","gazette","costing","candidacy","rainfall","analytics","voiced","downside","brussels","brigade","monuments","shortz","napoleon","paved","condoms","pluto","stunt","carrot","shaky","sleeps","fences","specter","thriller","pedal","stuffing","metrics","analytic","carmen","squat","reactors","catalogue","tractor","deprived","cronbach","chuckling","olson","ensures","fletcher","smoky","flourish","caves","reasoned","skeptics","monsieur","gripping","sixties","minors","supplier","intuition","skipped","boiled","disputed","marlins","worldview","withdrawn","steaming","bedside","spectator","fabrics","scripts","letterman","doris","plump","scrape","mechanic","oneyear","registry","dishonest","maneuver","bunker","attendees","phillies","commute","outlines","clasped","floods","volcanic","rampant","sinatra","simplest","benchmark","gourmet","serena","rafael","rochester","fostering","winters","escaping","coercion","props","awakened","crumbs","gotcha","stylish","edison","courtney","libyan","prepares","catalyst","cartoons","mantle","empowered","wheeler","portugal","finland","daley","hawkins","detainees","greasy","tanner","blindness","posing","vengeance","brook","topping","hugging","scissors","ballpark","environ","stint","healed","caucasian","preceded","guarded","wartime","glaring","extremist","reckon","milosevic","modernist","forbid","pleasures","stevie","reviewer","highland","rhythms","overlook","plead","stroll","podium","oysters","balances","billie","twists","lesions","editions","highrisk","plucked","rallies","applaud","onetime","unrest","replicate","wills","extremes","larvae","fortunes","joanna","sasha","radius","staggered","packet","morals","lenny","allergies","humidity","freaked","cruelty","clare","marge","pertinent","grasped","plaster","clumsy","festivals","hammond","cured","tammy","runoff","glossy","stumbling","marshal","methane","facto","agendas","allan","imitation","canoe","sloan","cruiser","greeks","coarse","buzzing","linkedin","platter","broadband","impending","lowcost","lingered","forearm","disgusted","kneeling","mythology","mikey","porcelain","nuggets","seminary","slamming","blasted","suicidal","flats","detector","fellows","crest","clueless","alarmed","invent","erase","ripping","oversee","pours","norwegian","tattoos","pudding","echoing","stressors","chilled","implying","cookbook","spelled","hateful","sherr","trembled","borrowers","cohesion","buffet","desserts","haircut","attained","marketers","pasture","pasadena","lesbians","disparity","ottoman","salem","vacations","jewel","remnants","flora","dickens","lineage","traction","trench","modules","mildly","signaled","recess","chatting","gracious","jeanne","captive","withstand","lucinda","paces","richness","fragment","blaze","flickered","scarlet","anglers","browse","fargo","noses","woodlands","creeping","bruised","playful","childish","choke","danielle","directive","reside","rails","teased","bedtime","blooms","seminars","customary","blackness","vicki","scalia","wraps","gears","scenic","conceive","battalion","pancakes","johnnie","logically","darren","royals","pacing","scares","checklist","donkey","traitor","hillside","downright","feinstein","croatia","staples","spared","taxed","scenery","hairy","corridors","listener","shines","poisoned","marta","skins","thornton","announces","gramm","messaging","rhythmic","punches","spears","artery","mallory","crowley","surfaced","singh","enclosed","antitrust","mailing","monks","celestial","screened","decidedly","darryl","crystals","hopped","sidewalks","halfhour","tenant","awkwardly","equitable","strides","improper","covert","wisely","notation","reacting","gardener","coughed","roland","aided","clapped","swaying","scraped","statistic","smokers","newsroom","barked","variant","triggers","highs","placebo","slippers","gerry","blatant","starfleet","enact","wouldnt","blitzer","stranded","viability","harvested","borne","andersen","jamaica","longevity","warrants","pinky","recalling","enforcing","bananas","stalled","mystical","shrubs","graphite","preston","spheres","billboard","disturb","splitting","sampled","crumbling","wellness","serbian","browsing","retaining","afforded","donovan","amelia","statues","theodore","squirrel","fridays","abigail","outfits","debra","boone","persisted","routledge","subgroups","roofs","robes","brows","barcelona","chops","screwing","forefront","bengals","casinos","align","thugs","discern","juicy","overt","presume","disparate","ancestral","openings","decree","leaking","awakening","titanic","derrick","brokerage","dreadful","acclaimed","breadth","thinner","recurring","exert","mariners","sneaking","bliss","hikes","reformers","highlands","dispatch","pristine","arbor","dividend","bauer","rabbits","dwell","astronaut","coherence","barefoot","haitian","moriarty","circuits","spices","mccoy","resolving","olives","staging","mediocre","cassie","giggled","conquer","operative","outdated","salads","boredom","artie","rattle","subsidy","blossoms","softer","spells","tumbling","bracket","ahmed","appoint","penguin","shear","lender","marissa","chalk","sheldon","goodnight","tentative","thematic","comprise","mixer","shuffled","veggies","legion","clicks","everett","shiver","gabrielle","nietzsche","watershed","plagued","concede","reconcile","deduction","cannabis","striving","flakes","riverside","locking","fashioned","mitigate","bends","arsenic","enzymes","clintons","theresa","growling","vanguard","herbal","imperfect","warden","emptiness","arousal","unfolding","pleasing","jeremiah","launches","magician","stephens","laborers","curiously","rejects","intraday","geared","sprawled","pence","sticker","sarge","divergent","wrinkles","tosses","rattling","tipping","solemn","activate","menus","purdue","scraping","stale","roadside","jointly","acrylic","plumbing","endlessly","navajo","ticking","mates","grouping","innate","buddha","winced","spaghetti","cushion","gallup","chuckle","opposes","bruises","broadwell","clemens","fragrant","expansive","stabilize","dashed","yorkers","policing","whistling","sorting","royalty","dataset","muted","lowell","renew","liner","revive","hackers","ached","hating","flicker","meltdown","choral","notify","sideline","padded","fiduciary","billing","conveyed","norris","gloom","slots","backstage","tighten","scarcity","reeves","listings","cheered","sarajevo","durham","sized","residency","furiously","balloons","midtown","naughty","stainless","pathology","darted","possesses","avenues","serbia","peyton","hicks","fearing","lineman","rutgers","laptops","summed","cancelled","crackdown","smoothed","watkins","welch","filtered","halted","antibody","moderator","thinkin","juices","pierced","penelope","penetrate","sanity","chester","hides","fossils","martian","variants","scraps","breakup","ponytail","amenities","needy","greenspan","conceal","anterior","flattened","diapers","helena","textile","additions","typed","firefox","bigotry","recurrent","deter","stature","ribbons","vinyl","frazier","bridget","vapor","conceded","keeper","reich","virgil","hurdles","grasses","wipes","divisive","reprinted","therein","defect","sirens","whine","coating","casts","stains","enhances","runaway","lowers","archie","receptive","dropout","correlate","gavin","cocoa","undergone","bolivia","storing","plateau","heroine","emergent","citations","almonds","willingly","outspoken","distrust","damascus","undecided","cosmetic","provoked","modernism","exploding","aspiring","analog","refund","rican","hugely","scifi","cooled","wheeled","orchard","sands","excerpts","galveston","objected","heres","madeleine","leaping","partition","macro","hayden","chanting","dynasty","thursdays","derives","brutality","racially","vansant","ariel","gladly","sinks","kickoff","plaque","urges","anchored","sidelines","dialog","edged","hybrids","longed","endeavors","detached","aching","moons","pratt","hardship","betray","tribunal","enriched","rents","optics","straining","airways","staffing","gravy","copying","nurturing","portrayal","startups","saudis","psyche","spying","brewers","discovers","foucault","farmhouse","slated","gould","duluth","header","alleviate","peeling","bladder","silva","raids","robotic","tongues","cantor","makeshift","unanimous","allergy","tease","whipping","notch","salty","manually","unjust","populist","expands","stung","repeats","kitchens","boarded","bathtub","merge","spielberg","bland","evacuated","earns","affinity","separates","weaken","trayvon","oversized","regimen","coated","fragrance","rapids","canadians","bangs","upgrades","thirties","pastors","invade","morocco","mortar","benches","revisions","pelley","reyes","trainers","ascii","stalking","expired","oneway","swayed","milan","rotting","abrupt","embryos","suites","freestyle","ballroom","plainly","satire","apparel","banged","aerobic","goodwill","ruining","depiction","howling","pinterest","spies","barren","algeria","racks","slung","warranted","crank","bethesda","prompts","archival","impetus","valleys","nausea","expelled","texting","hazel","formative","guitarist","rotate","sadie","cyclists","soften","crackers","perch","celia","folklore","descend","grading","convict","flips","logistics","unlock","tracing","treason","fluids","maura","digits","creed","precincts","famine","algae","hardened","overthrow","meats","decoding","santiago","dispersed","offend","fronts","haunting","suffice","clipped","packaged","implant","trustee","scramble","grins","fisherman","trusts","bates","stylist","converts","submarine","detecting","drafting","ruthless","valuation","careless","aerospace","fungi","elicit","mailed","greenberg","grieving","rosen","superhero","francesca","spurred","transmit","alexis","quitting","malls","doubtful","dawkins","warranty","humorous","amazement","mateo","residuals","hadley","markedly","ponder","selves","doorbell","stamped","deposited","expletive","crammed","cambodia","cursing","windy","quartet","crate","attracts","evils","mosquito","shuts","showdown","nicer","trolls","rebuilt","punitive","counters","expanse","affirmed","lords","altering","ensembles","robbins","wreckage","provoke","remake","punching","glaze","couldnt","entirety","coroner","footing","violates","slump","burnett","dismissal","creations","soaking","subpoena","mileage","twotime","fares","bolted","parasites","anguish","pausing","diners","crusade","hacked","watering","hailed","necks","spoil","numbered","aquinas","delegate","fascist","colder","federally","manure","lexington","daschle","cervical","detectors","vitality","lever","tangle","clout","policemen","satin","shady","caregiver","mimic","aquarium","giggling","calves","thicker","rallied","leftover","pressured","sununu","continual","spacious","allowance","unborn","hideous","referrals","commuter","muster","gregg","alphabet","symbolism","scaling","imbalance","cultivate","skier","reins","flapping","shale","earthly","profanity","linger","seizure","mormons","dolan","unfolded","dealings","diversion","flowering","corpses","lyons","cartel","photoshop","pineapple","overheard","stillness","coworkers","wilder","nicaragua","cleansing","resisting","muttering","sheen","scooped","auntie","ransom","artifact","desks","whichever","vitro","prevailed","lillian","collects","blueprint","payoff","mailbox","detailing","visionary","cutler","mocking","bitterly","ensuing","scoffs","textiles","stringent","disks","handgun","anecdotal","havoc","embarrass","sunscreen","airlock","paperback","bearded","reactive","affidavit","outskirts","sighted","eldest","squinting","forgiving","ashcroft","receipts","transient","luxurious","romania","murdering","starred","erased","perks","fannie","amish","flagship","sixteenth","curling","rigged","validate","liturgy","taxing","kissinger","powerless","prudent","upgraded","backers","shadowy","evergreen","motif","pollen","linkage","fluttered","carve","skate","hauling","uttered","thyroid","gaunt","hemingway","fifties","repay","stairwell","staffer","groan","regiment","familial","nearer","quirky","gaping","logged","geometric","lithuania","revived","appalled","xavier","della","printers","riches","homeowner","spectral","exceeding","harmed","blinding","fallacy","spiders","hearty","cohorts","idiotic","airway","carbo","diagnoses","slows","didnt","competed","fleeting","defiance","browsers","prohibits","attrition","powdered","sighing","rosenberg","denounced","tripped","railway","faction","murmur","moderates","stylistic","subtest","fished","informing","shampoo","carbs","murdoch","dismay","updating","dilemmas","cocktails","collusion","leonardo","formulate","flirting","retains","repaired","bathrooms","flank","golfers","dictated","donny","rinsed","scorer","agitated","tulsa","starling","pillars","islamists","franken","lawful","landfill","galactic","secession","mastered","cerebral","construed","footprint","likert","timeless","chung","hesitant","tuesdays","delhi","radiant","surreal","clauses","ponds","stalks","gamers","reliably","annabelle","upstream","exemplary","conquered","carts","shoving","thirst","punishing","motifs","liars","brisk","marketed","severed","furnished","gendered","escorted","sinners","formulas","drills","summarize","estates","affirm","strolled","opaque","clocks","pecans","phelps","amidst","strung","guardians","abdomen","barnett","devoid","alamo","abdullah","humanist","boast","cutline","arranging","tutorial","avengers","chiles","bullied","diaspora","canton","bathed","morgue","cuffs","obscene","puzzles","scarred","trickle","groove","deserving","fungal","pinpoint","theyve","petals","fined","plurality","critiques","faults","breeds","buckle","obligated","spitting","fostered","ancestry","extras","pillar","settles","cercla","weekdays","hacker","platinum","yielding","gesturing","fastball","fixes","malicious","jerks","bottled","quotas","quotation","taiwanese","mickelson","nestled","buzzed","petitions","asteroids","decency","pronounce","gradient","pantry","billed","favre","resides","wording","blossom","decor","nielsen","milestone","kendall","flare","beeping","audible","mayer","relish","candid","poignant","narcotics","loops","unfairly","edith","dazed","carville","ritter","seeded","vocals","canonical","lurking","blinded","syntax","impulses","harassed","absentee","sectarian","vibration","chimney","brock","helmets","murderers","renting","colonists","linkages","coyotes","thrilling","blinds","glamour","busch","surrogate","arteries","auditors","filings","plugin","lawns","norcross","tattered","easing","combo","patronage","wallpaper","edible","hammered","flared","faulty","dickinson","clashes","moaned","residue","eliza","falsely","depletion","cinemark","cecilia","ryder","haters","littered","grady","visibly","suspend","replaces","tabloid","obscured","toddlers","gallagher","scowled","sharpton","occupying","densities","ancestor","annoyance","thatcher","coarsely","immensely","spawned","coupling","succeeds","steaks","scanner","receptors","renders","jesuit","twoway","supremacy","quantify","ventured","registers","remorse","vested","debacle","surgeries","shameful","vicinity","catering","fixation","snowy","roasting","schultz","blindly","offline","widening","morons","graveyard","fractured","cling","monstrous","salvage","karzai","saunders","threeday","synagogue","smear","withheld","upwards","motorists","parody","upstate","fennel","reformed","yates","avoids","engages","depart","preached","magically","sakes","ballistic","midday","conducive","fairway","yearold","footnotes","sorted","bandwidth","twostory","promoter","swirled","thump","smartest","ambient","boutique","greetings","whistled","spans","compose","diaries","treasurer","divinity","disrupted","carly","masked","muller","populace","disagrees","accessing","grips","whack","lashes","resilient","disguised","barracks","midterm","hustle","ortiz","jamal","stoop","prized","periphery","endemic","summon","bachmann","informs","marriott","stickers","liaison","cheapest","lunches","brutally","sterile","drafts","imagines","alienated","classify","winfrey","blames","mixes","dreaded","docks","carcinoma","whirled","furnace","heath","pests","ambush","expressly","grimaced","rubric","addictive","bottoms","regretted","plugged","menopause","macarthur","lurched","ethos","denim","herein","comprises","rustic","keyword","turbines","interplay","facade","watery","optimum","paranoia","scant","reliever","happiest","coupons","shaving","eyeing","crippled","phoned","handmade","piedmont","plotting","sails","emerald","streaks","wiley","attentive","revise","unarmed","diarrhea","caste","lighten","buckets","resent","winery","risking","tally","margarine","hungarian","italians","riggs","mashable","amounted","dryer","unmarried","predatory","trendy","acquitted","trillions","deference","hesitates","hydraulic","parishes","glued","darkest","peaked","ensign","bitten","makeover","marrow","regan","renovated","albright","dichotomy","shooters","paulo","steamed","briefed","reassure","recounts","peril","memoirs","supplying","pageant","seasoning","cloning","coveted","alarms","rooting","jailed","boise","muffin","plaid","forestry","poisonous","comrades","sprouts","diffuse","boulders","leveled","visas","prolific","anomaly","workings","eclectic","postponed","blending","hitchcock","elegance","starve","entrees","irons","smeared","hallmark","bullies","dismal","twitched","mindful","dominates","clerks","uniformed","deferred","hardcore","unleashed","limestone","beamed","floats","fooling","contours","sponge","englewood","sandusky","destroys","pricey","tedious","countered","margot","folders","router","ranchers","shuffling","paradigms","scaring","newcomer","ensured","primer","explodes","handicap","truthful","villains","mobilize","logos","seventies","composers","mapped","treadmill","tagged","mayors","shipment","kristol","strewn","doctorate","onehalf","alameda","standoff","ellison","bandar","reminders","homestead","tackling","coverup","bryce","snuck","concedes","shoreline","barring","bosch","whoohoo","seekers","highness","regents","reefs","moines","stiffened","uncles","esteem","goldstein","slaps","standings","tugging","grumbled","rooftop","hurrying","seizures","clustered","ridges","attackers","heaved","geese","clutter","dearly","encompass","trumpet","seminal","symmetry","prescribe","taxonomy","enactment","hikers","cherished","realms","ashore","exhaled","inherit","broaden","dipping","baths","dictates","hushed","crumbled","socket","blasting","lured","commenter","garland","shanahan","authorize","aunts","coloring","cupboard","steered","liberated","columbine","gameplay","yearning","lends","commotion","hinted","dogma","humankind","sharia","refine","stockings","plentiful","defeating","cabins","bulky","surged","clamped","cosmetics","grasping","cinematic","dashboard","boosting","plank","distal","farmland","extremism","portrays","vouchers","susteren","overturn","tweeting","hires","gloved","woodstock","deported","standup","fidel","intrusion","benin","specs","override","bashing","macdonald","accents","gordy","rodham","immersed","swelled","disposed","landings","cavaliers","parting","realist","nests","countdown","upsetting","sarcastic","boosted","greenwood","rites","marash","schema","corrosion","battled","knowingly","orphan","antenna","chord","lyric","sprayed","strait","loopholes","helms","bulging","beetles","malware","favoring","composing","filtering","unused","banquet","guarding","congrats","wikileaks","supernova","tunisia","unsalted","sinus","gleamed","stocked","dumpster","avocado","login","laced","abducted","specials","extant","puree","whistles","convoy","sparse","vividly","standout","offending","cutoff","postcard","ebooks","unnamed","moods","worldly","coercive","pandemic","illusions","booths","decorate","alyssa","seedlings","knotted","cushions","webshots","scaled","flurry","chant","blurted","divides","gridlock","profiling","platoon","monarchy","alleging","publishes","fastened","literate","tending","shards","preserves","vitti","cages","clears","audiotape","streaked","hissing","atkins","buddhism","playhouse","caucuses","schadler","intercept","shocks","utopian","squarely","stevenson","packets","lesion","replay","squatted","nuclei","tibet","depleted","stalls","silas","mindless","grimly","creeps","substrate","scarlett","magnesium","confines","turks","discs","wichita","arenas","stairway","embraces","racket","verbally","debuted","hereafter","nearing","revolver","hourly","bouquet","webbased","teamed","elijah","spills","flattered","norah","contended","blushed","brochure","obsessive","peeked","pursed","extrinsic","frontal","tanzania","topical","felicity","appalling","amend","digestive","elian","dialed","realised","watchdog","jongun","airing","parkinson","gracie","priori","defiant","grassy","captivity","headset","landmarks","etched","collapses","harding","govt","favorably","downloads","coupon","mcgee","maher","regained","lockheed","ratified","tandem","constance","giveaway","diagrams","safeguard","glimpsed","informant","turkeys","isabella","attends","racists","weakly","hamstring","polity","fades","selfhelp","grossman","bazaar","grownup","wretched","coaster","hearth","soles","shaded","stinking","suarez","specifies","spruce","whopping","queries","classy","awaits","fruitful","cranberry","watchers","throbbing","absently","parchment","encoding","harbaugh","complains","luncheon","churning","recounted","angled","workin","wrongly","parity","leopold","retrieval","hummed","conducts","genus","drags","cruises","terminate","tragedies","hubbard","handcuffs","simulate","shimano","revisit","proximal","freezes","humid","twohour","waterfall","autistic","stiffly","bounded","photons","submerged","decks","ridicule","lighted","absorbing","angola","oxide","climates","amplified","appellate","sprigs","gritty","booking","splashing","reunited","facets","silvery","forties","survives","flaming","corrupted","clove","requisite","bigtime","turquoise","fernandez","throats","rumbling","faculties","glossary","boils","emitted","persists","manmade","diverted","flair","gergen","recourse","lofty","beckel","serene","doorstep","timetable","throttle","gloomy","pairing","deadlines","mater","rulings","walnuts","starks","slowdown","briskly","auditor","overdue","pursuits","likeness","safest","fastfood","shrill","blackened","sweeps","mounds","sinai","drifts","greer","cautions","landslide","cords","despise","chloride","textures","crates","timed","parasite","stemming","pigment","proclaim","brody","nicklaus","voldemort","folly","guideline","cabrera","maize","tornadoes","quivering","stabbing","discreet","evokes","staten","gentiles","calmed","mediator","garments","dubai","glaciers","explorers","pigeon","wrecked","strangled","autograph","emmett","turbulent","transcend","rained","probing","hereby","greenwich","escapes","silky","laughable","weakening","lagattuta","bearings","hubby","cores","hanks","rumored","growl","prank","argentine","thomson","stitches","cracker","hardwood","surrounds","legit","rocker","thier","priceless","skeletal","sprinkled","scatter","nesting","trenches","mayoral","bedding","pennies","squirrels","uniformly","wagons","notebooks","layered","retina","chipped","paralysis","herds","scrubbed","coolest","radios","clarified","blends","tripled","sanction","revered","mediating","elias","overboard","shoves","trays","boasted","complexes","eyepiece","cessation","coined","euros","psychotic","mediate","spectra","perverse","flannel","cubans","beethoven","flinched","interiors","draining","amplitude","suspense","pigeons","recap","diabetic","ketchup","excused","swallows","diagnose","sheltered","trotted","leftwing","deterrent","occupies","arresting","havent","quiones","cassandra","preface","murderous","badges","hearst","divert","gandhi","reacts","dynamite","awaited","precursor","imposes","cherish","doctrinal","emeritus","beckett","antiquity","flute","nepal","grotesque","bankr","angered","rousseau","leone","relocated","civility","moneyline","stooped","tailor","sluggish","pipelines","lessen","chiefly","alexandra","immersion","embarked","closeness","washes","nominate","sincerity","blockade","referee","festive","surpassed","frigid","risked","patting","primacy","replica","linemen","hopping","neutron","combed","twitch","outfield","schroeder","silverman","smacked","shepard","disliked","seams","finalists","halved","stormed","donating","fixtures","catalogs","bayou","simplify","renamed","runnerup","patsy","blackmail","clooney","quieter","mosques","henri","drilled","alvarez","metadata","dearest","executor","flawless","plotted","patrols","discredit","devise","casualty","raisins","semifinal","anchors","rubbish","elevators","spirited","joyful","quaint","bowen","ferris","colombian","regulars","interns","puppets","lancaster","beaming","knitting","shriek","convened","rustling","grenade","redundant","leftovers","climatic","heaving","shipments","deceptive","tenets","payton","upgrading","rusted","loadings","sweaters","wiser","cones","vocation","eminent","whiteness","commuters","propelled","charred","concerted","tides","opioid","baltic","ascent","blasts","reverence","truce","puffed","majestic","thinker","actresses","barak","rookies","stalked","forks","cautioned","gleam","prognosis","makin","bundled","timer","fixture","vineyards","waged","vents","psych","elicited","gentry","janie","equate","tremble","restart","aristide","chopping","fledgling","syrians","shutters","tread","mondays","bristol","batters","mocked","lifeless","quarry","hitch","garnered","clarice","goodwin","bodyguard","spree","thinning","eruption","forceful","manuals","railroads","moran","boldly","vance","baffled","scratches","reopened","hunch","causality","buckhead","erroneous","workload","ushered","calculus","despised","preclude","handheld","dominic","reeling","nicholson","conserve","airtight","accessory","staining","bustling","stressing","rosenthal","malignant","dangled","emulate","authored","clapping","suitcases","cluttered","squadron","tripp","overdose","recycle","spraying","aspire","reforming","banners","gland","goauld","glide","vowel","widen","attacker","citizenry","plush","puzzling","freeing","giles","modifying","embryonic","harmon","frida","frosting","attire","clumps","walkway","silenced","quota","mclean","shrieked","warsaw","mythical","prophetic","resonate","pitiful","alleges","percy","casimir","reassured","denotes","liquidity","lasers","heirs","grayson","kodak","reelected","illegals","perdue","refining","wilkinson","heartland","sauces","tenor","shortcut","pleas","valves","cortical","fluent","intrusive","qualifies","praising","taxable","finer","gathers","hallways","vigil","exposes","thrift","steinberg","glazed","embryo","evoked","spaceship","compel","vanishing","bumping","barge","agrarian","thanking","chinatown","visualize","annapolis","twoday","wooded","emailed","circa","greenland","rallying","ramon","norma","venerable","anecdotes","inject","walkers","accords","optimize","tracts","newfound","saloon","audubon","devout","axial","barris","antidote","flutter","vigor","crave","swann","canyons","additive","signifies","sensual","gunshots","squid","cummings","concise","residing","bannon","polarized","baggy","marches","outpost","toured","deepened","overgrown","rapists","medically","exploits","enraged","boyle","defective","manafort","cardio","juries","errands","arches","franz","mustang","maternity","macmillan","steroid","abdul","crows","negatives","gorge","resumes","semantics","keynote","colbert","trimmings","downed","elevate","manila","verbs","paypal","pencils","bruise","bundles","beets","prosper","mused","leafy","poetics","delaying","junkie","analyzes","slicing","calhoun","bobbed","feelin","warmly","strife","showered","heartfelt","abduction","envelopes","sculptor","gorilla","tealc","colby","bosom","skipper","harms","creaking","tellin","exhales","rabin","embodies","protector","curses","sweetly","cleaners","curving","coincide","spawning","couture","executing","superiors","gruesome","arcade","endowed","pooled","mckinney","rockville","anime","ebola","budding","starved","offscreen","relegated","anthology","soups","stomped","goodies","harden","nagging","undone","bubbling","stricken","purposely","ticks","starship","raspberry","cersei","applauded","contour","spooky","namespace","dramas","tibetan","wideeyed","elective","vigilant","sheikh","primal","virtuous","millennia","cradled","camden","stalk","idealism","charms","twitching","cashier","hunts","parachute","scooter","hurries","menacing","callers","classmate","volcanoes","fling","cultured","canals","lenin","pulpit","spaced","splits","outweigh","forsyth","dripped","teamwork","solemnly","squared","doesn","tricked","knack","caveat","slogans","pitted","treatise","afterlife","upheaval","olsen","reuben","freakin","wicker","passer","tactile","shalt","townsend","baldemar","matrices","partying","jacobson","pulses","monsanto","gifford","untreated","overtly","tattooed","whitaker","shred","creaked","tallest","fraught","ashtray","bowel","exited","pathogen","genomic","drapes","stripping","furry","cooke","shedding","nicolas","osborne","cohesive","saliva","crafting","massively","arrivals","labored","deepening","sunnis","sharper","waiters","molded","anomalies","forearms","ezekiel","excitedly","macon","cartilage","lecturer","dives","petite","residues","designate","clerical","putnam","pulsing","endorsing","kanye","secede","wrestle","elitist","handler","whores","skeletons","gadget","calming","impartial","fracking","robotics","deficient","stadiums","redesign","macho","downfall","comer","intercom","venera","fencing","hammering","foothills","wormhole","takin","rumbled","momentary","mounts","roommates","withhold","sediments","weasel","politico","kennesaw","departing","enlarge","megyn","mourn","clipboard","medalist","retro","savory","quaid","repent","carney","papal","unheard","blazer","jerking","creasy","kingdoms","instruct","coiled","hotline","signify","lynne","theorem","genotype","tessa","mckenzie","nicknamed","surveying","lange","westbrook","queue","germs","georges","grossly","whips","cheeses","taipei","bribery","basal","wrigley","conveys","casserole","coughs","bentley","darting","carton","brewery","bartlett","lowlevel","eleventh","forensics","handshake","prudence","spanning","musharraf","revolving","genders","cartridge","funerals","pollock","mckay","jobless","oblivion","napkins","degraded","avail","coastline","chilean","ramos","liberia","flashy","restrain","codified","polluted","dormant","shrieking","salted","clothed","heirloom","thumping","marinade","tenet","beltway","jails","dignified","roseanne","humanism","glimpses","lanka","sacrament","spiked","ardent","intro","frowns","erickson","islanders","breakout","tariff","campers","reboot","swanson","chigurh","daria","crackling","customize","promoters","impede","bethlehem","swimmer","brunswick","sheffield","leftists","attest","mackenzie","roars","snarled","darkening","lipid","defends","josephine","stinging","auctions","undue","leach","regal","resultant","frontiers","jaguar","spoiler","coincided","paterno","medicinal","secretive","mamma","doubtless","clinician","energized","fangs","buyout","weekday","playbook","caramel","lapse","whitfield","spotting","carnage","realty","mahmoud","angst","steiner","funnel","polled","purported","diagonal","plummeted","hardships","shortfall","kerrey","flake","lawmaker","subsidize","sterritt","funniest","nacional","brookings","lando","pollster","outcry","senseless","pedals","feral","regulates","spitzer","repealed","lanier","blankly","lancet","melbourne","scents","spacex","dispersal","seamless","wearily","fluke","deceived","squeezes","mutants","howled","stony","tenuous","richly","weakest","cater","trance","marxism","recite","undercut","craters","finnish","guillen","inflict","stockholm","clubhead","cavern","wasteful","melodies","scrimmage","brexit","thirds","shortened","stemmed","convent","legalized","busiest","peruvian","fasting","vacancy","audits","occupants","penchant","royalties","cosmology","hurriedly","mcmahon","reflex","faiths","stumbles","sweetest","endings","cupcakes","plugs","raping","sofia","chords","waning","dartmouth","fallujah","repressed","glint","trophies","buttocks","meyers","spawn","consoles","bathrobe","sprawl","groupings","intrigue","haynes","contra","twelfth","dispose","deceive","averted","afflicted","composure","praises","causation","salazar","haste","boardwalk","adamant","schuster","urgently","corbett","bluetooth","ruben","batted","chore","grounding","narrower","harlan","kneel","exported","vending","embassies","saddened","pained","binge","equator","minimized","polio","patented","jolie","bandage","burying","hover","shutter","exporting","gospels","chained","gilded","unfolds","gazes","cologne","begala","excesses","staffs","escalated","repairing","inhale","blurry","putative","fared","fueling","moans","crossover","skyfall","clientele","piety","doughnuts","compute","aires","courtship","limousine","lonergan","refute","pretense","neared","lures","ankara","trudy","captains","chevron","pastels","sunken","sixmonth","budge","approving","earnhardt","occupancy","selig","justifies","gowns","groves","lowkey","barbed","blooming","mavericks","dreamy","reddit","beginner","restroom","stagnant","plastered","molina","electing","collagen","parcells","scowl","fredricka","algren","amanpour","shallots","unreal","snape","stricter","drenched","oversaw","unifying","cowardly","shrek","morsi","strolling","hypocrite","wetland","chechnya","timid","cartels","hiked","martyr","plunging","narrowing","anchorage","harassing","rembrandt","overload","tworun","smallpox","cesar","bailouts","celsius","crippling","douglass","flask","wakeup","ticked","faraway","condensed","oceanic","winged","schiff","lunchtime","setbacks","whirling","chemist","climbers","rumpled","bluegrass","nathaniel","dialect","iphones","uploaded","chests","surging","melts","obeyed","croatian","nicest","maneuvers","penned","toppled","tripping","planks","allocate","bloodshed","follower","kayak","antics","guthrie","youngster","subtests","flashback","geoff","reversing","hooded","shadowed","rounding","minimally","quilts","sporadic","postcards","everytime","woken","extracts","postpone","nurtured","implanted","disable","comforted","deviant","chatted","monet","confided","pledges","reddish","tensed","anglo","comforts","edinburgh","diluted","tweed","visceral","stubble","recited","drugstore","reared","tabloids","cures","labyrinth","fremont","carcass","troopers","flimsy","postings","recognise","memos","trainees","automaker","dignan","landry","practicum","spores","subsided","isabelle","bailed","warped","cheesy","glands","eyelashes","schindler","crispy","achieves","outlining","datasets","aversion","miner","steed","naples","steward","statesman","grilling","centrist","oversize","cadets","magnolia","crumble","wont","busting","dials","dreamt","annals","hampered","forgets","couric","smoother","dorsey","aback","presided","hurtful","overwhelm","swearing","bellaire","eyeballs","accession","scribbled","splendor","troupe","galley","refresh","nascent","liquids","runnin","cliche","smoothing","hague","perfected","outages","sheds","starboard","tripod","sermons","dialectic","growls","idealized","scorn","kneels","pharma","neary","mccormick","gutierrez","imprint","repayment","auditing","flatly","referees","mixtures","pitfalls","royce","juveniles","lilies","memorized","collier","spacing","swath","katya","georgian","lunged","panelist","chaplain","mobilized","patriarch","congruent","fibrosis","dodging","murmurs","bellevue","wager","altman","highrise","blinks","awaken","bashar","genotypes","rentals","leopard","accorded","foreigner","feldman","woolf","positives","tumblr","ripples","kingston","jerseys","maximal","exerted","conserved","scarves","curing","denis","relic","patterned","tinted","monologue","lament","peeking","perplexed","wilde","securely","mascara","fifteenth","louisa","conferred","commits","beckoned","bandura","appliance","allure","unravel","overcoat","optimized","saviour","undertook","molested","chemo","shrunk","traverse","ipads","twoweek","lamented","brooding","breathes","bulgaria","bungalow","macbook","gliding","regis","removable","exhale","airwaves","anglican","rendition","chaired","accuses","unload","colours","affirms","wacky","swimmers","underdog","moderated","viola","clones","intending","schiller","tonic","pinot","grooming","reckoning","pondered","lumps","absurdity","antiwar","allegheny","fortified","rangel","cranky","plume","digestion","repertory","ballard","davenport","puberty","bonded","pyramids","comedians","serenity","converse","flavored","ignited","georgians","speck","ascribed","pastures","chives","theorist","sculpted","sansa","mcbride","sagged","receding","densely","batches","valet","angelina","crowe","fliers","earners","armey","glimmer","heady","medley","landlords","dumps","gillespie","mosul","chassis","framers","consonant","madeline","deluxe","daryl","markings","odors","aubrey","piers","fonts","amassed","doorknob","twigs","filth","underside","booklet","abiding","encrypted","accuser","cornmeal","avert","saucer","expires","drawbacks","revisited","dwarfs","darts","redefine","carpets","shelton","salinas","rotated","rightful","projector","groomed","sidelined","tacos","pesto","worrisome","rapport","trough","bargains","suicides","cameraman","dries","hartman","spatula","texted","effluent","harshly","paulson","warily","bestowed","foggy","overcame","paleo","resin","parable","converge","crunchy","avian","forwards","princes","minivan","confer","finalist","modesty","bowing","tilting","mullen","mantel","sided","flopped","padding","docking","beginners","grate","atkinson","dialogues","appetizer","connector","underwood","fanned","juniors","glided","loophole","sightings","taping","canons","colossal","spoilers","tackled","thrived","sandstone","aidan","campfire","allright","soybeans","tagging","encoded","usability","melodic","wheaton","sloping","famer","sparkled","checkout","flagged","resented","sharpened","greased","handouts","plowed","parochial","budgetary","retreats","estranged","radon","expos","wilkins","provoking","takers","fullerton","elderman","enlist","stately","borges","attaining","alligator","dismantle","analogies","mouthful","balkans","manifests","bandages","grenades","judah","silicone","barthes","grits","scrubbing","anecdote","briefings","healthful","arisen","shielded","bribes","ashton","roundup","snort","whence","ritchie","defer","straits","veiled","revolves","escalate","destroyer","relics","lugar","coldly","feeny","flares","apathy","tamara","artisans","skates","pendulum","zachary","commuting","ballad","vowels","heroism","presiding","cutbacks","gulped","murals","darla","forging","ovarian","limbo","tutors","flailing","ortega","banished","spits","pedestal","reliant","durant","boosts","friedrich","quark","proxies","shortest","breads","allegory","deserts","shiites","pollsters","watered","jeter","excludes","prada","sixyear","tasked","landuse","streamed","wimbledon","reigning","terminals","grieve","quarrel","drumming","melon","unleash","impeached","widows","overalls","rafters","helper","jamaican","molding","prickly","outputs","hasty","caretaker","closets","noriega","onesided","modestly","coasts","waxed","propel","mingled","palate","cashmere","coals","lizards","lashed","empires","sedentary","cropped","puffs","mistrust","untold","bowers","rapes","sling","perceives","darkly","crowned","pondering","delusions","harmonic","regulator","farthest","lacey","dusted","hawking","redeem","brochures","graded","athena","doorman","schematic","topanga","ledger","clouded","completes","alluded","underage","brigham","rodents","bayesian","stripe","thoreau","acidic","marshes","courier","musicals","warhol","heller","rehnquist","clams","annan","tentacles","baroque","oconnell","thickened","crowding","fullness","aiding","waitin","marshals","fedex","backside","grandeur","longhorns","handbag","dictators","penal","beaumont","outings","swiveled","rhymes","defeats","menhaden","partnered","hermione","shootout","revising","ontology","twinkies","faulkner","grail","rippling","readable","affirming","detergent","purgatory","hattie","cranes","mansfield","ridley","redress","detriment","newsom","entrusted","payers","squatting","westward","syringe","mcguire","errand","bowels","kimble","ethically","bellowed","hangar","gurney","takeoff","brunette","elise","pharaoh","willful","topdown","alaskan","drugged","bandwagon","blanc","deepen","preachers","binds","darden","keepers","alito","humour","rippled","havin","wooten","emirates","clogged","downey","slaying","wrestled","scopes","dutifully","butte","eurozone","crazed","hanged","hardcopy","excerpted","orient","bluntly","severus","trailhead","raptors","crucified","descartes","siberia","bleach","unmanned","flinch","picket","whined","archaic","galleria","alaric","passports","surpass","workable","gravely","wholesome","blackwell","cleric","hayward","stifling","landfills","lyrical","canning","bumpy","soybean","citigroup","disarm","abstracts","playin","proverbs","raided","molten","octopus","charger","vinci","balding","healer","constable","guadalupe","habitual","squeak","pandering","distort","fashions","entailed","wares","bleached","electors","stitched","chiang","mcdowell","midwife","fauna","tubing","mythic","masking","splinter","scarecrow","drains","briefs","tillman","shrewd","legions","excavated","stretcher","shyly","robberies","narrated","tonya","segal","creak","exiled","predation","ferns","jacks","swine","scanners","staffed","mockery","geithner","wishful","curators","andean","derrida","hines","borden","sergei","martyrs","comedies","resists","evanston","buckled","condos","delights","stashed","montage","pretends","trudged","dover","angier","bluray","graphical","marveled","sloane","marcy","waging","comfy","vetoed","levers","gaines","magnets","malik","marquee","darlin","slashing","universes","browne","meteors","quinones","squads","decipher","rowland","miley","allotted","ensued","tabletop","nested","cyclical","supervise","statehood","respite","bathe","elsie","tillotson","dashing","harming","posited","fullest","enslaved","forcibly","unesco","nameless","deploying","shelling","trolley","triad","bordering","finley","thawed","cooker","unsettled","overrun","resonates","operas","facet","markup","proponent","dawned","telltale","alleys","cafes","unfit","creased","summaries","pores","blowout","outfitted","magnified","electrode","wanders","sandler","sprays","menstrual","herrera","visuals","wildfire","fingered","crickets","arrays","glares","maguire","aches","oxidative","durbin","slideshow","manic","crockett","bleachers","sargent","shopper","censure","knockout","mussels","fairs","stamberg","forage","yearbook","virginity","importing","bouts","wondrous","agonizing","colonized","nairobi","impromptu","scripted","postcold","shrub","strangest","allout","homered","gibbons","utterance","moths","posits","nerds","snowfall","travelled","suppl","refinery","imitating","offence","salts","withered","lucia","motivates","crawls","uneasily","deutsche","marquette","breeders","puffing","clawed","unfounded","pointer","variously","screech","necrosis","foresight","equated","obscurity","camped","scoreless","bounces","clutches","nebulae","furrowed","lanterns","crooks","soiled","judas","fillets","ayers","condit","idols","digitally","paychecks","neuronal","digit","dwellers","degrading","bordered","keyboards","bunkers","caviar","boxed","slumber","livin","fractions","summons","proctor","publicist","frankfurt","reeds","whirlwind","stardom","cowards","combating","reinvent","stroller","shreds","tickled","raked","harrowing","crouching","hagel","sockets","dumbbell","faked","thwart","engraving","genomes","crunching","septic","wards","sacked","racked","enticing","manova","harass","memorize","dogged","clippings","cottages","ingram","resided","davey","intifada","weston","bridging","impeach","kenyan","cucumbers","colette","holloway","conveying","grappling","scrawled","affords","pickled","tripoli","clive","sunflower","constrain","downing","meddling","lumia","chimed","pointedly","spaniards","pataki","opting","charters","calendars","foresee","blueberry","crier","knopf","enclave","dreary","vaughan","lumpy","ravaged","engulfed","earthy","spewing","sanjay","capsules","closures","watchful","tendon","wrongs","animosity","beatty","haitians","cultivars","fandom","triumphs","macintosh","prosocial","westeros","clerics","worsening","apostolic","warheads","milling","greeley","larsen","acuity","rebuttal","genie","cholera","commenced","romanian","emile","previews","covariate","tenderly","ethel","underfoot","slimy","legalize","spade","nordic","zipped","handlers","barbour","entangled","tropics","detour","repubs","picky","smirked","swells","humphries","creditor","flaps","staterun","iteration","seduced","rasmussen","fanatics","rescuers","steamy","intensify","streisand","smugglers","bedrock","dukakis","shatter","impulsive","excursion","ringed","shrieks","cripple","perilous","wharton","fateful","compile","donvan","collide","scallions","glacial","ahold","shorty","approves","ridiculed","overrated","playfully","denounce","upholding","disciple","mascot","garza","corral","countess","holyfield","cannes","mormonism","homegrown","damian","mariah","bandit","fullsize","thrashing","selects","crackled","grizzlies","blushing","profane","limitless","middleton","bigoted","cheaply","felon","slanted","moira","minions","graying","sleigh","sanctity","scrooge","reread","bacterium","sufferers","conveyor","sweeter","dinah","defied","gamer","vibrating","agitation","homey","freckled","popup","nineties","epidemics","dismayed","recruiter","molds","reptiles","catchy","threaded","rusher","wildfires","venetian","striding","kelso","mayfield","collage","kellyanne","absorbs","flushing","montaigne","chills","devoured","dulles","creams","giovanni","dialysis","shielding","snatches","caribou","looped","dominique","consumes","margo","fleece","damning","priscilla","enacting","prettier","botched","raged","creeks","snail","eagerness","modular","whitehead","warmup","forwarded","flavorful","knoxville","snapshots","robbers","flapped","raylan","emmanuel","erode","forgo","deceit","altruism","navigator","rearing","redeemed","prodigy","linens","drawback","envied","sketched","tacit","jilly","flicking","cullen","carlisle","neutrinos","corny","lucian","splayed","dusting","matted","outburst","wildcard","envisions","globular","farce","thrusting","issuer","lineages","allege","empress","semblance","shafts","mandarin","veranda","tapestry","courting","dizzying","rooftops","revoked","scrolls","buffs","scolded","anarchist","heaviest","algerian","squealed","ticker","issuance","triangles","bakhtin","underlie","hemmer","delores","immediacy","waller","thwarted","frontline","reston","ignite","medial","worsened","unmet","cornelius","canola","dissident","grapple","esoteric","scams","flatter","innovate","emanating","paving","thrives","oneman","stamina","broadened","sentient","flexed","langley","mediators","jimenez","searing","hitched","obedient","strata","daine","leahy","willed","confronts","scurried","wildest","foraging","patchwork","eaton","excision","variances","pryor","hacks","fours","fondness","dickerson","slider","drummond","droplets","bowden","momentous","trending","refill","callahan","mcintyre","musty","billowing","fountains","gaped","unchecked","centrally","hardline","ascending","sorely","raccoon","boomed","cleanse","valuing","complicit","kimmel","slabs","centres","clearcut","stomping","winslow","putts","snowstorm","moustache","actuality","flooring","shrines","likened","graft","evolves","decaying","mccann","wheeling","inched","windfall","mammalian","walden","overflow","starch","roamed","maude","droid","outlawed","impunity","spatially","maids","exiting","crocodile","entre","knowhow","prism","writhing","agreeable","stirs","bradshaw","contrived","schwab","riparian","bitcoin","distilled","steeped","burgess","plopped","alloy","failings","smuggled","artworks","rustle","unsub","kernels","analysed","shortcuts","brits","clubface","comical","liberate","demonic","impasse","ascension","populous","jumble","craftsman","mania","boyhood","kingwood","recital","buttoned","thumped","armenian","traitors","complied","blaring","cyclist","prescott","talley","noodle","equities","battista","sealing","fainted","negligent","seawater","polyester","polygraph","whacked","conduit","hyperbole","referent","washer","cronies","randi","bronco","ralston","posse","whirl","scented","glassy","combs","tatum","grimy","toobin","circulate","reborn","brighten","unearthed","mayan","antlers","gearing","attuned","entice","mules","diligent","grooves","natalee","conyers","tiananmen","sniffs","effected","grownups","swirls","wield","pedaling","descends","prettiest","litany","matalin","visavis","syntactic","grouse","ejected","surfer","wading","mcdaniel","heresy","floured","geraldine","diversify","radiance","millet","pelvic","savages","succumbed","dearth","gutted","prologue","exertion","glorified","smashes","bolstered","larval","andes","reciting","dieting","camper","stinky","jackpot","islamabad","servaas","glittered","daryn","swamps","keenly","stills","gleaned","amnesia","wellbeing","willfully","rockdale","borrower","premieres","arduous","sighting","finesse","artus","shorten","vases","modelling","grader","legality","sprouted","coulter","melanoma","coups","craze","brownies","melville","ovation","monoxide","kandahar","tombs","elemental","skinned","eastman","suffrage","boyish","headon","eaters","cornered","modality","waterways","lowry","xander","softness","globes","podcasts","revert","ramps","scorched","latte","fonda","stucco","heaps","commend","basing","cradling","leakage","murtaugh","coupe","macvicar","spiraling","stifled","halting","trapping","skillful","stables","degrade","squint","panelists","greets","wrenched","pellets","juncture","roused","portman","furnish","shutout","lilburn","sprained","remarried","boosters","trimming","loudoun","alters","lambs","studs","tractors","replete","lifespan","subtypes","wrongful","karaoke","compliant","glows","rancho","bourdieu","genealogy","atonement","namesake","whoopi","slums","janeiro","stair","youll","poole","crowns","aerobics","stallion","cylinders","frosted","upton","revamped","jayz","shingles","fetched","twofold","senegal","gulls","foregoing","throng","thorns","analyse","dodged","tinkering","alexa","marla","chanted","gorlen","morphin","propriety","widowed","tremor","signified","gnarled","warms","fringes","intl","spooked","collided","elspeth","lasagna","reith","garnett","coils","disarray","tailback","frosty","tillerson","elisabeth","thine","leeks","groping","stocky","righty","finalized","unease","exclaims","lauer","snowden","casing","peptide","cavernous","caress","matured","streep","rehearsed","hardcover","coolly","robby","brunt","geniuses","footwear","swarming","clashed","elegantly","leveraged","mastering","dulaney","flowered","relapse","rodent","acreage","glinting","sleepless","encased","peregrine","illogical","tacky","attaching","farrakhan","evocative","parades","musically","quart","improvise","umpires","couches","wolff","grimes","trumps","haunts","commence","wrapper","earmarks","spherical","micah","juniper","allegra","lowly","margarita","whatnot","petersen","patched","coerced","shellfish","crossings","antigen","pinning","bared","conroe","prevails","doorways","stirfry","collars","gritted","augment","clair","kendrick","felons","settler","fasten","unloaded","reverie","hanoi","purified","pretext","lightest","chipotle","carlyle","hayek","mcintosh","postage","hodges","superfund","cruisers","eternally","platte","swooped","tendrils","complying","leadoff","chernobyl","rossi","matisse","rehearse","flustered","undressed","clasp","handguns","chartered","squeal","friggin","formality","ramsay","bugging","estonia","affleck","espoused","unitary","lifetimes","hitherto","moret","whooping","radial","reigns","donahue","treasured","hubris","newborns","hamid","elisa","dryly","circadian","raincoat","squirmed","marbles","ducking","dumbbells","strives","russo","sonar","parka","subverted","doubly","grainy","stools","fairfield","ranches","falwell","addison","abramson","skied","mingle","moroccan","roomy","ascended","reckoned","netting","symbolize","gusts","backups","bookcase","movin","thicket","cadre","waffles","sitter","federer","jabbed","newscast","precepts","seeped","taxfree","forested","licks","nicki","sputtered","curtail","aromatic","canvases","hathaway","wrenching","reeve","guerrero","drinkers","intercut","pleases","bubbly","skewers","mined","gracias","grazed","likable","untie","perished","boutiques","spotify","glistened","eruptions","riddled","frenchman","mobil","youii","bellies","distaste","grandkids","usaid","lauded","oneday","laidback","arterial","barbaric","blossomed","budgeting","sneaked","basins","redshirt","streetcar","goldwater","cascades","exogenous","garry","mccall","wavering","deadliest","kayla","confesses","shrapnel","antelope","yellowed","foxes","allusion","langdon","pickups","worded","condone","primates","cleavage","eater","networked","darfur","chimes","syndicate","annoy","delve","critters","dogmatic","retiree","brianna","mourners","harbors","slalom","lefties","sittin","tacked","maris","alfonso","pastries","chimps","privy","starched","cello","harkin","lentils","carefree","coffers","blazed","tweaks","pedigree","veritable","chats","dazzle","reviving","matheny","sheppard","billings","prius","woodson","plissken","spokane","kepler","rescuing","hermann","marquez","glitch","pretrial","disperse","tristan","scallops","pavel","scrawny","selma","plantings","blight","heron","apologise","keynes","latency","radiator","textured","annabel","cleverly","coworker","foray","tutorials","genitals","heaped","showcases","annotated","storied","protons","pigments","peels","hatched","slurs","sisko","dozed","entrances","greener","trappings","remington","slander","trashed","rancher","isolating","bigots","heartless","beasley","carousel","shuttered","styled","credence","deranged","realtors","enveloped","primers","hastert","walled","mortals","issuers","breezy","dilution","landfall","rivalries","staked","wideopen","sudanese","paisley","pamphlets","colmes","overruled","drooping","shimmered","wallets","defies","parched","pastime","deflect","barlow","gripes","mainline","citadel","notoriety","rationing","laments","jindal","pacey","alienate","euphoria","salinity","haidt","plugins","bidder","strenuous","seeping","wavered","centauri","prolong","sheik","campsite","deluded","slits","angler","conundrum","brood","stoves","dwellings","shrinks","breached","wakefield","impacting","celiac","hendricks","trampled","balked","vistas","mangled","perils","bette","offroad","keyes","whoop","dreamers","midair","profess","taxonomic","shunned","licensure","droughts","succumb","heats","ferrell","macedonia","polishing","opposites","innocuous","bigot","primed","bandits","merritt","menlo","proofs","blurring","topnotch","vignettes","wherefore","sketchy","dearborn","vandalism","parisian","healy","humbled","brandt","sparking","scoffed","hammock","saith","fictions","shorthand","stacking","schiavo","habitable","minuscule","cabaret","cameo","waterway","vigilance","severance","latitudes","professed","proton","conley","sweats","quivered","resection","tropes","brill","raters","appease","geologist","henson","unsteady","sternly","renters","donned","receded","recharge","raffalon","prodded","shameless","impart","hairline","overlooks","barns","ivanka","earnestly","bridal","unloading","voicing","trawl","kennedys","juarez","capers","sprinted","verde","backlog","forte","manicured","pendleton","phonemic","filler","baines","onlookers","palaces","redirect","levees","satisfies","rewritten","fruition","pantheon","agility","childlike","dropouts","seton","albanian","tranquil","blanks","frenzied","salvaged","deletion","jogged","stave","parasitic","cadence","geordi","simms","lifeline","venous","vitals","recapture","whitetail","salience","paine","dropbox","pokes","handset","waterfowl","polenta","vertigo","bunched","masterful","wielding","plumes","werent","garages","ellington","delicacy","pendant","meatballs","heralded","satanic","embattled","bowles","reinhardt","propane","decoys","authorial","conjured","rotted","phased","addie","cannons","quizzes","copeland","stammered","finnegan","spurrier","custard","awarding","rainwater","worldcom","laziness","spinoza","redefined","liasson","wasps","bulldog","mystique","painless","tampering","acronym","essex","taxis","goodell","shroud","reels","padilla","showroom","barnard","snarky","execs","fillmore","ascend","superboy","clans","meteorite","subspace","wayward","expertly","movers","chime","attaches","pregame","resorted","couscous","waded","amman","topple","fourday","sharif","rosary","negation","sharpen","pegged","decoy","dismisses","laureate","midsummer","breyer","stunts","donatello","feeder","rematch","sayer","paddling","diseased","barrow","betraying","hapless","handlebar","feverish","posit","scrolling","skaters","rollers","vests","pollutant","bookshelf","chants","trickled","antivirus","saltwater","lingers","episodic","governs","marcie","marred","worcester","surfers","creases","outliers","auditions","swears","reprints","delacroix","lecturing","bushy","smarts","theyll","harvests","canary","reclaimed","utensils","corollary","subtract","faltered","kellogg","endearing","randal","occupant","starlight","integer","abramoff","scorsese","swarmed","premiered","speckled","howto","gastric","arcane","deleting","winking","menendez","ferdinand","flatten","brokaw","cheery","legacies","thickly","dizziness","guzman","groped","snarling","gradients","kline","ovens","messes","libel","oncology","coincides","configure","rewriting","bullish","phrasing","brimming","seduction","pollard","beeps","whoosh","senor","openair","panes","tonal","presidio","proclaims","craftsmen","archy","vacancies","loudest","sugary","dalai","squeaked","mottled","lunge","flocks","crested","booted","tarnished","dentists","masse","saban","americana","sorta","lattice","hippies","stupidly","paucity","ponies","debtors","innuendo","realtor","nephews","wisps","repaid","rebounded","scrapes","displace","grassley","crutches","fanciful","pointers","jameson","occult","frugal","canister","marketer","verne","snails","candor","mansions","exporters","valentino","barclays","colds","blisters","studded","sprouting","devour","fester","purses","denzel","twirling","takeaway","fiscally","tradeoff","dunlap","forfeit","angling","saleh","mugabe","recoil","revolve","himher","punks","norville","freer","hanover","romances","bloomed","glinted","barbra","fervent","aretha","rowan","clawing","forlorn","partake","takeout","rockfish","demeaning","vacated","dialing","amenable","scoops","tiers","jamming","penalized","cranked","tweaking","helpers","excite","comme","riveting","underlies","overcast","graces","oozing","levee","limped","enlighten","alluring","artistry","mediums","mouthed","pitts","clipping","warring","backpacks","morbid","woolen","northward","dwindled","enrolling","quickest","northside","snipers","saddled","additives","covington","discord","coriander","niches","expectant","depaul","greats","astray","utilizes","mcpherson","donnelly","bloodied","walkin","freedman","strangle","cahill","sweetened","stuffy","entree","deirdre","knobs","rations","lenora","ranting","resonated","optic","nasser","webpage","maddox","thinned","squirming","innocents","creighton","soulful","muses","hedgehog","spines","errant","maples","mutters","interacts","layering","theta","bindings","jayne","manicure","jonbenet","throwback","wounding","tinnitus","apricot","courteous","palatable","stanza","censor","haggard","amplify","scots","debatable","screeched","passover","toned","martyrdom","stomp","tilts","subpoenas","idling","midsize","selfless","defaults","radiated","deities","gangsters","praxis","bassist","humiliate","lockhart","villanova","partisans","breezes","basra","scotia","stalling","cordelia","secretion","farmed","tumour","compiling","concur","throbbed","plaques","meditate","upsets","graze","basque","posturing","frist","cartons","carvings","newsmaker","tully","shivers","cortez","annuity","castiron","lockers","mcmillan","hotly","sheehan","preamble","ramadan","twine","lunges","brees","ladders","darby","polluting","rowdy","crabtree","unveiling","flanagan","cleans","cravings","mathews","emptying","backfire"];var Vn={generate:jt,toKey:mr,recreateKey:fr};var ft=class n{constructor(e){this._source=e}residualSkipValue=0;set source(e){this._source=e}get source(){if(!this._source)throw new Error("No source for the sequence");return this._source}get residualSkip(){return this.residualSkipValue}set residualSkip(e){this.residualSkipValue=e}map(e){let t=this.source,r=async function*(){for await(let s of t)yield await e(s)};return new n(r())}concatMap(e){let t=this.source,r=async function*(){for await(let s of t){let a=e(s);if(a)if(typeof a[Symbol.asyncIterator]=="function")for await(let i of a)yield i;else if(typeof a[Symbol.iterator]=="function")for(let i of a)yield i;else throw new Error("The function provided to flatMap must return an Iterable or AsyncIterable")}};return new n(r())}flatMap(e){return this.concatMap(e)}mergeMap(e){throw new Error("'mergeMap()' has not been overriden from base, and base flatMap() does not support concurrency.")}filter(e){let t=this.source,r=async function*(){for await(let s of t)await e(s)&&(yield s)};return new n(r())}takeWhile(e){let t=this.source,r=async function*(){for await(let s of t){if(!await e(s))return;yield s}};return new n(r())}take(e){let t=this.source,r=async function*(){let s=0;for await(let a of t){if(s>=e)return;yield a,s++}};return new n(r())}skipWhile(e){let t=this.source,r=async function*(){let s=!0;for await(let a of t)s&&!await e(a)&&(s=!1),s||(yield a)};return new n(r())}skipUntil(e){return this.skipWhile(async t=>!await e(t))}skip(e){return this.skipWhile(async()=>e-- >0)}limitUntil(e){return this.takeWhile(async t=>!await e(t))}concat(e){let t=this,r=async function*(){yield*t.source,yield*e.source};return new n(r())}merge(e){let t=this.source,r=async function*(){let s=[t[Symbol.asyncIterator](),e[Symbol.asyncIterator]()],a=s.map(i=>i.next());for(;a.length>0;)try{let{value:i,done:c}=await Promise.race(a),l=a.findIndex(h=>h===Promise.resolve({value:i,done:c}));c?(s.splice(l,1),a.splice(l,1)):(yield i,a[l]=s[l].next())}catch(i){throw i}};return new n(r())}zip(e){let t=this.source,r=async function*(){let s=t[Symbol.asyncIterator](),a=e[Symbol.asyncIterator]();for(;;){let i=await s.next(),c=await a.next();if(i.done||c.done)break;yield[i.value,c.value]}};return new n(r())}async forEach(e){for await(let t of this.source)await e(t)}async reduce(e,t){let r=t;for await(let s of this.source)r=await e(r,s);return r}async toArray(){let e=[];for await(let t of this.source)e.push(t);return e}async any(e){for await(let t of this.source)if(await e(t))return!0;return!1}async some(e){return this.any(e)}async every(e){for await(let t of this.source)if(!await e(t))return!1;return!0}async none(e){return!await this.any(e)}async find(e){for await(let t of this.source)if(await e(t))return t}async first(){return(await this.take(1).toArray())[0]}async last(){let e;for await(let t of this.source)e=t;return e}async count(){let e=0;for await(let t of this.source)e++;return e}async elementAt(e){return this.skip(e).first()}[Symbol.asyncIterator](){return this.source[Symbol.asyncIterator]()}};var Zn=!0,ne=!1,q=!1,Xr=!1,yr=`
`+"-".repeat(80)+`
`;function Je(n,e){let t={};e.forEach(r=>{n.hasOwnProperty(r)&&(t[r]=n[r])}),Object.getOwnPropertyNames(n).forEach(r=>{e.includes(r)&&!t.hasOwnProperty(r)&&(t[r]=n[r])});for(let r in n)e.includes(r)&&!t.hasOwnProperty(r)&&(t[r]=n[r]);return t}function Rt(n){if(!n)return;n=n.trim().toLowerCase();let e={".aac":"audio/aac",".abw":"application/x-abiword",".arc":"application/x-freearc",".avif":"image/avif",".avi":"video/x-msvideo",".azw":"application/vnd.amazon.ebook",".bin":"application/octet-stream",".bmp":"image/bmp",".bz":"application/x-bzip",".bz2":"application/x-bzip2",".cda":"application/x-cdf",".csh":"application/x-csh",".css":"text/css",".csv":"text/csv",".doc":"application/msword",".docx":"application/vnd.openxmlformats-officedocument.wordprocessingml.document",".eot":"application/vnd.ms-fontobject",".epub":"application/epub+zip",".gz":"application/gzip",".gif":"image/gif",".htm":"text/html",".html":"text/html",".ico":"image/vnd.microsoft.icon",".ics":"text/calendar",".jar":"application/java-archive",".jpeg":"image/jpeg",".jpg":"image/jpeg",".js":"text/javascript",".json":"application/json",".jsonld":"application/ld+json",".mid":"audio/midi",".midi":"audio/midi",".mjs":"text/javascript",".mp3":"audio/mpeg",".mp4":"video/mp4",".m4a":"audio/mp4",".m4b":"audio/mp4",".mpeg":"video/mpeg",".mpkg":"application/vnd.apple.installer+xml",".odp":"application/vnd.oasis.opendocument.presentation",".ods":"application/vnd.oasis.opendocument.spreadsheet",".odt":"application/vnd.oasis.opendocument.text",".oga":"audio/ogg",".ogv":"video/ogg",".ogx":"application/ogg",".opus":"audio/opus",".otf":"font/otf",".png":"image/png",".pdf":"application/pdf",".php":"application/x-httpd-php",".ppt":"application/vnd.ms-powerpoint",".pptx":"application/vnd.openxmlformats-officedocument.presentationml.presentation",".rar":"application/vnd.rar",".rtf":"application/rtf",".sh":"application/x-sh",".svg":"image/svg+xml",".tar":"application/x-tar",".tif":"image/tiff",".tiff":"image/tiff",".ts":"video/mp2t",".ttf":"font/ttf",".txt":"text/plain",".vsd":"application/vnd.visio",".wasm":"application/wasm",".wav":"audio/wav",".weba":"audio/webm",".webm":"video/webm",".webp":"image/webp",".woff":"font/woff",".woff2":"font/woff2",".xhtml":"application/xhtml+xml",".xls":"application/vnd.ms-excel",".xlsx":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",".xml":"application/xml",".xul":"application/vnd.mozilla.xul+xml",".zip":"application/zip",".7z":"application/x-7z-compressed"},t=n.slice(n.lastIndexOf(".")),r=e[t];if(r)return r;console.warn("Note, cannot figure out MIME type for file extension: "+t)}var Xe=["lastModified","name","type","size","webkitRelativePath","fullPath","isDirectory","isFile","SBitemNumber","SBitemNumberList","fileContentCandidates","fileContents","hash","SBparentEntry","SBparentNumber","SBfoundMetaData","SBfullName","browserFile","SBdirectoryReader","motherObject","webkitRelativePath"],Kt=()=>{let n=0;return{inc:async()=>(await new Promise(t=>setTimeout(t,0)),n++,n-1)}},en=!1;function tn(){en||(console.log("================================================"),console.log("Warning: you are running in 'local web page' mode"),console.log("on a browser that has some restrictions."),console.log(""),console.log("So far, looks like this browser will not let you"),console.log("navigate *into* directories that are drag-and-dropped"),console.log("Might also be having issues getting meta data,"),console.log("as well as getting the 'full' path of the file."),console.log("============================================"),en=!0),globalThis.directoryDropText&&(globalThis.directoryDropText.innerHTML="Click to choose directories<br />(drag and drop might not work))")}var je=class extends K{fileContentCandidates;isDirectory;isFile;motherObject;SBdirectoryReader;SBfoundMetaData;SBfullName;SBitemNumber;SBitemNumberList;SBparentEntry;SBparentNumber;webkitRelativePath;constructor(e){super(e),this.fileContentCandidates=e?.fileContentCandidates,this.isDirectory=e?.isDirectory,this.isFile=e?.isFile,this.motherObject=e?.motherObject,this.SBdirectoryReader=e?.SBdirectoryReader,this.SBfoundMetaData=e?.SBfoundMetaData,this.SBfullName=e?.SBfullName,this.SBitemNumber=e?.SBitemNumber,this.SBitemNumberList=e?.SBitemNumberList,this.SBparentEntry=e?.SBparentEntry,this.SBparentNumber=e?.SBparentNumber,this.webkitRelativePath=e?.webkitRelativePath}},ie=class n{constructor(e){this.callbacks=e;this.#e.add(".DS_Store"),this.#e.add("/.DS_Store"),this.#e.add(/.*~$/)}static version="3.20240407.1";finalFileList=new Map;currentFileList=[];static knownBuffers=new Map;#e=new Set;#t=Kt();#r=Kt();#n=new Map;#s=new Map;ignoreFile(e){if(this.#e.has(e))return!0;for(let t of this.#e)if(t instanceof RegExp&&t.test(e))return!0;return!1}extractFileMetadata(e){function t(r){return r}return new Promise(r=>{let s={};e instanceof File&&(e.name&&(s.name=e.name),e.size&&(s.size=e.size),e.type&&(s.type=e.type),e.lastModified&&(s.lastModified=e.lastModified),e.webkitRelativePath&&(s.webkitRelativePath=e.webkitRelativePath)),typeof FileSystemEntry<"u"&&e instanceof FileSystemEntry&&(e.name&&(s.name=e.name),e.fullPath&&(s.fullPath=e.fullPath),e.isDirectory!==void 0&&(s.isDirectory=e.isDirectory),e.isFile!==void 0&&(s.isFile=e.isFile),s.noGetMetaData=!0),typeof FileSystemFileEntry<"u"&&e instanceof FileSystemFileEntry&&(e.fullPath&&(s.fullPath=e.fullPath),e.isDirectory!==void 0&&(s.isDirectory=e.isDirectory),e.isFile!==void 0&&(s.isFile=e.isFile),e.file&&(s.file=e.file)),typeof FileSystemFileEntry<"u"&&e instanceof FileSystemFileEntry&&e.getMetadata?e.getMetadata(a=>{s.getMetaDataSize=a.size,s.getMetaDataModificationTime=a.modificationTime,e.file&&e.file(i=>{s.getMetaDataFile=i,s.getMetaDataType=i.type,r(s)},i=>{s.getMetaDataGetFileError=i,r(s)})},a=>{s.getMetaDataError=a,r(s)}):(s.noGetMetaData=!0,r(s))})}async scanFile(e,t){if(!e||this.ignoreFile(e.name))return;let r;if(e instanceof File)r=e.webkitRelativePath;else if(e instanceof FileSystemEntry)r=e.fullPath;else if(e instanceof FileSystemFileEntry)r=e.fullPath;else{console.warn("**** Unknown file type (should not happen):"),console.log(e);return}let s=await(t===-1?this.#r.inc():t);e.SBitemNumber=s;let a=t===-1?"":` (from item ${t})`;await this.extractFileMetadata(e).then(i=>{q&&console.log(`adding ${s}`),e.SBfoundMetaData=i;let c=new je(Je(e,Xe));c.motherObject=e;let l=`file ${s} ${a} `;l+=r===""?"name: '/"+e.name+"' ":"path: '/"+r+"' ",this.#n.set(l,c)}).catch(i=>{console.log("Error getting meta data for FILE (should NOT happen):"),console.log(e),console.log(i)})}scanFileList(e){if(e&&(ne&&console.log(`==== scanFileList called, files.length: ${e.length}`),e))for(let t=0;t<e.length;t++)this.scanFile(e[t],-1)}async scanItem(e,t){if(!e||this.ignoreFile(e.name))return;let r=await this.#t.inc();q&&(console.log(`scanItem ${r} ${e.name}`),console.log(e));let s="";if(e.SBitemNumber=r,t!==null&&(e.SBparentEntry=t,e.SBparentNumber=t.SBitemNumber,s=` (parent ${t.SBitemNumber}) `,t.SBfullName||(t.SBfullName=t.name),e.SBfullName=t.SBfullName+"/"+e.name),await this.extractFileMetadata(e).then(a=>{e.SBfoundMetaData=a}).catch(a=>{console.log("Error getting meta data for ITEM (should not happen):"),console.log(e),console.log(a)}),e.isDirectory){let a=this,i=e.createReader(),c=new je(Je(e,Xe));c.SBdirectoryReader=i,this.#n.set(`item ${r}: '/`+e.name+`' [directory] ${s}`,c),i.readEntries(function(l){l.forEach(async function(h){await a.scanItem(h,e)})},function(l){tn(),ne&&console.log(`Browser restriction: Unable to process this item as directory, '${e.name}':`),q&&console.log(l)})}else{let a=new je(Je(e,Xe));this.#n.set(`item ${r}: '/`+e.name+"' "+s,a),e.file(i=>{a.browserFile=i,this.scanFile(i,r)},function(){tn()})}}scanItemList(e){if(e){ne&&console.log(`==== scanItemList called, items.length: ${e.length}`);for(let t=0;t<e.length;t++){let r=e[t].webkitGetAsEntry();r?this.scanItem(r,null):(console.log("just FYI, not a file/webkit entry:"),console.log(e[t]))}}}afterOperation(e){setTimeout(()=>{(async()=>{console.log("-------DONE building #globalFileMap---------"),console.log(this.#n),console.log("--------------------------------------------");let t=new Map,r=new Map;this.#n.forEach((o,g)=>{if(!o.name)throw new Error("Should not happen (L653)");if(this.ignoreFile(o.name))q&&console.log(`Ignoring file '${o.name}' (based on ignoreFile)`);else if(q&&(console.log(`[${o.name}] Processing global file map entry: `),console.log(o)),o.SBitemNumber!==void 0){let p=r.get(o.SBitemNumber);if(p){let m=Je(o,Xe);Object.assign(m,p),o.fullPath&&(!m.fullPath||o.fullPath.length>m.fullPath.length)&&(m.fullPath=o.fullPath),m.fileContentCandidates.push(o),r.set(o.SBitemNumber,new je(m))}else{if(r.set(o.SBitemNumber,new je(Je(o,Xe))),p=r.get(o.SBitemNumber),!p)throw new Error("Should not happen (L669)");p.fileContentCandidates=[o]}}else if(o.fullPath)q&&console.log(`++++ adding path info for '${o.name}':
`,o.fullPath,o),t.set(o.name,o.fullPath);else throw new Error(`++++ file '${o.name}' has neither an SBitemNumber nor a fullPath (L664)`)}),console.log("-------DONE building candidateFileList---------"),console.log(r),console.log("-----------------------------------------------"),r.forEach((o,g)=>{o.SBfullName!==void 0&&"/"+o.SBfullName!==o.fullPath&&(console.warn("WARNING: SBfullName and fullPath/name do not match"),console.log(`Name: ${o.name}, fullPath: ${o.fullPath}, SBfullName: ${o.SBfullName}`),console.log(o));let p=o.SBfullName||o.webkitRelativePath+"/"+o.name;if(p!==void 0){o.isDirectory===!0?p+=" [directory]":o.isFile===!0&&(p+=" [file]"),o.size!==void 0&&o.isDirectory!==!0&&(p+=` [${o.size} bytes]`),o.lastModified!==void 0&&(p+=` [${o.lastModified}]`),q&&(console.log(`processing object ${g} unique name '${p}':`),console.log(o));let m=this.#s.get(p);if(m){let w=m.fullPath,x=m.fileContentCandidates,_=m.SBitemNumberList;if(Object.assign(m,Je(o,Xe)),w&&(!m.fullPath||w.length>m.fullPath.length)&&(m.fullPath=w),x&&(m.fileContentCandidates===void 0&&(m.fileContentCandidates=[]),m.fileContentCandidates.push(...x)),!_||o.SBitemNumber===void 0)throw new Error("Should not happen (L724)");_.push(o.SBitemNumber),m.SBitemNumberList=_}else{if(o.SBitemNumber===void 0)throw new Error("Should not happen (L739)");o.SBitemNumberList=[o.SBitemNumber],this.#s.set(p,o),m=r.get(p)}q&&(console.log(`... currentInfo for '${p}' (${p}):`),console.log(m))}else ne&&(console.log("++++ ignoring file - it's lacking fullPath (should be rare)"),console.log(o))}),console.log("-------DONE building #currentFileList---------"),console.log(this.#s),console.log("----------------------------------------------");async function s(o){return new Promise((g,p)=>{let m=new FileReader;m.onload=w=>{w.target===null||w.target.result===null||typeof w.target.result=="string"?g(null):g(w.target.result)},m.onerror=()=>{p(new Error("File reading failed"))},m.readAsArrayBuffer(o)})}async function a(o){return"file"in o?new Promise((g,p)=>{o.file(g,p)}):null}async function i(o){if(!o||!o.motherObject)return null;try{let g=o.motherObject instanceof File?o.motherObject:await a(o.motherObject);if(!g)return null;let p=K.MAX_SBFILE_CHUNK_SIZE,m=g.slice(0,p);await new Promise(x=>setTimeout(x,20));let w=await s(m);return w?{file:g,buffer:w}:null}catch(g){return console.warn(`Error processing file: ${o.name}, ${g}`),null}}async function c(o){for(let g=0;g<o.length;g++){let p=await i(o[g]);if(p!==null)return p}return ne&&(console.warn("findFirstResolved(): found nothing usable from this fileList"),console.log(o)),null}let l=[];if(this.#s.forEach((o,g)=>{o.fileContentCandidates&&!o.hash?l.push(new Promise(async p=>{if(!o.fileContentCandidates)throw new Error("Should not happen (L832)");c(o.fileContentCandidates).then(async m=>{if(Xr&&console.log(`got response for ${o.name}`),!m)q&&console.log(`... contents are empty for item ${g} (probably a directory)`);else{let w=I(await globalThis.crypto.subtle.digest("SHA-256",m.buffer)).slice(0,12);o.hash=w;let x=Z.getData(v.knownShards.get(w));x?(q&&console.log(`... duplicate file found for ${g}`),m.buffer=x):n.knownBuffers.get(w)?(q&&console.log(`... duplicate file found found in knownBuffers for ${g}`),m.buffer=n.knownBuffers.get(w)):(q&&console.log(yr,"Adding new contents of a file to knownBuffers:",o,yr,m,yr),n.knownBuffers.set(w,m.buffer)),o.size===void 0?(m.file&&m.file.size!==void 0?o.size=m.file.size:o.size=m.buffer.byteLength,q&&console.log(`... setting size for ${g} to ${o.size}`)):o.size!==m.buffer.byteLength&&ne&&console.log(`WARNING: file ${o.name} has size ${o.size} but contents are ${m.buffer.byteLength} bytes (future multi-handle)`),o.browserFile=m.file,q&&console.log(`... found contents for ${g} (first ${m.buffer.byteLength} bytes, file hash '${w}')`)}p()}).catch(m=>{q&&console.log(`couldn't read anything for ${g}`,m),p()})})):ne&&console.log(`skipping ${o.name} (item ${g})`)}),ne&&console.log("... kicked off all file promises"),await Promise.all(l).then(o=>{console.log("-------DONE adding to globalBufferMap ---------"),console.log(n.knownBuffers)}),this.#s.forEach(o=>{if(o.name){let g="/";if(o.SBfullName){if(!o.fullPath)throw new Error("Should not happen (L886)");g=("/"+o.SBfullName).substring(0,o.fullPath.lastIndexOf("/")+1)}else o.webkitRelativePath?g=("/"+o.webkitRelativePath).substring(0,o.webkitRelativePath.lastIndexOf("/")+1):o.fullPath?g=o.fullPath.substring(0,o.fullPath.lastIndexOf("/")+1):t.has(o.name)?g=t.get(o.name).substring(0,t.get(o.name).lastIndexOf("/")+1):q&&(console.log(`... no (further) path info for '${o.name}'`),console.log(o));g=g.endsWith("/")?g:g.concat("/"),q&&console.log(`... path for '${o.name}' is '${g}'`),o.isDirectory===!0&&(o.type="directory",o.size=0);let p=g+o.name,m="",w="";o.lastModified&&(w=new Date(o.lastModified).toLocaleString(),m+=` [${w}]`),o.size&&(m+=` [${o.size} bytes]`),o.hash?m+=` [${o.hash}]`:console.warn("[afterOperation] No hash? (L923)"),p+=m;let x=o;x.lastModified=w,x.path=g,x.fullName=p,x.metaDataString=m;let _=this.finalFileList.get(p);_?(ne&&console.log(`... overriding some values for ${p} (this is rare)`),_.size===void 0&&(_.size=x.size),_.type===void 0&&(_.type=x.type),_.lastModified===void 0&&(_.lastModified=x.lastModified),_.hash===void 0&&(_.hash=x.hash)):this.finalFileList.set(p,x),q&&(console.log(`File ${o.name} has info`),console.log(x))}}),console.log("-------DONE building finalFileList ---------"),console.log(this.finalFileList),Zn){let o=new Map(Array.from(n.knownBuffers.keys()).map(g=>[g,new Map]));for(let g of this.finalFileList.keys()){let p=this.finalFileList.get(g);if(p.type==="directory"||p.hash===void 0)q&&console.log(`... removing ${g} from final list (directory)`),this.finalFileList.delete(g);else{let m=p.name+p.metaDataString;if(p.path!=="/"){let w=o.get(p.hash).get(m);w?w.path.length>p.path.length?this.finalFileList.delete(g):(this.finalFileList.delete(w.fullName),o.get(p.hash).set(m,p)):o.get(p.hash).set(m,p)}}}ne&&console.log(o);for(let g of this.finalFileList.keys()){let p=this.finalFileList.get(g),m=p.name+p.metaDataString;if(p.path==="/"){if(!p.hash)throw new Error("Internal Error (L930)");let w=o.get(p.hash);w?w.get(m)?(q&&console.log(`... removing ${g} from final list (duplicate short name)`),this.finalFileList.delete(g)):q&&console.log(`... leaving ${g} in final list (unique short name)`):console.warn("Internal Warning (L1042)")}}}for(let o of this.finalFileList.keys()){let g=this.finalFileList.get(o),p=Rt(g.name);p&&g.type!==p&&(console.warn(`Mime type mismatch for ${o}: ${g.type} vs ${p} (we will overrule)`),g.type=p)}let h=Array.from(this.finalFileList.values()).sort((o,g)=>o.path.localeCompare(g.path)||o.name.localeCompare(g.name));ne&&(console.log("Table contents:"),console.log(h)),console.log("-------DONE with all file promises (clearing state) ---------"),this.#t=Kt(),this.#r=Kt(),this.#n=new Map,this.#s=new Map,this.currentFileList=h,e?e(h):(console.info("Note: no callback, so no update on tableContents:"),console.log(h))})()},50)}handleFileDrop(e,t){return e.preventDefault(),this.handleEvent(e,t,"[file drop]")}handleDirectoryDrop(e,t){return e.preventDefault(),this.handleEvent(e,t,"[directory drop]")}handleFileClick(e,t){e.preventDefault();let r=document.createElement("input");r.type="file",r.multiple=!0,r.accept="*/*",r.addEventListener("change",s=>{this.handleEvent(s,t,"[file click]")}),r.click()}handleDirectoryClick(e,t){e.preventDefault();let r=document.createElement("input");r.type="file",r.multiple=!0,r.webkitdirectory=!0,r.accept="*/*",r.addEventListener("change",s=>{this.handleEvent(s,t,"[directory click]")}),r.click()}async handleEvent(e,t,r){let s,a;if(e.dataTransfer)s=e.dataTransfer.files,a=e.dataTransfer.items;else if(e.target)e.target.files&&(s=e.target.files),e.target.items&&(a=e.target.items);else{console.log("Unknown event type (should not happen):"),console.log(e);return}Xr&&(console.log("Received items (DataTransferItemList):"),console.log(a),console.log("Received files:"),console.log(s)),this.scanItemList(a),this.scanFileList(s),this.afterOperation(t)}clearNewSet=()=>{let e=document.getElementById("uploadNewSetButton");e&&e.removeAttribute("disabled"),console.info("******** cleared current file list ********"),this.callbacks.processNewTable&&this.callbacks.processNewTable([]);let t=document.getElementById("uploadNewSetButton");t&&(t.style.display="none"),this.currentFileList=[],this.finalFileList.clear(),n.knownBuffers.clear()}};ne&&console.warn("==== SBFileHelper.ts "+ie.version+" loaded ====");var yt=(h=>(h.MSG_SIMPLE_CHAT="SIMPLE_CHAT_9WbWE53HnRy6",h.MSG_FILE_SET="FILE_SET_FEm4a3EW0cn1",h.MSG_NEW_SHARD="NEW_SHARD_eUp2cR96dH3E",h.MSG_USER_PRIVATE_DATA="USER_PRIVATE_DATA_R0FR1LWRRddE",h.MSG_NEW_USER_KEY="NEW_USER_KEY_20m0r6rFedac",h.MSG_CLAIM_PUBLIC_KEY="CLAIM_PUBLIC_KEY_8pc2FamHdrhW",h.MSG_CONTACT_ANNOUNCEMENT="CONTACT_ANNOUNCEMENT_mEe6d97kEbhR",h.MSG_REQUEST_MAIN="REQUEST_MAIN_1pE8de4bEWRE",h.MSG_PROVIDE_MAIN="PROVIDE_MAIN_Ea66FnFE9f5F",h))(yt||{}),rn=["SIMPLE_CHAT_9WbWE53HnRy6","FILE_SET_FEm4a3EW0cn1","NEW_SHARD_eUp2cR96dH3E","NEW_USER_KEY_20m0r6rFedac","USER_PRIVATE_DATA_R0FR1LWRRddE","CLAIM_PUBLIC_KEY_8pc2FamHdrhW","REQUEST_MAIN_1pE8de4bEWRE","PROVIDE_MAIN_Ea66FnFE9f5F","CONTACT_ANNOUNCEMENT_mEe6d97kEbhR"];var sn=!1,et=!1;var br=`
`+"+".repeat(76)+`
`;function nn(n,e){if(!n){let t=` <<<<[_sb_assert] assertion failed: '${e}'>>>> `;throw sn&&console.trace(t),new d(t)}}var bt=class{readyPromise;db;dbName="MessageCache";dbVersion=6;#e=!1;#t;knownMessageKeys=new Set;constructor(){this.#t=new Map,this.readyPromise=new Promise((e,t)=>{if("indexedDB"in globalThis){let r=indexedDB.open(this.dbName,this.dbVersion);r.onupgradeneeded=()=>{let s=r.result;s.objectStoreNames.contains(this.dbName)||(s.createObjectStore(this.dbName,{keyPath:"key"}),sn&&console.log("++++ onupgradeneeded called, created object store"))},r.onsuccess=()=>{this.db=r.result,et&&console.log("++++ SUCCESS in opening"),e(this)},r.onerror=()=>{t(`**** Database error ('${this.dbName}): `+r.error)}}else this.#e=!0,e(this)})}async getObjStore(e="readonly"){if(await this.readyPromise,this.#e)return this.#t;{nn(this.db,"Internal Error [L0032]");let r=this.db.transaction(this.dbName,e).objectStore(this.dbName);return nn(r,"Internal Error [L0035]"),et&&console.log("++++ getObjStore done",r),r}}async add(e,t){if(!(t instanceof ArrayBuffer))throw new d("Value not an ArrayBuffer. Internal Error [L0190]");if(this.#e){this.#t.set(e,t),this.knownMessageKeys.add(e),et&&console.log("Success in storing with key",e);return}else return new Promise(async(r,s)=>{let i=(await this.getObjStore("readwrite")).put({key:e,value:t});i.onsuccess=()=>{et&&console.log("Success in storing with key",e),r()},i.onerror=()=>{s("[add] Received error accessing keys")},this.knownMessageKeys.add(e)})}async get(e){return this.#e?this.#t.get(e):new Promise(async(t,r)=>{let a=(await this.getObjStore()).get(e);a.onsuccess=()=>{t(a.result?.value)},a.onerror=()=>{r("[get] Received error accessing keys")}})}async getKnownMessageKeys(e,t,r){if(this.#e){let[s,a]=this.getLowerUpper(e,t,r),i=new Set;for(let c of this.#t.keys())c>=s&&c<=a&&(i.add(c),this.knownMessageKeys.add(c));return i}else return new Promise(async(s,a)=>{let i=await this.getObjStore(),[c,l]=this.getLowerUpper(e,t,r),h=IDBKeyRange.bound(c,l,!1,!1),o=i?.getAllKeys(h);o||s(new Set),o.onsuccess=()=>{let g=new Set(o.result);this.knownMessageKeys=new Set([...this.knownMessageKeys,...g]),s(new Set(g))},o.onerror=()=>{a("[getKnownMessageKeys] Received error accessing keys")}})}async getKnownMessages(e,t,r){if(this.#e){let[s,a]=this.getLowerUpper(e,t,r),i=new Map;for(let[c,l]of this.#t)c>=s&&c<=a&&(i.set(c,l),this.knownMessageKeys.add(c));return i}else return new Promise(async(s,a)=>{let i=await this.getObjStore(),[c,l]=this.getLowerUpper(e,t,r),h=IDBKeyRange.bound(c,l,!1,!1),o=i?.getAll(h);o||(et&&console.log("++++ [getKnownMessages] unable to set up query (returning empty map"),s(new Map)),o.onsuccess=()=>{let g=o.result;et&&console.log(br,"++++ [getKnownMessages] result:",br,g,br),this.knownMessageKeys=new Set([...this.knownMessageKeys,...g.keys()]),s(new Map(g.map(p=>[p.key,p.value])))},o.onerror=()=>{a("[getKnownMessages] Received error accessing keys")}})}getLowerUpper(e,t,r){let s=r?`_${r}_`:"______",a=e+s+t.padEnd(26,"0"),i=e+s+t.padEnd(26,"3");return[a,i]}};var S=!1,wt=!1;function Ht(n,e){if(!n){let t=` <<<<[_sb_assert] assertion failed: '${e}'>>>> `;throw S&&console.trace(t),new d(t)}}var wr=class extends ft{constructor(t,r={}){super();this.ch=t;this.options=r;this.source=this.createSource()}uniqueMessageSequenceId=Symbol();async*_historySequence(t,r,s){let a=await this.ch.getHistory();wt&&console.log(u,"[MessageSequence] Fetching channel history from",u,a,u),S&&console.log(u,`[MessageSequence] History covers from ${a.fromTimestamp} to ${a.toTimestamp}`,u),yield*a.traverseMessagesGenerator(t<=r?t:r,r>=t?r:t,!s),S&&console.log(u,"[MessageSequence] Done fetching channel history ...",u)}async*_recentSequence(t,r,s,a,i){S&&console.log(u,"[MessageSequence] Fetching recent messages ...",u);let c=i?s:a,l=i?a:s;t=t.filter(g=>g>=c&&g<=l).sort((g,p)=>i?g-p:p-g),S&&console.log(u,`Fetching messages using getMessageMap(.. ${t.length} entries ..) ...`,u,t,u);let h=t.map(g=>C.composeMessageKey(r,g)),o=64;for(let g=0;g<h.length;g+=o){let p=h.slice(g,g+o);S&&console.log(u,"Fetching chunk:",u,p,u);let m=await this.ch.getMessageMap(new Set(p)),w=Array.from(m.values()).sort((x,_)=>i?x.serverTimestamp-_.serverTimestamp:_.serverTimestamp-x.serverTimestamp);S&&console.log(u,"Received chunk:",u,w.map(x=>x.body),u);for(let x of w)yield x}}async*_liveSequence(t,r){S&&console.log(u,"[MessageSequence] Switching to live stream ...",u),await this.ch.startRestartSocket();try{for(;;){let s=await t.dequeue();if(this.ch.closingDown){S&&console.log("[MessageSequence] ChannelStream is closing down, breaking out ...");break}if(s===null){S&&console.log("[MessageSequence] Queue is empty, breaking out ...");break}S&&console.log(u,"++++ MSG: ",s._id," [MessageSequence]",u);let a=s._id,{timestamp:i}=C.deComposeMessageKey(a);if(i>r)r=i,yield s;else{S&&console.log("[MessageSequence] Skipping message, already processed:",s);continue}}}catch(s){throw console.error("[getNewMessages] Error in getNewMessages:",s),s}}async*createSource(){try{await this.ch.ready;let{start:t=0,end:r=1/0,live:s=!1}=this.options,a=r>=t,i=this.ch.channelId;if(S&&console.log(u,"[MessageSequence] messageStream() options:",u,this.options,u,"Channel ID:",i,u,"Start:",t,"End:",r,"Live:",s,"Forward:",a,u),s&&!a||s&&r!==1/0)throw new d("[MessageSequence] Cannot start live stream in reverse or with an end timestamp");let c=C.LOWEST_TIMESTAMP,l=new Se;s&&this.ch.streamQueueArray.set(this.uniqueMessageSequenceId,l);let h=[];{let{historyShard:o,keys:g}=await this.ch.getMessageKeys(),p=Array.from(g.keys());wt&&console.log(u,`Found ${g.size} recent messages:`,u,g,u,"history shard:",o,u),h=p.map(m=>C.base4StringToTimestamp(C.deComposeMessageKey(m).timestamp)),h.sort((m,w)=>a?m-w:w-m),h=h.filter(m=>a?m>=t&&m<=r:m<=t&&m>=r)}a?(yield*this._historySequence(t,r,a),yield*this._recentSequence(h,i,t,r,a),s&&(yield*this._liveSequence(l,c))):(yield*this._recentSequence(h,i,t,r,a),yield*this._historySequence(t,r,a))}catch(t){throw console.error("[MessageSequence] Error in messageStream:",t),t}finally{S&&console.log("[MessageSequence] Cleaning up ..."),this.ch.streamQueueArray.delete(this.uniqueMessageSequenceId)}}[Symbol.asyncIterator](){return this.source[Symbol.asyncIterator]()}},Ce=class Ce extends C{static version="20240704.0";sbChannelStreamReady;static ReadyFlag=Symbol("SBChannelStreamReadyFlag");channelSocket;latestTimestampStr=C.LOWEST_TIMESTAMP;messageQueue=new Se;streamQueueArray=new Map;sb;streamStarted=!1;restartInProgress=!1;static globalMessageCache=new bt;messageCache=Ce.globalMessageCache;constructor(e,t){e===null&&t!==void 0?super(null,t):e===null&&!t?super():typeof e=="string"?super(e,t):super(e,t),Ht(this.channelServer,"Internal Error (channelServer not known) [L364]"),this.sb=new v(this.channelServer),this.sbChannelStreamReady=new Promise(async r=>{await super.ready,this[Ce.ReadyFlag]=!0,S&&console.log("[channelStream] ChannelStream ready"),r(this)})}get latestTimeStampDate(){return C.base4StringToDate(this.latestTimestampStr)}processMessage=e=>{Ht(typeof e<"u","Internal Error [L227]");let t=e._id,{channelId:r,timestamp:s}=C.deComposeMessageKey(t);return Ht(r===this.channelId,"Internal Error [L376]"),wt&&console.log(u,"[channelStream.processMessage] Evaluating time stamp",s,"against",this.latestTimestampStr,`
`,"                               ... eg comparing new value:",C.base4StringToDate(s),`
`,"                               ...          versus latest:",C.base4StringToDate(this.latestTimestampStr),`
`,"                               ... decision is to "+(s>this.latestTimestampStr?"UPDATE (and forward msg)":"SKIP"),`                               ... message:
`,e,`
`,u),s>this.latestTimestampStr?(this.latestTimestampStr=s,!0):(S&&console.log("[channelStream.processMessage] Skipping message, already processed:",e),!1)};processSocketMessage=async e=>{Ht(typeof e!="string","Internal Error [L250]");let t=e;this.streamStarted&&this.messageQueue.enqueue(t);for(let[r,s]of this.streamQueueArray)s.enqueue(t)};startRestartSocket=async()=>{if(this.closingDown)throw new d("ChannelStream is closing down, cannot restart socket");if(!this.restartInProgress){this.restartInProgress=!0;try{await this.sbChannelStreamReady,this.channelSocket?(S&&console.log(u,"[ChannelStream.startRestartSocket] RESTARTING channel socket ... "),this.channelSocket.reset()):(S&&console.log(u,"[ChannelStream.startRestartSocket] Starting channel socket ... "),this.channelSocket=new Ne(this.handle,this.processSocketMessage,this.protocol)),this.channelSocket.errorPromise.catch(e=>{this.closingDown||(console.error(u,"[ChannelStream.startRestartSocket] Error in channel socket:",e,u),console.warn("[ChannelStream.startRestartSocket] Will wait 1 second then restart"),setTimeout(()=>{S&&console.log("[ChannelStream.startRestartSocket] Restarting channel socket ... "),this.startRestartSocket()},2e3))}),await this.channelSocket.ready}catch(e){throw console.error("[ChannelStream.startRestartSocket] Error in startRestartSocket:",e),e}finally{this.restartInProgress=!1}S&&console.log("[ChannelStream.startRestartSocket] ... channel socket ready")}};updateCacheWithTheseKeys=async e=>{if(this.closingDown)throw new d("ChannelStream is closing down, cannot fetch messages");if(!Ve(e))throw new d("Internal Error [L338]");await this.messageCache.readyPromise;let t=[],r=await this.messageCache.getKnownMessageKeys(this.channelId,C.messageKeySetToPrefix(e)),s=Ce.difference(r,e);if(S&&console.log("[channelStream.fetchMessages] These are new messages we need to fetch:",s),s.size===0)return S&&console.log("[channelStream.fetchMessages] No new messages"),t;{let a=Array.from(s),i=v.MAX_MESSAGE_REQUEST_SIZE;for(let c=0;c<a.length;c+=i){let l=a.slice(c,c+i),h=await this.getRawMessageMap(new Set(l));S&&console.log("[channelStream.fetchMessages] New messages (RAW, these should pop up on stream):",h);for(let[o,g]of h)await this.messageCache.add(o,g),t.push(o)}S&&console.log("New messages added to cache")}return t.sort()};async getChannelHistory(){try{if(this.closingDown)throw new d("ChannelStream is closing down, cannot fetch messages");await this.sbChannelStreamReady;let e=await this.getHistory(),t=0;await e.traverseMessagesEncrypted(async(r,s)=>{wt&&console.log("++++ MSG: ",r," [getChannelHistory]");let a=D(s);await this.messageCache.add(r,a),t+=1}),S&&console.log(u,`[getChannelHistory] Added ${t} messages to cache`,u)}catch(e){throw console.trace("Error in getChannelHistory:",e),e}}syncCacheWithServer=async(e="0")=>{if(this.closingDown)throw new d("ChannelStream is closing down, cannot fetch messages");await this.channelReady;let t;try{t=await this.getMessageKeys(e)}catch(r){let s=`[channelStream.fetchCurrentMessageKeys] Error in fetchMessageKeys, cannot get updated keys (${r})`;if(s.includes("offline"))for(S&&console.log(u,"[channelStream.fetchMessageKeys] we are offline, we will keep trying",u);;){await new Promise(a=>setTimeout(a,1e3));try{t=await this.getMessageKeys(e);break}catch{S&&console.log("[channelStream.fetchCurrentMessageKeys] ... still offline, we will keep trying")}}else throw new d(s)}try{return wt&&console.log("[channelStream.fetchCurrentMessageKeys] Messages on server and shard:",t),await this.updateCacheWithTheseKeys(t.keys)}catch(r){let s=`[channelStream.fetchCurrentMessageKeys] Error, cannot get updated keys (${r})`;throw console.error(s),new d(s)}};async create(e,t){return await super.create(e,t),this}get ready(){return this.sbChannelStreamReady}get SBChannelStreamReadyFlag(){return this[Ce.ReadyFlag]}get channelId(){return super.channelId}static difference(e,t){return new Set([...t].filter(r=>!e.has(r)))}static union(e,t){return new Set([...e,...t])}static intersection(e,t){return new Set([...e].filter(r=>t.has(r)))}async*feedFromMessageCache(e){if(S&&console.log(u,gt,`[feedFromMessageCache] Called, prefix '${e}'`,`
`,gt,u),this.closingDown)throw new d("ChannelStream is closing down, cannot fetch messages");await this.sbChannelStreamReady,e||(e="0");let t=await this.messageCache.getKnownMessages(this.channelId,e),r=Array.from(t.keys()).sort();S&&console.log("[feedFromMessageCache] Sorted keys:",r);for(let s of r){let a=await this.messageCache.get(s);if(!a)throw new d("Internal Error [L523]");let i=L(a).payload;S&&console.log(`[feedFromMessageCache] Got a stored message, extracted:
`,i);let c=await this.extractMessage(i);c?(S&&console.log("[feedFromMessageCache] Got a well-formed message, time stamp:",c.serverTimestamp),await this.processMessage(c)?(S&&console.log(u,"++++ MSG: ",c._id," [feedFromMessageCache]",u),yield c):S&&console.log(`[feedFromMessageCache] Skipping this message, should we?
`,c)):S&&console.warn("[feedFromMessageCache] Got an undefined message (probably decryption issue)")}}async*getNewMessages(){if(this.closingDown)throw new d("ChannelStream is closing down, cannot fetch messages");await this.sbChannelStreamReady;try{for(;;){let e=await this.messageQueue.dequeue();if(e===null){S&&console.log("[getNewMessages] Queue is empty, breaking out ...");break}S&&console.log(u,"++++ MSG: ",e._id," [getNewMessages]",u),this.processMessage(e)&&(yield e)}}catch(e){throw console.error("[getNewMessages] Error in getNewMessages:",e),e}}async*start(e={}){if(this.closingDown)throw new d("[ChannelStream.start] ChannelStream is closing down, cannot fetch messages");if(this.streamStarted)throw new d("[ChannelStream.start] Stream already started (only one stream per channelStream object)");this.streamStarted=!0;let{prefix:t="",reverse:r=!1,live:s=!0}=e;if(r)throw r||s?new d("[ChannelStream.start] If running in reverse, cannot (currently) have prefix or run 'live'"):(S&&console.log(u,"[ChannelStream.start] Starting in REVERSE",u),new d("Reverse not implemented yet"));!t||t===""||t===""?(S&&console.log(u,"[ChannelStream.start] Starting from 'live' point of messages, nothing historical",u),s&&this.startRestartSocket(),yield*this.getNewMessages()):(S&&console.log(u,`[ChannelStream.start] Starting HISTORICALLY with prefix: ${t}`,u),this.latestTimestampStr=C.LOWEST_TIMESTAMP,s&&this.startRestartSocket(),await this.syncCacheWithServer(t),yield*this.feedFromMessageCache(t),s&&(yield*this.getNewMessages()))}async spawn(e={}){return new wr(this,e)}async close(){this.closingDown=!0,this.messageQueue.close(),this.channelSocket&&await this.channelSocket.close(),await super.close(),this[Ce.ReadyFlag]=!1}async send(e,t){return await this.ready,this.channelSocket?(S&&console.log("[channelStream] Sending via channelSocket ..."),this.channelSocket.send(e,t)):(S&&console.log("[channelStream] Sending via super (Channel) ..."),super.send(e,t))}};b([P],Ce.prototype,"channelId",1);var de=Ce;S&&console.log("==== ChannelStream '"+de.version+"' loaded ====");var me=!1,Ke=!1,Qn=!0,oe=`
`+"=".repeat(76)+`
`,tt=class{constructor(e,t){this.options=e;this.callbacks=t;this.SB=new v(this.options.channelServer),this.options.ledgerKey||(this.options.ledgerKey={salt1:new Uint8Array([236,15,149,57,16,61,101,82,24,206,80,70,162,38,253,33]),iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}),e.budgetHandle&&(this.budget=this.SB.connect(e.budgetHandle)),e.ledgerHandle&&(e.ledgerHandle.channelServer=e.channelServer,this.ledgerHandle=e.ledgerHandle),e.ledgerHandle&&e.ledgerPassPhrase&&(this.ledgerProtocol=new ze(e.ledgerPassPhrase,this.options.ledgerKey),this.ledger=new C(e.ledgerHandle,this.ledgerProtocol))}static version="3.20240519.0";SB;fileSetMap=new Map;budget;ledger;ledgerHandle;ledgerProtocol;newFileMap=new Map;toUpload=[];uploaded=[];initialized=!1;fetchPayload=_r;async spinUpStream(e,t){if(!Qn)throw new Error("This function is only for use with channel streams");let s=(await new de(e,t).ready).start({prefix:"0"});me&&console.log(oe,"[spinUpStream] Stream started",oe);for await(let a of s)Ke&&console.log("[spinUpStream] Message: ",a.body),await this.receiveMessage(a);me&&console.log(oe,"[spinUpStream] DONE")}init=async()=>{this.initialized=!0,this.options.ledgerHandle&&this.ledger&&this.ledgerProtocol?this.spinUpStream(this.options.ledgerHandle,this.ledgerProtocol):console.error("[SBFileSystem] No ledger handle or protocol, cannot initialize.")};doneUploadingSet=async()=>{if(!this.ledger||!this.options.budgetHandle)throw new Error("[SBFileSystem] Ledger or budget handle not set up, cannot upload sets.");if(console.log("++++ done uploading set"),this.newFileMap.size===0)throw new Error("Internal Error (L149)");this.newFileMap.forEach((a,i)=>{if(!a.hash)throw new Error("Internal Error (L154)");if(a.size&&a.size>K.MAX_SBFILE_CHUNK_SIZE)a.hashArray?a.handleArray=a.hashArray.map(c=>v.knownShards.get(c)):console.warn("[doneUploadingSet] Large file but 'hashArray' already clearee? Internal Warning (L193)"),a.hashArray=void 0;else{let c=v.knownShards.get(a.hash);if(!c)throw new Error("Internal Error (L199)");this.newFileMap.get(i).handleArray=[c]}});let e=D(this.newFileMap),t=I(await globalThis.crypto.subtle.digest("SHA-256",e)).slice(0,12),r=new K({hash:t,sb384app:!0,sb384appType:"fileSetV03",name:`FileSet ${Date.now()}`,type:"application/vnd.384.sb384app",fileMetaDataMap:this.newFileMap}),s=await this.SB.storage.storeData(r,this.options.budgetHandle);this.ledger.send({messageType:"FILE_SET_FEm4a3EW0cn1",fileSetShard:s}),this.callbacks.setProgressBarWidth&&this.callbacks.setProgressBarWidth(100),me&&console.log("++++ file set shard info has been sent as message on ledger")};uploadNewSet=async e=>{let t=null;if(!this.initialized)throw new Error("[SBFileSystem] Not initialized (L189).");if(!e||e.length===0)throw new Error("No files to upload");console.log("[uploadNewSet] new set:",e);try{this.newFileMap=new Map;for(let a of e){if(!a.hash)throw new Error("Internal Error (L195)");this.newFileMap.set(a.hash,a)}if(this.toUpload=[],this.uploaded=[],this.toUpload.length>0)return console.error("++++ already uploading files, please wait ..."),"[uploadNewSet] Already uploading a set of files, cannot (yet) upload sets in parallel.";let r=document.querySelector(".loading-bar");r?r.style.display="block":console.warn("loading bar not found");let s=[];for(let a of e){if(t)return console.error("[uploadNewSet] Error in previous file, aborting (L279):",t),t;if(!a.hash)throw new Error("Internal Error (L225)");if(a.size||(a.size=0),a.size>K.MAX_SBFILE_CHUNK_SIZE){if(!a.browserFile)throw new Error("Large file but no 'browserFile' to work with. Internal Error (L238)");me&&console.log("---- uploading LARGE file:",a),a.hashArray=[];let i=await a.browserFile.arrayBuffer(),c=K.MAX_SBFILE_CHUNK_SIZE,l=Math.ceil(a.size/c);for(let o=0;o<l;o++){if(await Z.paceUploads(),t)return console.error("[uploadNewSet] Error in previous file, aborting (L296):",t),t;let g=o*c,p=Math.min(a.size,(o+1)*c),m=i.slice(g,p),w=I(await crypto.subtle.digest("SHA-256",m)).slice(0,12);a.hashArray.push(w),s.push(this.uploadBuffer(m).catch(x=>{throw console.error("[uploadNewSet] Error uploading chunk (L307), will throw:",x),t=x.message,x}))}let h=a.hashArray.join("");a.hash=I(await crypto.subtle.digest("SHA-256",new TextEncoder().encode(h))).slice(0,12)}else{if(v.knownShards.has(a.hash)){me&&console.log(`---- skipping ${a.hash} shard (already known / published)`);continue}if(await Z.paceUploads(),t)return t;me&&console.log("---- uploading file:",a),s.push(this.uploadFile(a))}}return await Promise.all(s).catch(a=>{console.error("[uploadNewSet] Error in uploadPromises, propagated to 'all' (L329):",a),t=a.message}),console.log("++++ all files have been sent to be uploaded"),this.toUpload.length===0&&(console.log("++++ all files already uploaded"),this.doneUploadingSet()),t}catch(r){return console.error("[uploadNewSet] Interrupted uploads (L342):",r),r.message}};getFileBuffer=async e=>{if(ie.knownBuffers.has(e))return ie.knownBuffers.get(e);if(v.knownShards.has(e)){let t=await this.fetchPayload(v.knownShards.get(e));if(t instanceof ArrayBuffer)return t;throw new Error("Could not fetch buffer for hash: "+e)}else throw new Error("Cannot find contents of file (neither in globalBufferMap nor in knownShards)")};addFileSet=async e=>{if(!this.initialized)throw new Error("[SBFileSystem] Not initialized (L291).");if(!e.fileSetShard||!e.fileSetShard.id){console.warn("---- File set (meta) does not have a shard ID, skipping whole set");return}if(!e.fileSet||!(e.fileSet instanceof Map)){console.warn(`---- File set (meta) does not have any files ('fileSet' missing or is not a Map), skipping whole set: 
`,e);return}this.fileSetMap.set(e.fileSetShard.id,e),me&&console.log(`---- File set (meta) contents added:
`,e),Ke&&console.log(`---- ... fileSetMap is now:
`,this.fileSetMap);let t=0,r=0,s=new Date(0);for(let a of e.fileSet.values())if(t++,r+=a.size||0,a.lastModified&&typeof a.lastModified=="string"){let i=new Date(a.lastModified);i>s&&(s=i)}Ke&&console.log(oe,"File Set Meta:",`
`,`Count: ${t}`,`
`,`Total Bytes: ${r}`,`
`,`Last Modified: ${s}`,`
`,"Sender UserID: ",e.senderUserId,oe),this.callbacks.newFileSet&&(e.count=t,e.totalBytes=r,this.callbacks.newFileSet(e))};receiveMessage=async e=>{if(typeof e=="string")return Ke&&console.log(oe,"[SBFileSystem] ++++ Received message (string), ignoring: '",e,"'",oe),null;let t=e.body;switch(Ke&&console.log(oe,`[SBFileSystem] ++++ Received message:
  `,t,oe),t.messageType){case"FILE_SET_FEm4a3EW0cn1":Ke&&console.log("==== File Set Message received");let r;if(t.fileSetShard)r=new K(await this.downloadFile(t.fileSetShard)).fileMetaDataMap;else if(t.fileSet)r=t.fileSet;else{console.error("No file set or file set shard in message");break}if(!(r instanceof Map)){console.warn("[SBFileSystem] Received file set, but it doesn't contain a file set (ignoring)");break}let s={_id:e._id,senderUserId:e.sender,senderPublicKey:e.senderPublicKey,serverTimestamp:e.serverTimestamp,fileSet:r,fileSetShard:t.fileSetShard};await this.addFileSet(s),me&&console.log("---- Received MSG_FILE_SET: ",s);break;case"NEW_SHARD_eUp2cR96dH3E":this.toUpload.length>0&&this.toUpload.includes(t.hash)&&(this.uploaded.push(t.hash),this.callbacks.setProgressBarWidth&&this.callbacks.setProgressBarWidth(Math.ceil(this.uploaded.length/this.toUpload.length*100)),this.uploaded.length===this.toUpload.length&&(console.log("++++ all files uploaded"),this.doneUploadingSet(),this.toUpload=[],this.uploaded=[])),v.knownShards.set(t.hash,t.handle),v.knownShards.set(t.hash.slice(0,12),t.handle);break;case"PING":console.info("[SBFileSystem] PING message received");break;default:return Ke&&console.info("---- Ignoring unknown message type:",t.messageType),null}return t.messageType};uploadBuffer=async(e,t)=>{if(!this.initialized)throw new Error("[SBFileSystem] Not initialized (L406).");if(!this.ledger||!this.options.budgetHandle)throw new Error("[SBFileSystem] Ledger or budget handle not set up, cannot upload files. (L395");let r=I(await crypto.subtle.digest("SHA-256",e)).slice(0,12);if(!t)t=r;else if(t!==r)throw new Error(`[uploadBuffer] Hash mismatch: ${t} !== ${r}`);if(v.knownShards.has(t))return console.info(`[uploadBuffer] Shard already known: ${t}`),v.knownShards.get(t);this.toUpload.push(t);let s=await this.SB.storage.storeData(e,this.options.budgetHandle);await s.verification,console.log("WE GOT BACK HANDLE:",s),v.knownShards.set(t,s),v.knownShards.set(t.slice(0,12),s),ie.knownBuffers.delete(t);let a={messageType:"NEW_SHARD_eUp2cR96dH3E",hash:t,handle:s,senderUsername:this.options.username};return await this.ledger.send(a),s};uploadFile=async e=>{if(!this.initialized)throw new Error("[SBFileSystem] Not initialized (L522).");if(!this.ledger||!this.options.budgetHandle)throw new Error("[SBFileSystem] Ledger or budget handle not set up, cannot upload files. (L395");if(Z.paceUploads(),console.log("[uploadFile] file:",e),!e.hash)throw new d("file.hash is missing");let t=ie.knownBuffers.get(e.hash);if(!t)throw new d(`**** failed to find buffer for ${e.hash}`);console.log(oe,`For file hash '${e.hash}', uploading buffer:`,t,oe);let r=await this.uploadBuffer(t,e.hash);console.log("++++ File shard has been sent on channel:",r)};async fetchData(e){return this.SB.storage.fetchData(e)}async downloadFile(e){e=await this.fetchData(e);let t=new K(await this.SB.storage.fetchPayload(e));return t._SBFSVersion!=="2024-02-01-0002"&&console.warn("[SBFS] File version not supported, or is not an SBFile. Will try to process anyway."),t}};me&&console.warn("==== SBFileSystem.ts "+tt.version+" loaded ====");var Yn=new Set(["application/gzip","application/json","application/octet-stream","application/pdf","application/rtf","audio/aac","audio/mpeg","audio/mp4","audio/ogg","audio/opus","audio/wav","audio/webm","font/woff","font/woff2","image/avif","image/bmp","image/gif","image/jpeg","image/png","image/svg+xml","image/tiff","image/webp","text/csv","text/plain","text/xml","video/mp2t","video/mp4","video/mpeg","video/ogg"]),Jn={SBFileSystem:tt,safe:Yn};function vr(n){console.log("==== loaded SBImageHelper lib version 0.0.10 ====");let e=0;if(n[e++]!==255||n[e++]!==216)return;let t=new DataView(n.buffer,n.byteOffset,n.byteLength);for(;e+4<n.byteLength;){if(n[e++]!==255)continue;let r=n[e++];if(n[e]==255)continue;let s=t.getUint16(e,!1);if(e+s>n.byteLength)return null;if(s>=7&&(r==192||r==194))return{progressive:r==194,bitDepth:n[e+2],height:t.getUint16(e+3,!1),width:t.getUint16(e+5,!1),components:n[e+7]};e+=s}return null}var vt=class{constructor(e,t,r){this.findFileDetails=e;this.docElements=t;this.callbacks=r;if(!this.docElements.table)throw new Error("table is null");if(!this.docElements.tableFileInfo)throw new Error("tableFileInfo is null")}tableRows=new Map;hasChanges=!1;addRow(e,t,r){this.tableRows.set(e,{rowContents:t,metaData:r}),this.tableRows=new Map([...this.tableRows.entries()].sort().reverse()),this.docElements.table.innerHTML="";for(let[s,a]of this.tableRows){let i=document.createElement("tr"),c=document.createElement("td");c.textContent=a.rowContents,this.callbacks.rowClicked&&c.addEventListener("click",()=>{this.docElements.expandAll&&(this.docElements.expandAll.style.display="flex"),this.docElements.collapseAll&&(this.docElements.collapseAll.style.display="flex"),this.callbacks.rowClicked(a.metaData)}),i.appendChild(c),this.docElements.table.appendChild(i)}}renderTable(e,t,r,s,a,i=!0){console.log("Will render:",e.length,"rows:"),console.log(e);let c=e,l=t.length;if(l!==r.length){console.error("Number of headings and editable columns must match");return}let h=[],o=document.createElement("table"),g=document.createElement("thead"),p=document.createElement("tr"),m=document.createElement("button"),w=document.createElement("button"),x=document.querySelector(`#${s}`);ye=0;let _=[];t.forEach(B=>{if(r[ye++]!==null){let T=document.createElement("th");T.textContent=B.label,_.push(B.key),p.appendChild(T)}}),g.appendChild(p),o.appendChild(g);let fe=document.createElement("tbody"),Me="";e.forEach((B,T)=>{let G=8+((B?.path?.match(/\//g)||[]).length-1)*12;if(B.path!==Me){Me=B.path;let j=document.createElement("tr"),R=document.createElement("td");R.colSpan=l,R.textContent=B.path,R.style.paddingLeft=G+"px",j.appendChild(R),j.classList.add("folder"),j.dataset.name=B.path,fe.appendChild(j)}let A=document.createElement("tr");if(A.classList.add("file"),A.dataset.filePath=B.path,l>Object.keys(B).length){console.error("Not enough columns in table for row: ",T);return}if(Object.keys(B).forEach((j,R)=>{if(_.includes(j)&&r[R]!==null){let H=document.createElement("td");if(R==0&&(H.style.paddingLeft=G+12+"px"),r[R]){let Q=document.createElement("input");Q.type="text",Q.value=B[j],Q.addEventListener("input",()=>{B[j]=Q.value}),H.appendChild(Q)}else if(r[R]!==null)if(j==="type"&&B[j]!==""){if(!B.hash)throw new Error("row.hash is null");H.dataset.hash=B.hash,H.dataset.type=B.type,H.dataset.path=B.path,H.dataset.name=B.name,H.innerHTML+=B[j].slice(0,20)+"<span class='preview-file-icon'>\u{1F50D}\u{1F440}</span><span style='margin-left: 8px' class='download-file-icon'>\u2B07\uFE0F</span><span style='margin-left: 8px' class='copy-384-link-icon'>\u{1F504}</span>"}else H.textContent=B[j];A.appendChild(H)}}),i){let j=document.createElement("button");j.textContent="Remove",j.addEventListener("click",()=>{this.docElements.uploadNewSetButton&&this.docElements.uploadNewSetButton.setAttribute("disabled","true"),A.classList.add("slated-for-deletion"),this.hasChanges=!0,m.removeAttribute("disabled"),w.removeAttribute("disabled"),j.setAttribute("disabled","true"),console.log("slated for deletion: ",T),h.push(B.hash)});let R=document.createElement("td");R.appendChild(j),A.appendChild(R),A.classList.contains("slated-for-deletion")&&A.classList.remove("slated-for-deletion")}fe.appendChild(A)}),o.appendChild(fe),i&&(m.setAttribute("id","saveBtn"),m.textContent="Save",m.addEventListener("click",()=>{this.docElements.uploadNewSetButton&&this.docElements.uploadNewSetButton.removeAttribute("disabled"),console.log("hit save button. original:"),console.log(c),e.forEach((B,T)=>{if(h.includes(B.hash))throw new Error("slatedForDeletion needs to be updated")}),console.log("new:"),console.log(e),this.hasChanges=!1,m.setAttribute("disabled","true"),w.setAttribute("disabled","true"),this.renderTable(e,t,r,s,a)}),o.appendChild(m),w.setAttribute("id","cancelBtn"),w.textContent="Cancel",w.addEventListener("click",()=>{this.docElements.uploadNewSetButton&&this.docElements.uploadNewSetButton.removeAttribute("disabled"),this.hasChanges=!1,m.setAttribute("disabled","true"),w.setAttribute("disabled","true"),console.log("hit cancel button. original:",e),this.renderTable(c,t,r,s,a)}),this.hasChanges?(m.removeAttribute("disabled"),w.removeAttribute("disabled")):(m.setAttribute("disabled","true"),w.setAttribute("disabled","true")),o.appendChild(w)),x.innerHTML="",x.appendChild(o);function kt(B){var T=document.querySelectorAll('tr[data-file-path="'+B+'"]');console.log("toggling children: ",T);for(var V=0;V<T.length;V++)console.log("toggling: ",T[V]),T[V].style.display=T[V].style.display=="none"?"":"none"}for(var rt=document.querySelectorAll("tr.folder"),ye=0;ye<rt.length;ye++)rt[ye].addEventListener("click",function(){this.dataset.name?(console.log("Toggling children: ",this.dataset.name),kt(this.dataset.name)):console.error("this.dataset.name is null");var B=document.querySelectorAll('tr[data-file-path="'+this.dataset.name+'"]');console.log("click on"),console.log(this),console.log(this.dataset.name),console.log("found these children"),console.log(B);for(var T=0;T<B.length;T++)B[T].style.display=B[T].style.display=="none"?"":"none"});document.querySelectorAll(".preview-file-icon").forEach(B=>{B.addEventListener("click",T=>{if(!(T.target instanceof HTMLElement))throw new Error("event.target is not an HTMLElement");if(!this.callbacks.previewFile)throw new Error("config.callbacks.previewFile is null");let V=T.target.parentElement?.dataset.type,G=T.target.parentElement?.dataset.hash,A=this.findFileDetails(G);if(console.log("file",A),!A)throw new Error("file not found in fileSetMap (?) ... new issue");this.docElements.tableFileInfo.innerHTML="";let j=document.createElement("thead"),R=document.createElement("tbody"),H=v.knownShards.get(G),Q={name:A.name,size:A.size,type:A.type,lastModified:A.lastModified,SBDetails:null};H&&(Q.SBDetails=`${H.id}.${H.verification}`);for(let[nt,st]of Object.entries(Q)){let se=document.createElement("tr"),be=document.createElement("th");be.textContent=nt;let we=document.createElement("td");we.textContent=st,se.appendChild(be),se.appendChild(we),R.appendChild(se)}this.docElements.tableFileInfo.appendChild(j),this.docElements.tableFileInfo.appendChild(R),this.callbacks.previewFile(G,V)})}),document.querySelectorAll(".download-file-icon").forEach(B=>{B.addEventListener("click",T=>{if(console.log(this.callbacks),!(T.target instanceof HTMLElement))throw new Error("event.target is not an HTMLElement");if(!this.callbacks.downloadFile)throw new Error("config.callbacks.downloadFile is null");let V=T.target.parentElement?.dataset.type,G=T.target.parentElement?.dataset.hash,A=this.findFileDetails(G);if(console.log("file",A),!A)throw new Error("file not found in fileSetMap (?) ... new issue");this.docElements.tableFileInfo.innerHTML="";let j=document.createElement("thead"),R=document.createElement("tbody"),H=v.knownShards.get(G),Q={name:A.name,size:A.size,type:A.type,lastModified:A.lastModified,SBDetails:null};H&&(Q.SBDetails=`${H.id}.${H.verification}`);for(let[nt,st]of Object.entries(Q)){let se=document.createElement("tr"),be=document.createElement("th");be.textContent=nt;let we=document.createElement("td");we.textContent=st,se.appendChild(be),se.appendChild(we),R.appendChild(se)}this.docElements.tableFileInfo.appendChild(j),this.docElements.tableFileInfo.appendChild(R),A.name||(console.error("[renderTable] file.name is null?"),A.name="<UNKNOWN>"),this.callbacks.downloadFile(G,V,A.name)})}),document.querySelectorAll(".copy-384-link-icon").forEach(B=>{B.addEventListener("click",T=>{if(!(T.target instanceof HTMLElement))throw new Error("event.target is not an HTMLElement");if(!this.callbacks.copyLink)throw new Error("config.callbacks.copyLink is null");let V=T.target.parentElement?.dataset.type,G=T.target.parentElement?.dataset.hash,A=this.findFileDetails(G);if(console.log("file",A),!A)throw new Error("file not found in fileSetMap (?) ... new issue");this.docElements.tableFileInfo.innerHTML="";let j=document.createElement("thead"),R=document.createElement("tbody"),H=v.knownShards.get(G),Q={name:A.name,size:A.size,type:A.type,lastModified:A.lastModified,SBDetails:null};H&&(Q.SBDetails=`${H.id}.${H.verification}`);for(let[nt,st]of Object.entries(Q)){let se=document.createElement("tr"),be=document.createElement("th");be.textContent=nt;let we=document.createElement("td");we.textContent=st,se.appendChild(be),se.appendChild(we),R.appendChild(se)}this.docElements.tableFileInfo.appendChild(j),this.docElements.tableFileInfo.appendChild(R),this.callbacks.copyLink(G,V)})})}};async function kr(n,e,t){if(console.log("previewFile",n,e,t),!n||!(n instanceof ArrayBuffer))throw new Error("[browserPreviewFile] data not found or not an ArrayBuffer");let r="allow-same-origin allow-scripts allow-popups allow-forms allow-modals allow-top-navigation";if(!t||!t.mainDoc||!t.preview||!t.maxButton)throw new Error("previewFile: docElements not found or incomplete");let s=t.preview;if(!s)throw new Error("browserPreviewFile: preview element not found");if(s.innerHTML="",s.style.minHeight="100%",s.style.display="flex",e==="text/html"){let a=t.mainDoc.createElement("iframe");a.setAttribute("id","myIframe"),a.setAttribute("sandbox",r),a.style.width="100%",a.style.height="100%",s.appendChild(a),t.maxButton.style.display="";let i=new TextDecoder().decode(n);if(!a.contentWindow)throw new d("previewFile: iframe.contentWindow not found");a.contentWindow.document.open(),a.contentWindow.document.write(i),a.contentWindow.document.close()}else if(e.startsWith("image/")){s.style.display="block";let a=new Blob([n],{type:e}),i=URL.createObjectURL(a),c=t.mainDoc.createElement("img");c.style.width="100%",c.style.objectFit="contain",c.src=i,t.maxButton.style.display="none",s.appendChild(c)}else{s.style.minHeight="768px";let a="This file might not show correctly or might be auto-downloaded.",i=t.mainDoc.createElement("iframe");if(!i)throw new Error("previewFile: iframe element not found");if(i.setAttribute("id","myIframe"),i.style.width="100%",s.appendChild(i),!i.contentWindow)throw new Error("previewFile: iframe.contentWindow not found");i.contentWindow.document.open(),i.contentWindow.document.write("<html><head></head><body><p>"+a+"</p></body></html>"),i.contentWindow.document.close();let c=new Blob([n],{type:e}),l=URL.createObjectURL(c);setTimeout(()=>{i.src=l,t.maxButton.style.display="",i.addEventListener("unload",()=>{URL.revokeObjectURL(l)})},200)}}async function Sr(){try{let n=await navigator.serviceWorker?.getRegistrations()||[];await Promise.all(n.map(r=>r.unregister())),localStorage.clear(),sessionStorage.clear(),document.cookie.split(";").forEach(r=>{document.cookie=r.trim().split("=")[0]+"=;expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/"});let e=await indexedDB.databases();await Promise.all(e.map(r=>{r.name&&indexedDB.deleteDatabase(r.name)}));let t=await caches.keys();await Promise.all(t.map(r=>caches.delete(r))),console.info("... done.")}catch(n){console.error("Error clearing something:",n)}}var Xn={BrowserFileHelper:ie,BrowserFileTable:vt,serviceWorker:Ee,fileViewer:kr,images:{readJpegHeader:vr},getMimeType:Rt,clearBrowserState:Sr};var es={api:v,types:yt,typeList:rn,stream:de,keys:De};var an={salt1:new Uint8Array([166,7,217,206,20,225,139,8,157,23,48,13,113,93,140,233]),iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"};function ue(n,e,t){let r=t.value||t.get||t.set;function s(){if(!this.initialized)throw new Error(`[AppMain] Cannot access ${e} before initialization.`)}if(r){let a=function(...i){return s.call(this),r.apply(this,i)};t.value&&(t.value=a),t.get&&(t.get=a),t.set&&(t.set=function(i){s.call(this),r.call(this,i)})}return t}var W=class W extends xe{#e;#t;#r;#n;protocol;#s;#o;#l={};#i=new Map;#c="officer stitch stretched";#a=!1;static#d=0;on=W.on;off=W.off;emit=W.emit;constructor(){if(super(),W.#d++,W.#d>1)throw new Error("[AppMain] An os384 app should only have one 'main' class.")}async init(){if(this.#a){console.warn("[AppMain] Already initialized, skipping init.");return}console.log("[AppMain]] Init");let e=await fetch("/384.manifest.json");try{this.#l=await e.json(),console.log(`[AppMain] Manifest file contents:
`,JSON.stringify(this.#l,null,2),`
`)}catch(t){this.#l={},console.error("[AppMain] Error loading manifest file, ignoring it:",t,e)}for(let t of this.#l.channels)this.#i.set(t.name,t);this.#i.get("budget")&&(this.#s=this.#i.get("budget")?.handle),this.#i.get("ledger")&&(this.#o=this.#i.get("ledger")?.handle,this.#c=this.#i.get("ledger").passphrase),this.protocol=new ze(this.#c,an),this.#e=this.#l.channelServer,this.#a=!0}get initialized(){return this.#a}get channelServer(){if(!this.#e)throw new Error("[AppMain] No channel server");return this.#e}get ledgerHandle(){if(this.#o)return this.#o;throw new Error("[AppMain] No ledger handle")}get ledgerChannel(){if(this.#t)return this.#t;if(!this.#o)throw new Error("[AppMain] No ledger handle");return new C(this.ledgerHandle,this.protocol).ready}get budgetHandle(){if(this.#s)return this.#s;throw new Error("[AppMain] No budget handle")}get budgetChannel(){if(this.#n)return this.#n;if(!this.#s)throw new Error("[AppMain] No budget handle");return new C(this.budgetHandle,this.protocol).ready}get keyInfo(){return an}get manifest(){return this.#l}get parameters(){return this.#l.parameters?this.#l.parameters:{}}getChannel(e){return this.#i.get(e)}async processLedgerMessages(){if(!this.#o){console.warn("[AppMain] No ledger handle, skipping processLedgerMessages");return}if(this.#r)throw new Error("[AppMain] Ledger stream already running (restarting not yet supported)");this.#r=new de(this.ledgerHandle,this.protocol);let e=this.#r.start({prefix:"0"});for await(let t of e)typeof t.body=="string"?console.info("[processMessages] received string message (ignoring):",t.body):W.emit(`ledgerMessage_${t.body.type}`,t.body)}};b([ue],W.prototype,"channelServer",1),b([ue],W.prototype,"ledgerHandle",1),b([ue],W.prototype,"ledgerChannel",1),b([ue],W.prototype,"budgetHandle",1),b([ue],W.prototype,"budgetChannel",1),b([ue],W.prototype,"keyInfo",1),b([ue],W.prototype,"manifest",1),b([ue],W.prototype,"parameters",1),b([ue],W.prototype,"getChannel",1),b([ue],W.prototype,"processLedgerMessages",1);var Br=W;var xr=4096,Kc={STORAGE_SIZE_UNIT:xr,STORAGE_SIZE_MIN:8*xr,STORAGE_SIZE_MAX:4096*xr,MAX_BUDGET_TRANSFER:1024*1024*1024*1024*1024,MAX_SB_BODY_SIZE:65536,MAX_MESSAGE_SET_SIZE:ce.MAX_MESSAGE_SET_SIZE,MESSAGE_HISTORY_BRANCH_FACTOR:ce.MESSAGE_HISTORY_BRANCH_FACTOR},ts={CHANNEL_STORAGE_MULTIPLIER:8,CHANNEL_STORAGE_MULTIPLIER_TTL_ZERO:1/8};var rs=new Set(["text/plain","text/html","text/css","text/javascript","text/xml","text/csv","application/json","application/javascript","application/xml","application/xhtml+xml","application/rss+xml","application/atom+xml","image/svg+xml"]);function ns(n){return rs.has(n)}/*!
 * Copyright 2023-2024 384, Inc.
 * "384" and "os384" are registered trademarks.
 * https://384.co
 */var Hc="3.20241018.0",ss=!1;ss&&console.log("++++ Setting DBG0 to TRUE ++++");export{Br as AppMain,ft as AsyncSequence,ie as BrowserFileHelper,vt as BrowserFileTable,C as Channel,v as ChannelApi,De as ChannelKeys,Ne as ChannelSocket,de as ChannelStream,ht as ClientDeepHistory,Le as DeepHistory,ut as HistoryTree,Ge as HistoryTreeNode,bt as MessageCache,Se as MessageQueue,yt as MessageType,lt as NEW_CHANNEL_MINIMUM_BUDGET,ze as Protocol_AES_GCM_256,_e as Protocol_ECDH,Ie as SB384,ae as SBApiFetch,Ze as SBCrypto,d as SBError,xe as SBEventTarget,K as SBFile,tt as SBFileSystem,Ee as SBServiceWorker,ce as ServerDeepHistory,Z as StorageApi,te as _appendBuffers,I as arrayBufferToBase62,$ as arrayBufferToBase64url,D as assemblePayload,it as b62regex,Y as base62ToArrayBuffer,Rr as base62ToBase64,X as base64ToArrayBuffer,Te as base64ToBase62,Wn as boot,hr as bootstrapJsLib,mt as bootstrapLoaderClass,Xn as browser,kr as browserPreviewFile,es as channel,Sr as clearBrowserState,Ut as compareBuffers,L as extractPayload,Tt as fetchDataFromHandle,Jn as file,jt as generatePassPhrase,kn as generateStorageToken,mr as generateStrongKey,cr as generateStrongPin,dr as generateStrongPin16,Ye as getDomainDetails,Rt as getMimeType,Kn as hydrateKey,$t as isBase62Encoded,Qt as isSBFile,he as isSBUserId,ns as isTextLikeMimeType,ve as jsonParseWrapper,Qe as loadShard,vr as readJpegHeader,fr as recreateStrongKey,U as sbCrypto,ts as serverApiCosts,xn as stringify_ObjectHandle,nr as stripChannelMessage,Vn as strongphrase,En as utils,ir as validate_ChannelApiBody,Fe as validate_ChannelHandle,Oe as validate_ChannelMessage,ot as validate_ObjectHandle,Ft as validate_SBChannelData,le as validate_SBStorageToken,Hc as version};
